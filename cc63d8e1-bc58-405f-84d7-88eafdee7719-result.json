{"name": "Test - crud record ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001F1D049B940>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D08EAC20>\n\n    @allure.title('Test - crud record ')\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"update\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,True,\"name\")\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_workflow.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "459c71ab-7481-48c5-ac09-bcbc7d01be9f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f4fd2d34-1d49-43c7-b235-4b3adf2cd331-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1d21b664-6c85-49ce-85b6-bff88b9bc510-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "920c41e9-7253-4ba5-afba-e47cb741745d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "384bb987-782e-4de0-b457-85f861d600ab-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0ae7e8b4-2463-4d81-90b3-d5a3cd978e41-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'dev'"}], "start": 1749014230857, "stop": 1749014234785, "uuid": "8f0486bd-7b63-450d-9365-2e817dc81608", "historyId": "8cfdcf974e704d628700c640c0cdeae3", "testCaseId": "afd9ddea709b6fe93a0748baefcd22ee", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_crud", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "52404-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}]}