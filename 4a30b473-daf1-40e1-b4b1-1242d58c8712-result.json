{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001E7BC903130>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E7BDED7670>\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "aa70b07e-280c-439b-9c04-117e281ca594-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "709a762b-790a-4051-b193-e0fa9a5f403a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "cb0be1db-04cb-4b29-98c3-ff4c289b4d30-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "64bcf28d-ef26-42e5-95ac-a5a7c4c79790-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d6cfd013-5e10-42e8-bd93-ec26e2a81718-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "797f00d6-460f-42c0-8ca2-44fd25381771-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "81bc4988-9d80-4fa5-b479-757492418c7c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "922185b4-6b63-4209-bd06-a5675fd43099-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "ef84cb65-3dff-4f93-8020-fb68a87e5adb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4bb500dd-1ff4-486c-8546-9506f6f527ba-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0d103769-6392-408a-a3a3-1ecbbe0f5196-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "8fc919ac-9342-4ea1-92d3-c651c1fe3451-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8f3e0203-29af-4c5e-963c-fd0562882402-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "23953a1b-7e0e-416e-a4d3-277265aec197-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9be15e6c-e4fa-4f26-b8d6-f51823b0b66e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "785f1f30-0a4f-4a74-83d9-937e6d935c90-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d7061146-8a4f-493a-8933-32daa4a258a2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5b6fea8b-eb6f-482c-bc43-60726bdeba99-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_SIP.json'"}], "start": 1748496329385, "stop": 1748496340865, "uuid": "33957305-7ea4-4182-8876-6bc099b67c6e", "historyId": "6fd80bcf6ed1fc0324f489703b83de54", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "44636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}