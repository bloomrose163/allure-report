{"name": "Test - CRUD - create service orchestration profile, display the service orchestration profile and check this profile can be deleted", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000001C3BF78DFC0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C3C0FABE50>\n\n    @allure.feature('CREATE')\n    @allure.issue('GCPT-14626')\n    @allure.title('Test - CRUD - create service orchestration profile, display the service orchestration profile and check this profile can be deleted')\n    def test_create_sop_crud(self,base_api):\n        json_data = load_body(\"service_orchestration_profile_create\")\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response.status_code == 200\n        model_id = response.json()['_id']\n        print(\"the diff with create body as following: \\n\" , DeepDiff(json_data,response.json()))\n    \n        # create the entity again\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response.status_code == 409\n    \n        # get configuration profile info\n        response_get = base_api.get_by_id_no_org(endpoints[\"configuration\"],model_id)\n>       assert response_get.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_service_orchestration_profile.py:57: AssertionError"}, "attachments": [{"name": "Request Info", "source": "14655d88-2402-480f-830f-00ee67058749-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "36d62518-167a-4cb3-95d9-ccdb374af830-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0f78c8a5-a822-4293-8911-c16ad8ef334c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "29af0e35-f260-4df0-9b5a-952bca5dba39-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "def0de38-6342-45b3-9e82-8f6cfc0311ed-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "651932ce-d0df-40d1-bba2-9419ea372311-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}], "start": 1749201255119, "stop": 1749201259561, "uuid": "f8165d5c-3904-4a1c-8014-5a5b0f990aa2", "historyId": "6f6da280ad139fc36095d9b733de460a", "testCaseId": "8bb4f2c33f62ec8d424d5e1abc015e49", "fullName": "testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_sop_crud", "labels": [{"name": "feature", "value": "CREATE"}, {"name": "epic", "value": "ACS Service Orchestration Profile API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_service_orchestration_profile"}, {"name": "subSuite", "value": "TestServiceOrchestrationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "44708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_service_orchestration_profile"}], "links": [{"type": "issue", "url": "GCPT-14626", "name": "GCPT-14626"}, {"type": "tms", "url": "CTM-315046", "name": "CTM-315046"}]}