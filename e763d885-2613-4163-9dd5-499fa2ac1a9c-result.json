{"name": "Test - CRUD - create service orchestration profile with profile, bandwidth ", "status": "broken", "statusDetails": {"message": "KeyError: 'test'", "trace": "self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002802B11E9B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002802B5C47C0>\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n>       bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:172: in create_get_id\n    response = self.create(endpoint,json_data,need_random, field)\nutils\\base_api_acs.py:165: in create\n    return self.request(method='POST',endpoint=endpoint,json=json_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002802B5C47C0>\nmethod = 'POST', endpoint = 'service-orchestration-profile', kwargs = {}\nurl = 'http://acs-api.testx.xilac.net/cc/service-orchestration-profile'\nheaders = {'Content-Type': 'application/json', 'X-Calix-ClientID': 'KTd0rgovlUvdihkkHGnIMCV23Z8c5Uh1', 'accept': 'application/json', 'x-Calix-Accesstoken': 'AnMR8w9fo23tzDPMqFa10GsLAYYZ'}\ncookies = None, params = None, data = None\njson_data = {'category': 'Bandwidth', 'downstreamCIR': 100, 'name': 'service_orchestration_profileRpIROz', 'orgId': '', ...}\nfiles = None\n\n    def request(self, method, endpoint, **kwargs):\n        url = self.base_url + endpoint\n        headers= Default().headers\n        headers = kwargs.pop(\"headers\", headers)\n        cookies = kwargs.pop(\"cookies\", None)\n        params = kwargs.pop(\"params\", None)\n        data = kwargs.pop(\"data\", None)\n        json_data = kwargs.pop(\"json\", None)\n        files = kwargs.pop(\"files\", None)\n        timeout = kwargs.pop(\"timeout\", 10)\n        no_org = kwargs.pop(\"no_org\", False)\n        # TODO  placeholder\n        start_time = time.time()\n        merged_params = self._merge_params(params,no_org)\n        if \"orgId\" and json_data and \"orgId\" in json_data:\n>            json_data[\"orgId\"] = ENV_CONFIG[self.env][\"orgId\"]\nE            KeyError: 'test'\n\nutils\\base_api_acs.py:70: KeyError"}, "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749781688921, "stop": 1749781688921, "uuid": "a89ee889-7867-4b89-a660-9dcab5b7fd92", "historyId": "de71351b7485759406bea1c8c11cf382", "testCaseId": "5316706d9cdf91d3cd928aded797f27f", "fullName": "testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_video", "labels": [{"name": "epic", "value": "ACS Service Orchestration Profile API"}, {"name": "feature", "value": "UPDATE"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_service_orchestration_profile"}, {"name": "subSuite", "value": "TestServiceOrchestrationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_service_orchestration_profile"}], "links": [{"type": "tms", "url": "CTM-315046", "name": "CTM-315046"}]}