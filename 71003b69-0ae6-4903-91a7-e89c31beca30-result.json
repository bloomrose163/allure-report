{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001E7BC8E3040>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E7BDC8EE90>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "b5834bd5-b512-494b-9a45-c19fe12d08d5-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e71a68cd-4e30-4fe8-8416-e66c7ecdb641-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2966a45c-9b66-4615-882e-933f65cc84fe-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e748a085-4ab6-45fd-ae02-1797771550ee-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b8d4d293-2321-4fd8-9bb9-338008614937-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "377c864d-7e32-4812-97ee-ee05b3df7cf1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "53a9c234-7c69-49e1-8934-31113c020ca8-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "390ed5b7-e0bc-4d6c-918f-9b794aed825d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e3bd636a-4678-4e62-80a3-c8aa76d93eb0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "db337d17-c991-4482-9cb8-511df4d91978-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "167005af-5407-4418-8784-6cdf7e226ceb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b46b9f1d-457f-422b-83c6-d515895777ca-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d1ce7a28-5f70-4d80-a9f9-8c66a34a3bf6-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "dbb0cae6-6310-428f-adf7-4e79a4b84927-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d040e77f-a219-4dad-a64f-261e747384ff-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c714bf68-31dc-4d3d-87e4-71e2464d4ccd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "41d00ea1-0537-4c53-8e4f-e5c8a54bda78-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d633da8f-e91a-4d15-96e4-fa855b0f7135-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1748496316506, "stop": 1748496328231, "uuid": "f6dc0e9a-4959-459a-b31f-ba0d82ab0f6c", "historyId": "fc02644e1952cc4fe745a497de8be42e", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "44636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}