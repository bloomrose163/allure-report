{"name": "Test - crud record ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000020EF9E4D120>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB4D1AB0>\n\n    @allure.title('Test - crud record ')\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"update\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,True,\"name\")\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_workflow.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "5e8dbceb-6e42-46c2-b21a-6e47ca83cb41-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e541219d-7583-4a4b-87c6-5e508a2c212a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6c09e560-63f1-47df-a0d2-b7110fdbf76b-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3541342b-76d5-4ff3-ba04-c28e93ff5cf5-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2ee22865-8987-41ae-bcc5-fa6bbe1b4ea2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f96afa27-593f-483e-ad6a-df75f11fd87b-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1748341744790, "stop": 1748341748224, "uuid": "1b96c49f-5b59-4277-bf3d-cad1ade25a12", "historyId": "ce94767f27f842d643289db6d5ac0ddc", "testCaseId": "afd9ddea709b6fe93a0748baefcd22ee", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_crud", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "42176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}]}