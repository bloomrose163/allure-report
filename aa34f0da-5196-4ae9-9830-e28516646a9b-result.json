{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000243E93FF100>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243E962D3C0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "e788c1b5-b4fa-4f5b-9806-16a85eccc9a0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "8274a83f-f08d-4a01-bfc1-d8e0687a515b-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8b557373-9929-4562-ad70-3cb3f29cf21a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "13967fdd-b4ce-4ee9-9910-660b370a3975-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d887a167-66d5-4b1c-840c-be7be31c3aff-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3e95b414-89c7-4ea5-9f38-8973b4972bdd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "534aed0e-0d72-4e33-a7a3-89019e1ba574-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "24faa599-e7ac-4330-9a57-8d0e178291a1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6c1c3ea9-c3a0-4afc-8f7b-7d1ae8815e9b-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f3af675f-0244-4833-a3ed-5412d143a209-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f0cc713b-0f73-4b76-946d-92cd4b9a2f11-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4bc5408f-2b31-40dc-b976-4a9f381231c5-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4011cca2-a1c7-4e8a-963c-40b28f334b33-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fd11d89c-3219-40c9-965e-9bc6aaa6b95d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "affcbc6f-ea03-4bd7-827c-d946c41b2799-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ee17c2f8-5b51-4426-98c7-388dcad6cae2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "838474cb-9420-4d09-bfb4-1aefe7a37176-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f134e0e6-134c-4dbb-9109-fcbe1db0f9d8-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749233944574, "stop": 1749233961403, "uuid": "8ca599fd-3be2-4258-bdf9-f345e0c81e26", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "36908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}