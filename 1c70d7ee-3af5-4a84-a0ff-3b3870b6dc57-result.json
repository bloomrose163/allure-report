{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000233633D7D30>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000233635CC1C0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "d0e54516-1654-49af-9460-a233dea2fafa-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b4382424-a326-4e83-8c23-75f27adeb049-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "14105f28-0410-4136-85f3-6c6c4c74ae00-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c608770e-c540-4807-9f2c-0f58a01709ee-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f5f4b423-c7a9-4516-981a-fc6899863c85-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "2c486b32-5d1a-4049-92be-9209add19a6a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "75fbb428-5b91-49cb-9752-35e09d24c33e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fe10a919-093d-4b21-85c1-20e4aa2a24f1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7f2687fb-9e79-4c5d-bf86-7129bb9bfc42-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fba34dd9-3f24-4452-ba1c-ba53c8da5e74-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0db49eba-62f1-4019-b512-7e83db280ee1-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "bedfbce3-da09-47b5-849d-2bded1752ee6-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "a42db74e-cf27-498f-a0e9-6885dd721e2a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "022733c3-2a71-439e-adb0-ff1cc8c6815f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "aa0357fd-b8ad-450d-8177-a874e3a4baa4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "6ca571cf-cad5-444b-80c3-eeec916ab611-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e7fc7624-5c81-47f9-9256-c7e2bf6a6ea0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "85f243ec-beed-42ca-9acb-3e7654ccf0dc-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749320235480, "stop": 1749320252441, "uuid": "efa30b32-eb4d-44a8-a34b-c67eadc46836", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "18960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}