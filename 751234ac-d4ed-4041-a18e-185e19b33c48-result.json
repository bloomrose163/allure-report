{"name": "Test - create static system group, create static group members , display the system group and check this group can't be deleted", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 403\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000020EFA09DC90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB6AA230>\n\n    @allure.title('Test - create static system group, create static group members , display the system group and check this group can\\'t be deleted')\n    def test_create_group_static(self,base_api):\n        # create a static system group\n        response = base_api.create(endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        member_endpoint = 'static-group-member'\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(member_endpoint,json_data,need_random=False, field=None)\n        member_id = response_member.json()['_id']\n        assert response_member.status_code == 200\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n            # delete the group\n        response_delete= base_api.delete(endpoint,params,static_group_id)\n>       assert response_delete.status_code == 403\nE       assert 400 == 403\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:272: AssertionError"}, "attachments": [{"name": "Request Info", "source": "b8c4269c-de95-4d31-a8ec-ec8b9cf28c13-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3a9fb67c-14e1-457d-a141-e51d465ef921-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "beea4e9d-2e49-41db-aa81-90eb42729a26-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0d93654e-e923-4c6e-8714-1c99a5910cf1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "912e4a54-4aa2-4067-a24a-ff0ad187694f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a8a56e7c-0081-48e6-893c-74d7a4489fd7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9915773a-e00a-4605-993d-45e8e0563b7d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "976ff4e5-9817-4456-917b-f6a071cf7b18-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1748341686746, "stop": 1748341692028, "uuid": "f8ed5539-ba93-460d-9ff6-084c7d799308", "historyId": "6419f39ea8ee9a26f43b002bb19b56f9", "testCaseId": "bb412d322b69c066407431398e48218b", "fullName": "testcase.ACS.test_system_group.TestSystemGroup#test_create_group_static", "labels": [{"name": "epic", "value": "Test - SystemGroup API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_system_group"}, {"name": "subSuite", "value": "TestSystemGroup"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "42176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_system_group"}]}