{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000263F66C1120>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263F958BAC0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "8c900f04-d9f3-4341-9ade-12413fb7d030-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7f470b66-eb35-4ff5-8df2-7593dc7ab4ba-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "a1f662e1-b125-446d-8371-54cff63e7788-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7929dc54-12cd-4718-bee7-42fbb79fc3c3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7c64ed6d-3e86-4df9-8b98-88167383dc1d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "1b45bcd6-727e-4367-9eee-e7287acb6f0a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b2d89114-9eaa-43bd-9fbe-fbe3ad39eace-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c4b08782-0c82-4455-b1d9-69c2a622e92a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "abd396b5-d794-40ba-ba3e-85f07a0fd662-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0c284424-a17d-48ba-9933-816b5c4889cb-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d1b8fa69-1530-4b7a-bc41-51bb5beb07d8-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "78da838c-0848-43f0-a00b-afa71a123ced-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "074ad49f-5d64-4e34-b560-e63bc55172cc-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e00e44aa-2389-482c-b62f-8171a363dc70-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b2998bc1-0fc8-4926-b15f-ac593bfda4bb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e350708f-ed73-4137-9f18-bcd1866e7fa0-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2abf8696-d478-4571-bbdd-75bec400a73c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "2e7d5b00-58e4-41c0-8e1e-42ef94821e72-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1750098201109, "stop": 1750098237604, "uuid": "60cfc9bf-4458-4e8e-8a48-7c288067c6d3", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "2488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}