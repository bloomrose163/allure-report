{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001FEFF6ACCA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FEFFD624A0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "b77467a4-8a2e-4c54-a59d-1424bf48b075-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fd91f5e9-e309-4ad4-83f1-253fca77e79a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0589e4dc-481c-4e32-b31a-a116fae91189-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a2346e2b-f951-45fb-989f-44bb96fc157b-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "15528027-db27-4936-b9da-7feb32feae23-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "26a8b474-304e-4cde-b9ff-e89b46c5ccb2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "68e62ecf-4475-4b0d-a1b7-a21cbf0014ab-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "8cbbddef-102d-44be-9a4e-afda5c7dd85e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7c42ece2-7038-4f92-a98e-3fc2be93e9e4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fba04703-338c-40a7-9e7b-298e8474f4f0-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "67d2f695-ed85-4e13-8963-eb6794e23ccb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ee252e55-77ac-4085-851b-eedf446fba9c-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "457a2828-ec4e-4857-95ae-4ce5d27363cc-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "6758c0a6-89c4-4509-8db6-3c1a6e9c03cd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4838d630-2565-4b29-8570-83f9ec9f5546-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "48101ad9-5457-4dff-8cdf-f2d4ac4997ac-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "a8359f43-259a-47d4-8752-9e51ed95390e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f72f970a-a251-4eb0-9868-13c8ac1b7382-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749451723266, "stop": 1749451743597, "uuid": "0188d634-db0d-4524-8128-e47a57ba557a", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}