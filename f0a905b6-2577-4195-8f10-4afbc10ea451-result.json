{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001D2C19D5B10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C4907340>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "4021a0b2-4171-4c44-9f69-cc5de662f089-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d321c690-dee6-4ba8-95e4-e967de88d25a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2a6dd6e4-5642-4b38-927b-05fbeb2962b0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "518a16bc-d5f8-4dba-b47b-a8789426880f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f6703c2e-ea66-4a25-b029-f14d022578eb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e4e95526-57f3-487e-bc22-0e08fd96db7d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "00f81da5-bb88-4acc-a422-49404ff0ac5a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4c5d2b0f-d7a7-4944-a447-c8a56d21c54e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "bbb31e43-ee9a-4d39-8fab-196ab0149f95-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7841a219-1d01-4aed-b468-4d6786913e77-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6aff31b0-91ee-4cf9-ae53-97cbf5cec193-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e0bc7338-dabe-4463-a750-b150be8823e2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f4f4ae9b-fe51-44ae-849f-c9eaaf26b948-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f9b539f9-c4d0-46ac-af34-90c317d11a78-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "5f678c5e-33d4-4c77-87bb-44f19e455926-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ebe66261-6e34-44bd-bbf4-8d85d4aec255-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "55eea63f-9149-48e9-816a-ca33f9813622-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "70fd9d2d-c4ff-449e-b8d7-67ac036ea018-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749493433888, "stop": 1749493456895, "uuid": "d331360e-8bef-4f79-80dc-868a0ba57168", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "27544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}