{"name": "Test - create static group member with patameters", "status": "broken", "statusDetails": {"message": "PermissionError: [Errno 13] Permission denied: 'C:\\\\git\\\\gcp_acs_api_mid.xlsx'", "trace": "self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001FF64FDD960>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF6642B1C0>\nparam = {'memberInfo': 'eaec5289-e4a3-476e-ad2b-561ea5b9881a'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"04:bc:9f:21:d0:6d\"\n        },\n        {\n            \"memberInfo\":\"ponreg123\"\n        },\n        {\n            \"memberInfo\":\"eaec5289-e4a3-476e-ad2b-561ea5b9881a\"\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create a static system group\n        group_endpoint = 'group'\n>       response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_static_group_member.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:151: in create\n    return self.create_with_jsondata(endpoint,json_data,need_random,field)\nutils\\base_api_acs.py:157: in create_with_jsondata\n    return self.request(method='POST',endpoint=endpoint,json=json_data)\nutils\\base_api_acs.py:81: in request\n    self.attach_to_allure(method, url, params, data, json_data, headers, response)\nutils\\base_api_acs.py:119: in attach_to_allure\n    self.write_json_to_excel('C:\\git\\gcp_acs_api_mid.xlsx',request_json,response_json)\nutils\\base_api_acs.py:145: in write_json_to_excel\n    workbook.save(file_path)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\workbook\\workbook.py:386: in save\n    save_workbook(self, filename)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>, file = 'C:\\\\git\\\\gcp_acs_api_mid.xlsx'\nmode = 'w', compression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None, *, strict_timestamps=True):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n        self._strict_timestamps = strict_timestamps\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'C:\\\\git\\\\gcp_acs_api_mid.xlsx'\n\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1249: PermissionError"}, "attachments": [{"name": "Exception", "source": "86200964-7170-4bbf-8fa2-4c26e4c8ba42-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_api", "value": "'dev'"}, {"name": "param", "value": "{'memberInfo': 'eaec5289-e4a3-476e-ad2b-561ea5b9881a'}"}], "start": 1748591252881, "stop": 1748591253326, "uuid": "618b0b76-0e68-45cb-a083-e0f6b6699a46", "historyId": "540d98efe65050671aeb5644d3f6ad9f", "testCaseId": "e9e4b5b35b12263a856563c79857a15f", "fullName": "testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param", "labels": [{"name": "feature", "value": "CREATE"}, {"name": "epic", "value": "ACS Stati cGroup Member API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_static_group_member"}, {"name": "subSuite", "value": "TestStaticGroupMember"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "28084-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_static_group_member"}], "links": [{"type": "tms", "url": "CTM-312349", "name": "CTM-312349"}]}