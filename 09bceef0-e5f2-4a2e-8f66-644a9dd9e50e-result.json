{"name": "Test - crud record ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001FEFF800D30>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FEFFE91990>\n\n    @allure.title('Test - crud record ')\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"update\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_put = base_api.update(endpoint,model_id,json_data,True,\"name\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n            # get info\n        name = \"test_workflow_11\"\n        new_param={\"name\": name.upper(),\"limit\": 3}\n        response_get = base_api.get_list_by_param(endpoint,new_param)\n        assert response_get.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:176: AssertionError"}, "attachments": [{"name": "Request Info", "source": "193e27f5-1199-409b-9b40-115140661592-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "55c00c00-07d9-4968-ad11-64b8f0734881-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1f0b007c-46c8-47bc-bed5-39ab382d1ebe-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "13dd8328-24a5-4e1a-963d-d4737327fc99-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "391b3e13-da4f-4aa1-9e69-1d80c678869e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "288a013c-b330-4c5e-b7fb-b68b6c9769ca-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "165d1108-ccc6-4fbd-87b3-dfb3d29d50f8-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d2951999-62c3-4499-818f-be8a2453abc0-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "de3d163a-0ab5-4333-88bf-363e626e0212-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ec4fd76a-ce0f-4f4b-8f24-6cdebbfbda09-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749452642881, "stop": 1749452654519, "uuid": "f3ac05e3-1ac5-4201-a4f7-9ba47ad3d0cd", "historyId": "ce94767f27f842d643289db6d5ac0ddc", "testCaseId": "afd9ddea709b6fe93a0748baefcd22ee", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_crud", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}]}