{"name": "Test - create provisioning record and get id", "status": "broken", "statusDetails": {"message": "KeyError: 0", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000019F99DC8340>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:197: KeyError"}, "attachments": [{"name": "Request Info", "source": "f271d7df-fe9f-48e2-bfd7-db6ae538ea75-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "65d70d8e-78b4-4a54-89c0-cec674febf7a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6f14f375-28c6-472e-a4eb-6779295c954a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0b3c55af-2203-4c50-81ff-696a8778c35c-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'dev'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_MGCP.json'"}], "start": 1748590169248, "stop": 1748590170179, "uuid": "4d196068-1d32-4910-a999-e7c1050d80b7", "historyId": "dddefc9e1e37bf704c358b6f733af724", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "23348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}