{"uid":"2a9b9623922dfaa5","name":"Test - create record twice ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_create","historyId":"fd6f0d401a81d1b3b9eb5c79cd70bebf","time":{"start":1747910162935,"stop":1747910163979,"duration":1044},"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006552A40>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007FB04C0>\n\n    @allure.title('Test - create record twice ')\n    def test_create(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        response = base_api.get_list_by_param(endpoint,{\"limit\": 1})\n        assert response.status_code == 200\n        json_data = load_json(file_path[\"workflow\"])\n        groups = list(response.json()[0][\"groups\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,False,\"name\")\n>       assert response_create.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_workflow.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747910047428,"stop":1747910047530,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1747910047530,"stop":1747910049127,"duration":1597},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1747910162933,"stop":1747910162934,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006552A40>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007FB04C0>\n\n    @allure.title('Test - create record twice ')\n    def test_create(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        response = base_api.get_list_by_param(endpoint,{\"limit\": 1})\n        assert response.status_code == 200\n        json_data = load_json(file_path[\"workflow\"])\n        groups = list(response.json()[0][\"groups\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,False,\"name\")\n>       assert response_create.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_workflow.py:44: AssertionError","steps":[],"attachments":[{"uid":"1a86610bf02cda57","name":"Request Info","source":"1a86610bf02cda57.json","type":"application/json","size":142},{"uid":"2a7d51aeb5fe1783","name":"Response Info","source":"2a7d51aeb5fe1783.json","type":"application/json","size":1566},{"uid":"322efd128482e1c8","name":"Request Info","source":"322efd128482e1c8.json","type":"application/json","size":541},{"uid":"689689d1d00b835a","name":"Response Info","source":"689689d1d00b835a.json","type":"application/json","size":143}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"24568-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2a9b9623922dfaa5.json","parameterValues":["'aws'"]}