{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000140065503A0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007F7F1C0>, file_path = './testdata/ACS/system_group_dynamic.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    # @pytest.mark.parametrize('file_path',file_paths.values())\n    @pytest.mark.parametrize('file_path',[file_paths[\"dynamic\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create(endpoint,file_path,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record , not support this PUT in ACS-NG\n        # json_data = load_json(file_paths[\"update\"])\n        # response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"name\")\n        # assert response_put.status_code == 200\n        # # aws return 200 and null body when put configuration profile\n        # if base_api.env != \"aws\":\n        #   assert response_put.json()['_id'] == model_id\n        #   print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n         # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n        response_delete= base_api.delete(endpoint,params,model_id)\n        assert response_delete.status_code == 404\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n>       assert response_get.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_system_group.py:140: AssertionError"}, "attachments": [{"name": "Request Info", "source": "824865fb-b530-4e5b-b487-b1944113a2aa-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "161a322a-05f5-4338-8a12-afaa1910f232-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1919f026-a498-421b-926f-6602c45b4df0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "14fcf56c-9e98-4d1f-98e9-ec5ce593a91b-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0e6e0192-3b9e-493b-805c-6d39e9319168-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d06d11ab-eb2c-4b76-bc86-e2ee18a3ae33-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "71fc5841-bd6a-4050-8d60-631ad6705a79-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7b6ae4fc-01e2-4b48-b794-8a80b84058f8-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "c61c9652-e9dc-43c3-ac34-7c00438e2971-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9a7d45c1-9e20-4a3c-a316-f06d4e20a255-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/system_group_dynamic.json'"}], "start": 1747910149660, "stop": 1747910152355, "uuid": "b1a660b2-635a-4850-a06b-9f193fcc4a42", "historyId": "87e8c836f76e82165f49036f51bc24d1", "testCaseId": "9fc5ecdbcda3d9d6f991d64e4b541c98", "fullName": "testcase.ACS.test_system_group.TestSystemGroup#test_crud", "labels": [{"name": "epic", "value": "Test - SystemGroup API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_system_group"}, {"name": "subSuite", "value": "TestSystemGroup"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "24568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_system_group"}]}