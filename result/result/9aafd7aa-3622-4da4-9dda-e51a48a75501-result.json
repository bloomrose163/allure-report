{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000140065907C0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007FFC4C0>, file_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    # @pytest.mark.parametrize('file_path',[file_path[\"service_off\"],file_path[\"H248\"],file_path[\"tdmgw\"],file_path[\"sip\"],file_path[\"mgcp\"]])\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "105ad817-9b11-4423-afaf-456a2a05c5db-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9f078285-57dd-4659-9675-df18c5856b96-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "fdfe9c06-92bd-4633-8cf9-0d1777deca78-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "904c895e-9d3a-4839-a8af-94cc422cea61-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "93299919-bb2d-4c7f-bd4d-56b707298b5d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "caa02af8-a363-4bd2-9933-7e925fe7fa25-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d5043dfc-cd5c-4da0-b0b8-2c7f228256d4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "13ac162d-2c1e-426e-9207-78dc36f9a311-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8fb42c3d-f660-4109-9635-a85e51f80cce-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d0eaf10e-33d9-408e-a6d7-7f13c5487aca-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "aaaf2213-b95a-4fe8-925b-d6b29d9fee57-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "53f4fbd2-4123-4472-a721-bae0343bcce6-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "df68517b-6e00-4ad1-add4-d9fa9dcafacf-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "56c0b975-8e7f-499f-8f10-fa9ae60079b4-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "242fdcdf-782d-435b-88b5-e6fc139d7a36-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "fd8b7557-4a29-473e-b0a7-3444b8e3c819-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d4e7230c-e0cc-43b4-ac26-55928a2b8ed3-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "70969314-2ebb-4480-abf9-b83ad3cfd5b7-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1747910118850, "stop": 1747910123626, "uuid": "76ba35f2-0898-4488-9dd4-e63c913c30c2", "historyId": "36a260bec491b376f6257a1df08cf3be", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "24568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}