{"name": "Test - create provisioning record and get id", "status": "broken", "statusDetails": {"message": "KeyError: 0", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000027E7AB5EF20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7ADE4550>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7ADE4550>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:190: KeyError"}, "attachments": [{"name": "Request Info", "source": "45dae21d-0e32-478c-82ae-20bce6b9ff51-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4ebe60d0-6cea-4dfb-97e6-8a2fb29ac9f6-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "ce8c1d0a-b5a6-461b-907c-390f40a89b5f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "317db32f-c8f3-4942-b2f7-70d26a3045c8-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_MGCP.json'"}], "start": 1749666099893, "stop": 1749666105550, "uuid": "65550c86-ec65-4b86-b311-ba1fb5903753", "historyId": "bc75a019da3e0a88ce16913844e1666a", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "8644-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}