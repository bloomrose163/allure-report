{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001FEFF6AC520>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE8231BCD0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "1359111a-e02f-40df-8354-63779bec8f54-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3c417019-f6a9-4e7d-922b-f1d9fa7da8cb-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "127617df-e867-40f2-8a7b-936e314de869-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9c0c235a-96b1-4cef-a877-403df3a00768-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1daa74cf-a85a-4c5d-8099-2cfc9e4463f2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "269b2bdf-40f6-4dcd-a2be-975c16199ff1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d83a5879-c317-47e8-a16f-6fc226fc5e09-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "05d0e893-1a43-47e6-ad3f-cc5b5c35c644-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f1c6c359-b485-4d25-ac34-c0b5a1fc4300-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5aef19ef-04bf-482b-97f9-392da4c606b4-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9b43a325-8f63-4d45-988f-5897ca68ff15-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "65c5e164-6e22-4420-a7c4-2694c614406e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "83949bfd-0a3a-4526-a74f-b6863918a9e5-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a16e249f-1f85-4129-a7ac-21e8f29798cd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "96a15773-ffd7-40cf-a6c0-b45281d2ed9e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "68ce8022-cbb9-44fa-97bc-491748617b75-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "bf4294c9-3d62-4f77-bd28-5a8368feb976-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "1ee6bd47-67c0-48f2-a542-88ac312c1443-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749451685326, "stop": 1749451702260, "uuid": "49a3edf9-66f9-4ad1-9df0-fc4274e0ce67", "historyId": "fc02644e1952cc4fe745a497de8be42e", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}