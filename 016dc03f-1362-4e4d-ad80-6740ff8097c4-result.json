{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000243E93FF1C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243EAD59990>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "31ef745c-5be5-4a34-9fc3-c62b1c2e24cc-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d059251d-129e-491f-86f5-eca17dd6695d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "04f42882-6b95-422c-958a-2b43cc6b6f5c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "74c03b80-ed52-44c5-9191-5b03479369a7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "5ad2fc08-239e-44a9-ab89-9c5b5e1c13ba-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ab456c62-9ed6-466f-bfc0-c5a3323b9df7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8f71008b-52a0-40a4-89e5-4c71889908dc-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "76a6d9e3-cfd8-4665-8cf5-00bc602d8c3e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4a5015f2-f6f3-40e1-beb6-41739cd80b71-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7ff38d58-f77a-4998-a68e-5bfd6e7290a9-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "becfda36-e0c5-4fef-9595-bfc9c4cef107-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ad288d9b-9551-4ac8-8ef0-866468442871-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "92eac6c2-d70d-4189-b02c-c1af49b4d89c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a3ef5cf1-6a11-4c75-b30b-a8f38d8965ad-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8cf5a8ea-d1f6-437c-a84a-60e14f6c9e8f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "785d5b15-1098-4ca6-a7e5-e7415a5afe8f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "882c42dd-1311-4b0a-a706-61b00833eeda-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "69beac4a-0649-40c2-8567-d47b8ddc4769-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749233961425, "stop": 1749233977298, "uuid": "32969d1e-e02b-43bf-8274-f29d3140d503", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "36908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}