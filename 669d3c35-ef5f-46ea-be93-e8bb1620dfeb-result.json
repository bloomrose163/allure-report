{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000014D3B10B220>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3C159CF0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "d5ec930c-1cb5-4b9c-a5fc-dda90cc2c82c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "78b238a6-d6a0-4bba-aa55-0597aba71ed1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2cb84b51-b0a3-4802-ad18-81823dbb399d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "445fe5f9-6089-4f8b-96fd-31cb22c4b3e5-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "c2cb199c-5122-4e3d-b830-e6749a963a33-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f3e8c789-a680-4d41-a2d0-3e752a6fb89f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "bef54fe6-302a-4a03-afad-0fe7becdd5a9-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "122e3d8b-9c50-4690-a6c1-9656ec8f1c74-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "151b19ea-6cba-4528-8bb2-c25f7af0484a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "16c2c75d-63b2-42c6-94e9-02494cb83447-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "cd01f12e-36e2-4987-a068-2d89812b7041-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "40a39765-cda8-4a54-bffc-ad8a4051d2cb-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9b347cb6-feb4-44e3-9cbe-aa841b7e4dbf-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4771a19d-ab83-4ac3-83ab-ab8ca2eae1b3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4972a50d-3852-453c-943d-f26fc3b5b8d2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "999a3ddc-a089-46de-b99c-12530de5af73-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "56bc3eb3-6a40-468e-a96f-fe0c69004588-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "07ea82e4-773a-419a-a5bb-7b79daa7c3f4-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1748496797998, "stop": 1748496810521, "uuid": "fbfa7383-3616-46b0-b4b9-fb3c46712f6c", "historyId": "fc02644e1952cc4fe745a497de8be42e", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}