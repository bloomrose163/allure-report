{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001E7BC902260>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E7BC82ACE0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "06d4b11c-8226-42b2-8857-59351178f994-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "55a32872-79dc-40da-9b96-47dadd4489fb-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "402c7ec2-4bd1-44bd-b4b1-f31984046e8a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7fa3a2e3-e923-4151-a127-c5df43bd1cc9-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "5e876fd4-5c36-4aec-85f1-37d194dac1fb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0b06c2e7-ddcf-41f7-9bb2-f6844cef989f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "42655f7a-df84-4985-82bc-b18c6f97cec7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e7094298-1c0e-4bbe-9c2b-d3f7e0003423-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "cedd8a77-e629-4f48-b11e-735806594b17-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0da3cead-a9b1-4f1f-8719-4749d3ec5b70-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "852318bd-e1dd-4b24-9675-513dd402fafe-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "6f0f3ae3-30f1-4f85-8b10-fe7d0d6fc242-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1ff51a6b-ad90-4439-a367-aac90b65d4ef-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "2531c9b5-75ab-4e71-a447-3061e112ef81-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "bb059da0-1b19-4da0-a3f5-fe426ab02e03-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "87687c22-a1b0-4471-b9b0-2f0b11e380a6-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "38a9c97a-aa8e-4c3a-b728-875a48051254-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "60abbb12-20e7-49c3-bb2e-1537fc31f105-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1748496342140, "stop": 1748496356280, "uuid": "7a414fb8-4ede-43d4-bb0c-ac87bf45da2f", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "44636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}