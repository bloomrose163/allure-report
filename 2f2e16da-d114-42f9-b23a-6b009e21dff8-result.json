{"name": "Test - Query device count", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "self = <testcase.ACS.test_device.TestDevice object at 0x000002007528D5A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020074F2F670>\n\n    @allure.title('Test - Query device count')\n    # @pytest.mark.skip()\n    def test_get_invalid_param(self,base_api):\n        response = base_api.get_count(endpoint,{\"macAddress\": \"notvalid\"})\n        assert response.status_code == 200\n        assert response.json()[\"count\"] == 0\n        response = base_api.get_list_by_param(endpoint,{\"macAddress\": \"notvalid\"})\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:25: AssertionError"}, "attachments": [{"name": "Request Info", "source": "2464064c-1aa0-4e77-9370-92d8a41d4c99-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ce708655-2b68-45da-aae5-5058426a854c-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "131f8c43-74a8-4c02-9698-44c0c1fb5488-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d65c2689-21d9-4ce2-8728-b74ed7ec52fc-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749031493976, "stop": 1749031495039, "uuid": "827a4889-5f3c-45d4-a810-c5d66071ab79", "historyId": "43cdde2d7b9f9882c6f6916901cb11e1", "testCaseId": "d30fc1ef3476a5ddb57acb8279260651", "fullName": "testcase.ACS.test_device.TestDevice#test_get_invalid_param", "labels": [{"name": "epic", "value": "Test - device"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_device"}, {"name": "subSuite", "value": "TestDevice"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "40176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_device"}]}