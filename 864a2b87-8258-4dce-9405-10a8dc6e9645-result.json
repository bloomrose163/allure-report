{"name": "Test - test the paramter are case-insensitive ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1 != 1", "trace": "self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x0000023DBDE91DE0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023DBDC6A890>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_ds_hk3_tp\"\n      params={\"name\":name}\n>     ACSAPI.verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=True,get_count=False)\n\ntestcase\\ACS\\test_configuration_profile.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x0000023DBDE91DE0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023DBDC6A890>\nendpoint = 'configuration-profile', params = {'name': 'test_ds_hk3_tp'}\ncase_sen = True, get_count = False\n\n    def verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False):\n    #   check query with lower charactors\n        response = base_api.get_list_by_param(endpoint,params)\n        assert response.status_code == 200\n        count_lower = len(response.json())\n    \n      #   check query with super charactors\n        upper_params=uppercased_dict = {key: value.upper() for key, value in params.items()}\n        response_upper = base_api.get_list_by_param(endpoint,upper_params)\n        assert response_upper.status_code == 200\n        count_upper = len(response_upper.json())\n        print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n        if case_sen == False:\n         assert count_lower == count_upper\n        else:\n>        assert count_lower != count_upper\nE        assert 1 != 1\n\ntestcase\\ACS\\test_api_acs_common.py:81: AssertionError"}, "attachments": [{"name": "Request Info", "source": "90f9d917-6e27-4b87-84c1-737d1945bf7f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5854b5ec-537f-43b8-aa17-6a65599e96ec-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2fd09c1b-c8ff-453b-ab5d-f0ff7dee1d6c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9a599895-04b5-4ae6-b7df-3f5dc97a0093-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'dev'"}], "start": 1748715334856, "stop": 1748715336114, "uuid": "1849034b-8db3-4dfc-a9b3-177aba8ba0dd", "historyId": "b98e730da32255a90444dae343e94bde", "testCaseId": "a02c8c29bb761f78eea1bf07390884d8", "fullName": "testcase.ACS.test_configuration_profile.TestConfigurationProfile#test_get_case_sensitive", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_configuration_profile"}, {"name": "subSuite", "value": "TestConfigurationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "46036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_configuration_profile"}]}