{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000227BDD77910>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000227BF71C640>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "edfbafc9-17ae-40a2-a326-074257f16b01-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0324e746-d202-4b7c-b3b9-a1b7dfd6d70f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "92c46394-992e-4028-bd9e-6d8505c87f80-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "54119d93-dacf-4a47-a9b9-b7ede2f5c138-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "58aa6f77-a6a6-405d-91ed-7ff3228b0724-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "2f23302f-db9c-46f6-97ca-c85959c346f7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "84a7238f-3d9c-40b9-a382-ca7744e7adaf-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "61a55c28-527c-44dc-80cc-99f9c20ab1ec-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "eb57edbf-0b62-4cb9-9703-fde7733b911c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9116646e-efea-4202-9096-e65798814a6d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9182b843-c0f3-473f-b337-6dc5874ff090-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "055c4783-c683-445f-b111-a04f7f08d406-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "aeaa3373-2034-4f15-9f32-b0fa3f40d05e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "619f5c1a-dae8-4e01-bf42-ae13780bbe41-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "513a1660-ff1e-46ed-ae5d-68cace67c8a9-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "95389bc4-86c4-488d-ac71-6cdd62da2cbc-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "893c4a8f-0905-4d9c-b57d-b48b99df397f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "43d2cba2-adb2-4b1e-9ef9-943da1fbfdc3-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1748369952125, "stop": 1748369964593, "uuid": "f2632222-a769-421a-a9be-cb569c359c9f", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "32716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}