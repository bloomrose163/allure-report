{"uid":"5e1496ff6832da6","name":"Test - delete record ","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_delete_by_param","historyId":"3f28628d7fec20b917f382be71f38269","time":{"start":1748888389642,"stop":1748888391852,"duration":2210},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000027D6F540CA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D6F066410>\n\n    @allure.feature('DELETE')\n    @allure.title('Test - delete record ')\n    # @pytest.mark.parametrize('param',[\n    #     # {\n    #     #     \"_id\": \"\"\n    #     # },\n    #     # {\n    #     #     \"memberInfo\":\"CXNK0151C33B\"\n    #     # },\n    #     # {\n    #     #     \"deviceRecordId\":\"CXNK0151C33B\"\n    #     # }\n    #     # {\n    #     #     \"groupId\":\"\"\n    #     # }\n    #     ])\n    def test_delete_by_param(self,base_api):\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        assert response_member.status_code == 200\n        member_id = response_member.json()['_id']\n    \n                # get static system group member info\n        param ={\"bWithDeviceRecord\":\"True\"}\n        # param[\"_id\"] = member_id\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:242: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748888237032,"stop":1748888237243,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1748888237243,"stop":1748888238670,"duration":1427},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1748888389639,"stop":1748888389641,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000027D6F540CA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D6F066410>\n\n    @allure.feature('DELETE')\n    @allure.title('Test - delete record ')\n    # @pytest.mark.parametrize('param',[\n    #     # {\n    #     #     \"_id\": \"\"\n    #     # },\n    #     # {\n    #     #     \"memberInfo\":\"CXNK0151C33B\"\n    #     # },\n    #     # {\n    #     #     \"deviceRecordId\":\"CXNK0151C33B\"\n    #     # }\n    #     # {\n    #     #     \"groupId\":\"\"\n    #     # }\n    #     ])\n    def test_delete_by_param(self,base_api):\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        assert response_member.status_code == 200\n        member_id = response_member.json()['_id']\n    \n                # get static system group member info\n        param ={\"bWithDeviceRecord\":\"True\"}\n        # param[\"_id\"] = member_id\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:242: AssertionError","steps":[],"attachments":[{"uid":"196151c5a5b09b1a","name":"Request Info","source":"196151c5a5b09b1a.json","type":"application/json","size":265},{"uid":"ec3e260ce08c844f","name":"Response Info","source":"ec3e260ce08c844f.json","type":"application/json","size":314},{"uid":"e06389af9effe267","name":"Request Info","source":"e06389af9effe267.json","type":"application/json","size":242},{"uid":"80674af3fcf43579","name":"Response Info","source":"80674af3fcf43579.json","type":"application/json","size":2555},{"uid":"b2e612e30c18a87c","name":"Request Info","source":"b2e612e30c18a87c.json","type":"application/json","size":187},{"uid":"f3967444b9863dd1","name":"Response Info","source":"f3967444b9863dd1.json","type":"application/json","size":135}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":6,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"feature","value":"DELETE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"2208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5e1496ff6832da6.json","parameterValues":["'dev'"]}