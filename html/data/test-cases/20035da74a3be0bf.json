{"uid":"20035da74a3be0bf","name":"Test - create static group member twice","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_group_static_member_twice","historyId":"f92a346dd296d9675da8459e3ac613fb","time":{"start":1749406773240,"stop":1749406776857,"duration":3617},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000002B814B8D210>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002B8161B56C0>\n\n    @allure.feature('CREATE')\n    @allure.issue(\"GCPT-14097\")\n    @allure.title('Test - create static group member twice')\n    def test_create_group_static_member_twice(self,base_api):\n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        response_member = base_api.create(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:104: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749406486809,"stop":1749406486900,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1749406486900,"stop":1749406488390,"duration":1490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1749406773238,"stop":1749406773240,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000002B814B8D210>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002B8161B56C0>\n\n    @allure.feature('CREATE')\n    @allure.issue(\"GCPT-14097\")\n    @allure.title('Test - create static group member twice')\n    def test_create_group_static_member_twice(self,base_api):\n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        response_member = base_api.create(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:104: AssertionError","steps":[],"attachments":[{"uid":"a1929f0fbe4b0159","name":"Request Info","source":"a1929f0fbe4b0159.json","type":"application/json","size":266},{"uid":"1c0049206723e2f","name":"Response Info","source":"1c0049206723e2f.json","type":"application/json","size":314},{"uid":"663bc717ef8a669d","name":"Request Info","source":"663bc717ef8a669d.json","type":"application/json","size":243},{"uid":"3b85357b2ae9a3f7","name":"Response Info","source":"3b85357b2ae9a3f7.json","type":"application/json","size":225}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":4,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36588-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"GCPT-14097","url":"GCPT-14097","type":"issue"},{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"20035da74a3be0bf.json","parameterValues":["'test'"]}