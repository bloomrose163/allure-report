{"uid":"d8b9740f32a779bb","name":"Test - get the system groups count","fullName":"testcase.ACS.test_orphan-device.TestOrphanDevice#test_get_group_list_count","historyId":"31e096c75b3dac679c5500732f7d8ce0","time":{"start":1749014098428,"stop":1749014099553,"duration":1125},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9E10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EC7130>\n\n    @allure.feature('QUERY_COUNT')\n    @allure.title('Test - get the system groups count')\n    def test_get_group_list_count(self,base_api):\n>      ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_orphan-device.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9E10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EC7130>\nendpoint = 'orphan-device'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:146: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014098428,"stop":1749014098428,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9E10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EC7130>\n\n    @allure.feature('QUERY_COUNT')\n    @allure.title('Test - get the system groups count')\n    def test_get_group_list_count(self,base_api):\n>      ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_orphan-device.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9E10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EC7130>\nendpoint = 'orphan-device'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:146: AssertionError","steps":[],"attachments":[{"uid":"bff7c3f293e0956c","name":"Request Info","source":"bff7c3f293e0956c.json","type":"application/json","size":123},{"uid":"833cdfe5084403b4","name":"Response Info","source":"833cdfe5084403b4.json","type":"application/json","size":77}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"ACS orphan-device & assign-to-org API"},{"name":"feature","value":"QUERY_COUNT"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_orphan-device"},{"name":"subSuite","value":"TestOrphanDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_orphan-device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"}],"links":[{"name":"CTM-314479","url":"CTM-314479","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d8b9740f32a779bb.json","parameterValues":["'aws'"]}