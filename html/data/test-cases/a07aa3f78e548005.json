{"uid":"a07aa3f78e548005","name":"Test - can not delete group associated with group","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_cpe_filter","historyId":"53503af982c703328c37166da7bc0a49","time":{"start":1747964436518,"stop":1747964439171,"duration":2653},"status":"failed","statusMessage":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000028AB12FC3A0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000028AB138EE90>\n\n    @allure.title('Test - can not delete group associated with group')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # # delete the record\n        # response_delete= base_api.delete(endpoint,params,model_id)\n        # assert response_delete.status_code == 200\n        # assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        groups = [model_id]\n        json_data[\"groups\"] = groups\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n        assert response_delete.status_code == 403\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":True}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n>       assert response_delete.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\ntestcase\\ACS\\test_system_group.py:64: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747964435081,"stop":1747964435199,"duration":118},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747964435199,"stop":1747964436515,"duration":1316},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747964436516,"stop":1747964436517,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000028AB12FC3A0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000028AB138EE90>\n\n    @allure.title('Test - can not delete group associated with group')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # # delete the record\n        # response_delete= base_api.delete(endpoint,params,model_id)\n        # assert response_delete.status_code == 200\n        # assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        groups = [model_id]\n        json_data[\"groups\"] = groups\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n        assert response_delete.status_code == 403\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":True}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n>       assert response_delete.status_code == 200\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\ntestcase\\ACS\\test_system_group.py:64: AssertionError","steps":[],"attachments":[{"uid":"abfb7c8cb98c5cc4","name":"Request Info","source":"abfb7c8cb98c5cc4.json","type":"application/json","size":374},{"uid":"6691a5afa323b088","name":"Response Info","source":"6691a5afa323b088.json","type":"application/json","size":91},{"uid":"9997bdd2756964bd","name":"Request Info","source":"9997bdd2756964bd.json","type":"application/json","size":374},{"uid":"3f139947cb760599","name":"Response Info","source":"3f139947cb760599.json","type":"application/json","size":91},{"uid":"99397b4343151121","name":"Request Info","source":"99397b4343151121.json","type":"application/json","size":542},{"uid":"2cc535f4709e304b","name":"Response Info","source":"2cc535f4709e304b.json","type":"application/json","size":91},{"uid":"79619b2ab7c9c4fc","name":"Request Info","source":"79619b2ab7c9c4fc.json","type":"application/json","size":155},{"uid":"2958ca772617286d","name":"Response Info","source":"2958ca772617286d.json","type":"application/json","size":138},{"uid":"3afa526deea3796c","name":"Request Info","source":"3afa526deea3796c.json","type":"application/json","size":197},{"uid":"6c68fa43e622249","name":"Response Info","source":"6c68fa43e622249.json","type":"application/json","size":138}],"parameters":[],"attachmentsCount":10,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"20664-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a07aa3f78e548005.json","parameterValues":["'aws'"]}