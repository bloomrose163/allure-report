{"uid":"4f9d8b2dfb34b450","name":"Test - get all the static group member with different param:{'_id': '2919e3e4-7c12-4209-99bb-c0956153dab7'}","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_list_param","historyId":"ca62b1fd4657c44cacc96fe0a97a67f5","time":{"start":1749452308205,"stop":1749452310058,"duration":1853},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001FEFF7344C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE827DBEB0>\nparam = {'_id': '2919e3e4-7c12-4209-99bb-c0956153dab7'}\n\n    @allure.feature('QUERY')\n    @allure.title('Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        {\n        },\n        {\n            \"limit\": 2,\n        },\n        {\n            \"skip\": 1,\n            \"limit\": 3\n        },\n        {\n            \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        },\n        {\n            \"memberInfo\":\"CXNK00A5F0B4\"\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n        {\n            \"memberInfo\":\"non-exsit\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bUndiscovered\":\"True\",\"limit\": 3\n        },\n        {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bDiscovered\":\"True\",\"limit\": 3\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\",\n            \"limit\":100\n        },\n        {\n            \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeInheritance\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:271: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749451326138,"stop":1749451326517,"duration":379},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749451326517,"stop":1749451327902,"duration":1385},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749452308202,"stop":1749452308204,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001FEFF7344C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE827DBEB0>\nparam = {'_id': '2919e3e4-7c12-4209-99bb-c0956153dab7'}\n\n    @allure.feature('QUERY')\n    @allure.title('Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        {\n        },\n        {\n            \"limit\": 2,\n        },\n        {\n            \"skip\": 1,\n            \"limit\": 3\n        },\n        {\n            \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        },\n        {\n            \"memberInfo\":\"CXNK00A5F0B4\"\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n        {\n            \"memberInfo\":\"non-exsit\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bUndiscovered\":\"True\",\"limit\": 3\n        },\n        {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bDiscovered\":\"True\",\"limit\": 3\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\",\n            \"limit\":100\n        },\n        {\n            \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeInheritance\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:271: AssertionError","steps":[],"attachments":[{"uid":"f4e51e6a4dc37f40","name":"Request Info","source":"f4e51e6a4dc37f40.json","type":"application/json","size":221},{"uid":"11443b6b952b1ba","name":"Response Info","source":"11443b6b952b1ba.json","type":"application/json","size":114}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Static Group Member API"},{"name":"feature","value":"QUERY"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"12180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'_id': '2919e3e4-7c12-4209-99bb-c0956153dab7'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"4f9d8b2dfb34b450.json","parameterValues":["'aws'","{'_id': '2919e3e4-7c12-4209-99bb-c0956153dab7'}"]}