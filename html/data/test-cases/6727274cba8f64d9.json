{"uid":"6727274cba8f64d9","name":"Test - test the paramter are case-insensitive ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_case_sensitive","historyId":"90531c650c98a7b3561123a257397ff8","time":{"start":1748239963242,"stop":1748239964922,"duration":1680},"status":"failed","statusMessage":"AssertionError: assert 0 != 0","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001E26E86B8E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E2701646A0>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_workflow_11\"\n      params={\"name\": name,\"limit\": 2}\n      response = base_api.get_list_by_param(endpoint,params)\n      assert response.status_code == 200\n      count_lower = len(response.json())\n      params={\"name\": name.upper(),\"limit\": 2}\n    #  params={\"name\": name,\"limit\": 2}\n      response_upper = base_api.get_list_by_param(endpoint,params)\n      assert response_upper.status_code == 200\n      count_upper = len(response_upper.json())\n      print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n>     assert count_lower != count_upper\nE     assert 0 != 0\n\ntestcase\\ACS\\test_workflow.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748239864833,"stop":1748239864949,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748239864959,"stop":1748239866360,"duration":1401},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1748239963235,"stop":1748239963242,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 != 0","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001E26E86B8E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E2701646A0>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_workflow_11\"\n      params={\"name\": name,\"limit\": 2}\n      response = base_api.get_list_by_param(endpoint,params)\n      assert response.status_code == 200\n      count_lower = len(response.json())\n      params={\"name\": name.upper(),\"limit\": 2}\n    #  params={\"name\": name,\"limit\": 2}\n      response_upper = base_api.get_list_by_param(endpoint,params)\n      assert response_upper.status_code == 200\n      count_upper = len(response_upper.json())\n      print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n>     assert count_lower != count_upper\nE     assert 0 != 0\n\ntestcase\\ACS\\test_workflow.py:69: AssertionError","steps":[],"attachments":[{"uid":"1a47b659269e3460","name":"Request Info","source":"1a47b659269e3460.json","type":"application/json","size":198},{"uid":"7151d1182e2f4d6","name":"Response Info","source":"7151d1182e2f4d6.json","type":"application/json","size":38},{"uid":"bb7461abe454dede","name":"Request Info","source":"bb7461abe454dede.json","type":"application/json","size":198},{"uid":"22a40549b3e6e3b","name":"Response Info","source":"22a40549b3e6e3b.json","type":"application/json","size":38}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"41480-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6727274cba8f64d9.json","parameterValues":["'dev'"]}