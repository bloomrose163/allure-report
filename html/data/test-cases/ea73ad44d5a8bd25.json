{"uid":"ea73ad44d5a8bd25","name":"Test - Get and compare the body structure","fullName":"testcase.ACS.test_device.TestDevice#test_get_list_compare","historyId":"ed51b7d3889f6b85d1254e64208461fb","time":{"start":1748591233948,"stop":1748591234505,"duration":557},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001FF651AD360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF64C73790>\nparam = {'serialNumber': 'CXNK01A8D0C7'}\n\n    @allure.title('Test - Get and compare the body structure')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\",[{\"serialNumber\":\"CXNK01A8D0C7\"}])\n    def test_get_list_compare(self,base_api,param):\n    \n        # get info by id, and save aws response\n        response_get = base_api.get_list_by_param(endpoint,param)\n>       assert response_get.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:50: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748591198413,"stop":1748591198644,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1748591198644,"stop":1748591200107,"duration":1463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1748591233947,"stop":1748591233948,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001FF651AD360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF64C73790>\nparam = {'serialNumber': 'CXNK01A8D0C7'}\n\n    @allure.title('Test - Get and compare the body structure')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\",[{\"serialNumber\":\"CXNK01A8D0C7\"}])\n    def test_get_list_compare(self,base_api,param):\n    \n        # get info by id, and save aws response\n        response_get = base_api.get_list_by_param(endpoint,param)\n>       assert response_get.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:50: AssertionError","steps":[],"attachments":[{"uid":"8c4bcecd11d5654f","name":"Request Info","source":"8c4bcecd11d5654f.json","type":"application/json","size":180},{"uid":"993050bb18d4e424","name":"Response Info","source":"993050bb18d4e424.json","type":"application/json","size":162}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"28084-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'serialNumber': 'CXNK01A8D0C7'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ea73ad44d5a8bd25.json","parameterValues":["'dev'","{'serialNumber': 'CXNK01A8D0C7'}"]}