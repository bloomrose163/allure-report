{"uid":"42a56c6e374f27b2","name":"Test - Query device with different paramters:{'registrationId': 'reg123'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"af6749bd34de977d72c7990b833a15f2","time":{"start":1748456225998,"stop":1748456227355,"duration":1357},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001AED31B2440>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001AED43EAD70>\nparam = {'registrationId': 'reg123'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748456151492,"stop":1748456151571,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1748456151571,"stop":1748456152981,"duration":1410},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1748456225998,"stop":1748456225998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001AED31B2440>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001AED43EAD70>\nparam = {'registrationId': 'reg123'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","steps":[],"attachments":[{"uid":"13c64bc43c9c1ded","name":"Request Info","source":"13c64bc43c9c1ded.json","type":"application/json","size":173},{"uid":"42d772eba646726b","name":"Response Info","source":"42d772eba646726b.json","type":"application/json","size":101}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"43328-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'registrationId': 'reg123'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"42a56c6e374f27b2.json","parameterValues":["'test'","{'registrationId': 'reg123'}"]}