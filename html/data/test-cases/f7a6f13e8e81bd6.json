{"uid":"f7a6f13e8e81bd6","name":"Test - delete record with parameter {'_id': ''}","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_delete_by_param","historyId":"c670c44d2801c21fc33b7241a8c0fc77","time":{"start":1750443810791,"stop":1750443818248,"duration":7457},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000127E81575B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000127EC530C70>\nparam = {'_id': ''}\n\n    @allure.feature('DELETE')\n    @allure.title('Test - delete record with parameter {param}')\n    # @allure.issue(\"GCPT-14617\")\n    @pytest.mark.parametrize('param',[\n        {\n            \"_id\": \"\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"groupId\":\"\"\n        },\n        {\n            \"deviceRecordId\":\"CXNK01A8D0C7\"\n        }\n        ])\n    def test_delete_by_param(self,base_api,param):\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n    \n        response_member = base_api.create(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:192: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750443408219,"stop":1750443408503,"duration":284},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1750443408503,"stop":1750443409839,"duration":1336},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1750443810789,"stop":1750443810791,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000127E81575B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000127EC530C70>\nparam = {'_id': ''}\n\n    @allure.feature('DELETE')\n    @allure.title('Test - delete record with parameter {param}')\n    # @allure.issue(\"GCPT-14617\")\n    @pytest.mark.parametrize('param',[\n        {\n            \"_id\": \"\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"groupId\":\"\"\n        },\n        {\n            \"deviceRecordId\":\"CXNK01A8D0C7\"\n        }\n        ])\n    def test_delete_by_param(self,base_api,param):\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n    \n        response_member = base_api.create(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:192: AssertionError","steps":[],"attachments":[{"uid":"95c13b31fd7447b8","name":"Request Info","source":"95c13b31fd7447b8.json","type":"application/json","size":266},{"uid":"c4d030a15a9dfb85","name":"Response Info","source":"c4d030a15a9dfb85.json","type":"application/json","size":314},{"uid":"66bc7b1d48c39706","name":"Request Info","source":"66bc7b1d48c39706.json","type":"application/json","size":243},{"uid":"fc769293d605db31","name":"Response Info","source":"fc769293d605db31.json","type":"application/json","size":86}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"epic","value":"ACS Static Group Member API"},{"name":"feature","value":"DELETE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'_id': ''}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f7a6f13e8e81bd6.json","parameterValues":["'test'","{'_id': ''}"]}