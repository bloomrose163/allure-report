{"uid":"549380aa2b094b46","name":"Test - test create & delete twice","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_create_delete_twice","historyId":"158be0f8dea18fa91c5f2180c1dcb0a3","time":{"start":1750099037044,"stop":1750099041025,"duration":3981},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x00000263F6752170>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC146A0>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test create & delete twice')\n    def test_get_create_delete_twice(self,base_api):\n      json_data = load_body(\"workflow_create\")\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x00000263F6752170>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC146A0>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750097856594,"stop":1750097856894,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1750097856894,"stop":1750097858111,"duration":1217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1750099037042,"stop":1750099037044,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x00000263F6752170>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC146A0>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test create & delete twice')\n    def test_get_create_delete_twice(self,base_api):\n      json_data = load_body(\"workflow_create\")\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x00000263F6752170>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC146A0>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","steps":[],"attachments":[{"uid":"62fb9211f6f5de79","name":"Request Info","source":"62fb9211f6f5de79.json","type":"application/json","size":545},{"uid":"874bb54a49cddf22","name":"Response Info","source":"874bb54a49cddf22.json","type":"application/json","size":161}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"COMMON"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"549380aa2b094b46.json","parameterValues":["'test'"]}