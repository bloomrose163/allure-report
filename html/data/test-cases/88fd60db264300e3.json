{"uid":"88fd60db264300e3","name":"Test - CRUD - create images, display the images and check this profile can be deleted","fullName":"testcase.ACS.test_images.TestImages#test_create_sop_crud","historyId":"34ae35726f77032b389213cdce9215b9","time":{"start":1750184561129,"stop":1750184565378,"duration":4249},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_images.TestImages object at 0x000002C9869C48E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98B0AB220>\n\n    @allure.feature('CREATE')\n    # @allure.issue('GCPT-14626')\n    @allure.issue('GCPT-14831')\n    @allure.title('Test - CRUD - create images, display the images and check this profile can be deleted')\n    def test_create_sop_crud(self,base_api):\n        json_data = load_body(\"images\")\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_images.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750184561129,"stop":1750184561129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_images.TestImages object at 0x000002C9869C48E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98B0AB220>\n\n    @allure.feature('CREATE')\n    # @allure.issue('GCPT-14626')\n    @allure.issue('GCPT-14831')\n    @allure.title('Test - CRUD - create images, display the images and check this profile can be deleted')\n    def test_create_sop_crud(self,base_api):\n        json_data = load_body(\"images\")\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_images.py:44: AssertionError","steps":[],"attachments":[{"uid":"db884f4d75410f04","name":"Request Info","source":"db884f4d75410f04.json","type":"application/json","size":324},{"uid":"4f6e222f28bf5689","name":"Response Info","source":"4f6e222f28bf5689.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS images API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_images"},{"name":"subSuite","value":"TestImages"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_images"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"GCPT-14831","url":"GCPT-14831","type":"issue"},{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"88fd60db264300e3.json","parameterValues":["'test'"]}