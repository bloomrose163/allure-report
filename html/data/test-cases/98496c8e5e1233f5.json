{"uid":"98496c8e5e1233f5","name":"Test - create system group with special characters :{params}","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_group_special","historyId":"fc00242c6d16ba49d4cf80bc2ec49049","time":{"start":1749234291506,"stop":1749234293312,"duration":1806},"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000243E93FFC70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243EC085960>\ngroup_name = '~!@#$%^&*{}?/+-'\n\n    @allure.title('Test - create system group with special characters :{params}')\n    @pytest.mark.parametrize(\"group_name\",['~!@#$%^&*{}?/+-','{var}'])\n    def test_create_group_special(self,base_api,group_name):\n        json_data = load_json(file_paths[\"dynamic\"])\n        json_data[\"group_name\"] = group_name\n        response = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_system_group.py:244: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749233833833,"stop":1749233833932,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749233833932,"stop":1749233835250,"duration":1318},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749234291502,"stop":1749234291505,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000243E93FFC70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243EC085960>\ngroup_name = '~!@#$%^&*{}?/+-'\n\n    @allure.title('Test - create system group with special characters :{params}')\n    @pytest.mark.parametrize(\"group_name\",['~!@#$%^&*{}?/+-','{var}'])\n    def test_create_group_special(self,base_api,group_name):\n        json_data = load_json(file_paths[\"dynamic\"])\n        json_data[\"group_name\"] = group_name\n        response = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_system_group.py:244: AssertionError","steps":[],"attachments":[{"uid":"610c005c16def4af","name":"Request Info","source":"610c005c16def4af.json","type":"application/json","size":292},{"uid":"7e8e53ca239c48b9","name":"Response Info","source":"7e8e53ca239c48b9.json","type":"application/json","size":248}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36908-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"group_name","value":"'~!@#$%^&*{}?/+-'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"98496c8e5e1233f5.json","parameterValues":["'test'","'~!@#$%^&*{}?/+-'"]}