{"uid":"ab87f5c6fb400b6b","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"36a260bec491b376f6257a1df08cf3be","time":{"start":1749014105902,"stop":1749014105905,"duration":3},"status":"broken","statusMessage":"AttributeError: 'BaseAPIACS' object has no attribute 'create_with_jsondata'. Did you mean: 'update_with_jsondata'?","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001F1D0CDACB0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D06BE6E0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D06BE6E0>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n>       response_create = self.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\nE       AttributeError: 'BaseAPIACS' object has no attribute 'create_with_jsondata'. Did you mean: 'update_with_jsondata'?\n\nutils\\base_api_acs.py:180: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014105898,"stop":1749014105901,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_service_off.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"ab87f5c6fb400b6b.json","parameterValues":["'aws'","'./testdata/ACS/provisioning_record_service_off.json'"]}