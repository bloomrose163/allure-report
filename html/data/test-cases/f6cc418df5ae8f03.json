{"uid":"f6cc418df5ae8f03","name":"Test - Query count with different paramters:{'opMode': 'Managed ONT'}","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_get_device_count","historyId":"87d275178ea3bd96f21c7053b89df743","time":{"start":1748590170694,"stop":1748590171156,"duration":462},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000019F99DC85B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F999B3D60>\nparam = {'opMode': 'Managed ONT'}\n\n    @allure.title('Test - Query count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize('param',[\n        # {\n        #     \"deviceId\": \"CXNK00AFB83B\"\n        # },\n        # {\n        #     \"deviceId\": \"60:db:98:6f:27:dd\"\n        # },\n        # {\n        #     \"deviceId\": \"aereg123\"\n        # },\n        # {\n        #     \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        # },\n        {\n            \"opMode\": \"AE\"\n        },\n                {\n            \"opMode\": \"Managed ONT\"\n        },\n        {\n            \"opMode\": \"RG\"\n        }\n    ])\n    def test_get_device_count(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:182: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748590122300,"stop":1748590122547,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748590122547,"stop":1748590123981,"duration":1434},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748590170690,"stop":1748590170693,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000019F99DC85B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F999B3D60>\nparam = {'opMode': 'Managed ONT'}\n\n    @allure.title('Test - Query count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize('param',[\n        # {\n        #     \"deviceId\": \"CXNK00AFB83B\"\n        # },\n        # {\n        #     \"deviceId\": \"60:db:98:6f:27:dd\"\n        # },\n        # {\n        #     \"deviceId\": \"aereg123\"\n        # },\n        # {\n        #     \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        # },\n        {\n            \"opMode\": \"AE\"\n        },\n                {\n            \"opMode\": \"Managed ONT\"\n        },\n        {\n            \"opMode\": \"RG\"\n        }\n    ])\n    def test_get_device_count(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:182: AssertionError","steps":[],"attachments":[{"uid":"387373f57f67bc9d","name":"Request Info","source":"387373f57f67bc9d.json","type":"application/json","size":185},{"uid":"90427ac2980902a4","name":"Response Info","source":"90427ac2980902a4.json","type":"application/json","size":162}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'opMode': 'Managed ONT'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f6cc418df5ae8f03.json","parameterValues":["'dev'","{'opMode': 'Managed ONT'}"]}