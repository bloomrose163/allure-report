{"uid":"f528f585485667b1","name":"Negative Test - get all the static group member with different param:None","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_list_negative","historyId":"81b7fc986ca15021fe8115809e33ad0b","time":{"start":1748341609544,"stop":1748341610583,"duration":1039},"status":"failed","statusMessage":"AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000020EFA1F7130>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB823400>\nparam = {'limit': -2}\n\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    \n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n>           assert response.status_code == 500\nE           assert 200 == 500\nE            +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:149: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748341295951,"stop":1748341296045,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748341296045,"stop":1748341297421,"duration":1376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"base_api","time":{"start":1748341609542,"stop":1748341609543,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 500\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000020EFA1F7130>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB823400>\nparam = {'limit': -2}\n\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    \n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n>           assert response.status_code == 500\nE           assert 200 == 500\nE            +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:149: AssertionError","steps":[],"attachments":[{"uid":"bf0226e88a402a90","name":"Request Info","source":"bf0226e88a402a90.json","type":"application/json","size":155},{"uid":"3646bd284035ac50","name":"Response Info","source":"3646bd284035ac50.json","type":"application/json","size":14953}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - StaticGroupMember API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"42176-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'limit': -2}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f528f585485667b1.json","parameterValues":["'aws'","{'limit': -2}"]}