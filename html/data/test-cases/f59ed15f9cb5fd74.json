{"uid":"f59ed15f9cb5fd74","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"dddefc9e1e37bf704c358b6f733af724","time":{"start":1748590169248,"stop":1748590170179,"duration":931},"status":"broken","statusMessage":"KeyError: 0","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000019F99DC8340>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:197: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748590122300,"stop":1748590122547,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748590122547,"stop":1748590123981,"duration":1434},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748590169244,"stop":1748590169247,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: 0","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000019F99DC8340>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C62C20>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:197: KeyError","steps":[],"attachments":[{"uid":"9f32e4567145dd9d","name":"Request Info","source":"9f32e4567145dd9d.json","type":"application/json","size":694},{"uid":"bc06f7fe83664591","name":"Response Info","source":"bc06f7fe83664591.json","type":"application/json","size":119},{"uid":"e3c0d0e1233c0126","name":"Request Info","source":"e3c0d0e1233c0126.json","type":"application/json","size":185},{"uid":"d4b8cdf299ad1a2a","name":"Response Info","source":"d4b8cdf299ad1a2a.json","type":"application/json","size":162}],"parameters":[],"attachmentsCount":4,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_MGCP.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"f59ed15f9cb5fd74.json","parameterValues":["'dev'","'./testdata/ACS/provisioning_record_voice_MGCP.json'"]}