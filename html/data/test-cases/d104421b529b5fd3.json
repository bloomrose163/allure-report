{"uid":"d104421b529b5fd3","name":"Test - create with invalid body","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_invalid","historyId":"5f01d8713bedca54bcf0b57d95195dee","time":{"start":1749177635404,"stop":1749177666760,"duration":31356},"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000223EC24CCA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EC454550>\n\n    @allure.title('Test - create with invalid body')\n    def test_create_invalid(self,base_api):\n>      ACSAPI.verify_create_invalid(self,base_api,endpoint)\n\ntestcase\\ACS\\test_system_group.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000223EC24CCA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EC454550>\nendpoint = 'group'\n\n    def verify_create_invalid(self,base_api,endpoint):\n        create_data ={}\n        response_create = base_api.create(endpoint,create_data,need_random=True, field=\"name\")\n>       assert response_create.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:163: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749173219450,"stop":1749173219578,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749173219578,"stop":1749173220869,"duration":1291},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749177635395,"stop":1749177635403,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000223EC24CCA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EC454550>\n\n    @allure.title('Test - create with invalid body')\n    def test_create_invalid(self,base_api):\n>      ACSAPI.verify_create_invalid(self,base_api,endpoint)\n\ntestcase\\ACS\\test_system_group.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000223EC24CCA0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EC454550>\nendpoint = 'group'\n\n    def verify_create_invalid(self,base_api,endpoint):\n        create_data ={}\n        response_create = base_api.create(endpoint,create_data,need_random=True, field=\"name\")\n>       assert response_create.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:163: AssertionError","steps":[],"attachments":[{"uid":"b9d356d65839551d","name":"Request Info","source":"b9d356d65839551d.json","type":"application/json","size":145},{"uid":"230ced1f46088301","name":"Response Info","source":"230ced1f46088301.json","type":"application/json","size":46}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"19868-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d104421b529b5fd3.json","parameterValues":["'dev'"]}