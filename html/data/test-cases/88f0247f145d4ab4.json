{"uid":"88f0247f145d4ab4","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"30848868ef8e3aa00ebfe171c6200631","time":{"start":1749203143734,"stop":1749203150416,"duration":6682},"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001828DCC9C60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001828F2EE200>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749203008604,"stop":1749203008697,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1749203008698,"stop":1749203010173,"duration":1475},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api","time":{"start":1749203143729,"stop":1749203143734,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 409 == 200\n +  where 409 = <Response [409]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001828DCC9C60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001828F2EE200>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 409 == 200\nE        +  where 409 = <Response [409]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","steps":[],"attachments":[{"uid":"a8c6eec39f287855","name":"Request Info","source":"a8c6eec39f287855.json","type":"application/json","size":831},{"uid":"a4aaea400155eceb","name":"Response Info","source":"a4aaea400155eceb.json","type":"application/json","size":119},{"uid":"d794e5ad750ee639","name":"Request Info","source":"d794e5ad750ee639.json","type":"application/json","size":186},{"uid":"88fbecb0def0c52c","name":"Response Info","source":"88fbecb0def0c52c.json","type":"application/json","size":999},{"uid":"46c3c58386606c5b","name":"Request Info","source":"46c3c58386606c5b.json","type":"application/json","size":172},{"uid":"5d3329b20da9c5de","name":"Response Info","source":"5d3329b20da9c5de.json","type":"application/json","size":231},{"uid":"9c495a2b7bc69063","name":"Request Info","source":"9c495a2b7bc69063.json","type":"application/json","size":831},{"uid":"aebab9749e41633d","name":"Response Info","source":"aebab9749e41633d.json","type":"application/json","size":119}],"parameters":[],"attachmentsCount":8,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_H248.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"88f0247f145d4ab4.json","parameterValues":["'test'","'./testdata/ACS/provisioning_record_voice_H248.json'"]}