{"uid":"2c2de5bb4cbddce3","name":"Test - Query device count with different paramters:{'skip': 10}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"53884e170b79fb3f88f6e515a366f025","time":{"start":1748591216419,"stop":1748591216932,"duration":513},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001FF65163190>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF66566D40>\nparam = {'skip': 10}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748591198413,"stop":1748591198644,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1748591198644,"stop":1748591200107,"duration":1463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1748591216419,"stop":1748591216419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001FF65163190>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF66566D40>\nparam = {'skip': 10}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","steps":[],"attachments":[{"uid":"853aa0001d6e69bd","name":"Request Info","source":"853aa0001d6e69bd.json","type":"application/json","size":148},{"uid":"520d04b2e1ed0269","name":"Response Info","source":"520d04b2e1ed0269.json","type":"application/json","size":162}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"28084-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'skip': 10}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"2c2de5bb4cbddce3.json","parameterValues":["'dev'","{'skip': 10}"]}