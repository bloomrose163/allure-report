{"uid":"e54d2086247dc317","name":"Test - test create & delete twice","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_create_delete_twice","historyId":"158be0f8dea18fa91c5f2180c1dcb0a3","time":{"start":1750185093035,"stop":1750185097018,"duration":3983},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A78D60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98812C730>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test create & delete twice')\n    def test_get_create_delete_twice(self,base_api):\n      json_data = load_body(\"workflow_create\")\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A78D60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98812C730>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750185093035,"stop":1750185093035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A78D60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98812C730>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test create & delete twice')\n    def test_get_create_delete_twice(self,base_api):\n      json_data = load_body(\"workflow_create\")\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A78D60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98812C730>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","steps":[],"attachments":[{"uid":"8bcc02c5e75a8b97","name":"Request Info","source":"8bcc02c5e75a8b97.json","type":"application/json","size":545},{"uid":"c7b2bfad3a4d1ae2","name":"Response Info","source":"c7b2bfad3a4d1ae2.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"COMMON"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e54d2086247dc317.json","parameterValues":["'test'"]}