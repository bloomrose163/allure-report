{"uid":"31e325769e02a522","name":"Test - CRUD - create and update service orchestration profile - Voice Service","fullName":"testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_query_with_params","historyId":"dffc2280fcb7b4f6fab8616d69b1a155","time":{"start":1750184709411,"stop":1750184713769,"duration":4358},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002C9869E0F70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989AC2950>\nbody_key = 'service_orchestration_profile_voice'\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create and update service orchestration profile - Voice Service')\n    @pytest.mark.parametrize('body_key', [\"service_orchestration_profile_voice\"])\n    def test_create_query_with_params(self,base_api,body_key):\n        json_data = load_body(body_key)\n        response= base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_service_orchestration_profile.py:219: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750184709408,"stop":1750184709410,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002C9869E0F70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989AC2950>\nbody_key = 'service_orchestration_profile_voice'\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create and update service orchestration profile - Voice Service')\n    @pytest.mark.parametrize('body_key', [\"service_orchestration_profile_voice\"])\n    def test_create_query_with_params(self,base_api,body_key):\n        json_data = load_body(body_key)\n        response= base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_service_orchestration_profile.py:219: AssertionError","steps":[],"attachments":[{"uid":"7f48b7eaa6eb93a","name":"Request Info","source":"7f48b7eaa6eb93a.json","type":"application/json","size":2032},{"uid":"3571ccfdf2d40357","name":"Response Info","source":"3571ccfdf2d40357.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Service Orchestration Profile API"},{"name":"feature","value":"UPDATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_service_orchestration_profile"},{"name":"subSuite","value":"TestServiceOrchestrationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_service_orchestration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"body_key","value":"'service_orchestration_profile_voice'"}],"links":[{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"31e325769e02a522.json","parameterValues":["'test'","'service_orchestration_profile_voice'"]}