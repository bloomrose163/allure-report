{"uid":"5a8d52f4ef655917","name":"Test - create static group member with patameters","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"9defa740a130012677d449a2138451e4","time":{"start":1748590178554,"stop":1748590179565,"duration":1011},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000019F99DCA4D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99A3ABC0>\nparam = {'memberInfo': 'ponreg123'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"04:bc:9f:21:d0:6d\"\n        },\n        {\n            \"memberInfo\":\"ponreg123\"\n        },\n        {\n            \"memberInfo\":\"eaec5289-e4a3-476e-ad2b-561ea5b9881a\"\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n        json_data[\"memberInfo\"] = param[\"memberInfo\"]\n    \n    \n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:149: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748590122300,"stop":1748590122547,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748590122547,"stop":1748590123981,"duration":1434},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748590178550,"stop":1748590178554,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000019F99DCA4D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99A3ABC0>\nparam = {'memberInfo': 'ponreg123'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"04:bc:9f:21:d0:6d\"\n        },\n        {\n            \"memberInfo\":\"ponreg123\"\n        },\n        {\n            \"memberInfo\":\"eaec5289-e4a3-476e-ad2b-561ea5b9881a\"\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n        json_data[\"memberInfo\"] = param[\"memberInfo\"]\n    \n    \n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:149: AssertionError","steps":[],"attachments":[{"uid":"37aeccd189f9c62","name":"Request Info","source":"37aeccd189f9c62.json","type":"application/json","size":265},{"uid":"f78a63a4b7a89706","name":"Response Info","source":"f78a63a4b7a89706.json","type":"application/json","size":314},{"uid":"cfcb1c76424e9040","name":"Request Info","source":"cfcb1c76424e9040.json","type":"application/json","size":239},{"uid":"e84708f432dea4f0","name":"Response Info","source":"e84708f432dea4f0.json","type":"application/json","size":162}],"parameters":[],"attachmentsCount":4,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'memberInfo': 'ponreg123'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5a8d52f4ef655917.json","parameterValues":["'dev'","{'memberInfo': 'ponreg123'}"]}