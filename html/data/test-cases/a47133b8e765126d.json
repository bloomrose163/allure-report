{"uid":"a47133b8e765126d","name":"Negative Test - get all the static group member with different param:None","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_list_negative","historyId":"e20a50d8fc6032d70b2db1f32d91dde6","time":{"start":1748715493941,"stop":1748715494621,"duration":680},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000023DBDD362F0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023DBD8CEC20>\nparam = {'memberInfo': 'non-exsit'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n            assert response.status_code == 500\n        else:\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:402: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748715328519,"stop":1748715328724,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1748715328724,"stop":1748715330109,"duration":1385},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api","time":{"start":1748715493925,"stop":1748715493941,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000023DBDD362F0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023DBD8CEC20>\nparam = {'memberInfo': 'non-exsit'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n            assert response.status_code == 500\n        else:\n>           assert response.status_code == 200\nE           assert 404 == 200\nE            +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:402: AssertionError","steps":[],"attachments":[{"uid":"ed712ae89ef86c69","name":"Request Info","source":"ed712ae89ef86c69.json","type":"application/json","size":183},{"uid":"18496af272b2d1ee","name":"Response Info","source":"18496af272b2d1ee.json","type":"application/json","size":73}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"QUERY"},{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"46036-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'memberInfo': 'non-exsit'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"a47133b8e765126d.json","parameterValues":["'dev'","{'memberInfo': 'non-exsit'}"]}