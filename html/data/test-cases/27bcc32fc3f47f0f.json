{"uid":"27bcc32fc3f47f0f","name":"Test - create static system group, create static group members , display the system group and check this group can't be deleted","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_group_static","historyId":"6419f39ea8ee9a26f43b002bb19b56f9","time":{"start":1748341686746,"stop":1748341692028,"duration":5282},"status":"failed","statusMessage":"AssertionError: assert 400 == 403\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000020EFA09DC90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB6AA230>\n\n    @allure.title('Test - create static system group, create static group members , display the system group and check this group can\\'t be deleted')\n    def test_create_group_static(self,base_api):\n        # create a static system group\n        response = base_api.create(endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        member_endpoint = 'static-group-member'\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(member_endpoint,json_data,need_random=False, field=None)\n        member_id = response_member.json()['_id']\n        assert response_member.status_code == 200\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n            # delete the group\n        response_delete= base_api.delete(endpoint,params,static_group_id)\n>       assert response_delete.status_code == 403\nE       assert 400 == 403\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:272: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748341295951,"stop":1748341296045,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748341296045,"stop":1748341297421,"duration":1376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"base_api","time":{"start":1748341686742,"stop":1748341686745,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 403\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000020EFA09DC90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EFB6AA230>\n\n    @allure.title('Test - create static system group, create static group members , display the system group and check this group can\\'t be deleted')\n    def test_create_group_static(self,base_api):\n        # create a static system group\n        response = base_api.create(endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        member_endpoint = 'static-group-member'\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(member_endpoint,json_data,need_random=False, field=None)\n        member_id = response_member.json()['_id']\n        assert response_member.status_code == 200\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n            # delete the group\n        response_delete= base_api.delete(endpoint,params,static_group_id)\n>       assert response_delete.status_code == 403\nE       assert 400 == 403\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:272: AssertionError","steps":[],"attachments":[{"uid":"cae40ca763c03b94","name":"Request Info","source":"cae40ca763c03b94.json","type":"application/json","size":266},{"uid":"d33b7fa8dba64349","name":"Response Info","source":"d33b7fa8dba64349.json","type":"application/json","size":314},{"uid":"9fbc4db23525e750","name":"Request Info","source":"9fbc4db23525e750.json","type":"application/json","size":263},{"uid":"dffbe3a67e74a2f1","name":"Response Info","source":"dffbe3a67e74a2f1.json","type":"application/json","size":247},{"uid":"2dedaff2f98c0bcd","name":"Request Info","source":"2dedaff2f98c0bcd.json","type":"application/json","size":155},{"uid":"f7d7af52892e8d0c","name":"Response Info","source":"f7d7af52892e8d0c.json","type":"application/json","size":614},{"uid":"e9c8e938f2d3d4aa","name":"Request Info","source":"e9c8e938f2d3d4aa.json","type":"application/json","size":158},{"uid":"1338ed757f49a72b","name":"Response Info","source":"1338ed757f49a72b.json","type":"application/json","size":148}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":8,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"42176-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"27bcc32fc3f47f0f.json","parameterValues":["'test'"]}