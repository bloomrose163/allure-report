{"uid":"938f0ff73aa48f4a","name":"Test - test create & delete twice","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_create_delete_twice","historyId":"158be0f8dea18fa91c5f2180c1dcb0a3","time":{"start":1749781707703,"stop":1749781707703,"duration":0},"status":"broken","statusMessage":"KeyError: 'test'","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002802B1AA500>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002802B6B9C00>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test create & delete twice')\n    def test_get_create_delete_twice(self,base_api):\n      json_data = load_body(\"workflow_create\")\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntestcase\\ACS\\test_api_acs_common.py:35: in verify_create_get_delete_twice\n    response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\nutils\\base_api_acs.py:165: in create\n    return self.request(method='POST',endpoint=endpoint,json=json_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002802B6B9C00>\nmethod = 'POST', endpoint = 'workflow', kwargs = {}\nurl = 'http://acs-api.testx.xilac.net/cc/workflow'\nheaders = {'Content-Type': 'application/json', 'X-Calix-ClientID': 'KTd0rgovlUvdihkkHGnIMCV23Z8c5Uh1', 'accept': 'application/json', 'x-Calix-Accesstoken': 'AnMR8w9fo23tzDPMqFa10GsLAYYZ'}\ncookies = None, params = None, data = None\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\nfiles = None\n\n    def request(self, method, endpoint, **kwargs):\n        url = self.base_url + endpoint\n        headers= Default().headers\n        headers = kwargs.pop(\"headers\", headers)\n        cookies = kwargs.pop(\"cookies\", None)\n        params = kwargs.pop(\"params\", None)\n        data = kwargs.pop(\"data\", None)\n        json_data = kwargs.pop(\"json\", None)\n        files = kwargs.pop(\"files\", None)\n        timeout = kwargs.pop(\"timeout\", 10)\n        no_org = kwargs.pop(\"no_org\", False)\n        # TODO  placeholder\n        start_time = time.time()\n        merged_params = self._merge_params(params,no_org)\n        if \"orgId\" and json_data and \"orgId\" in json_data:\n>            json_data[\"orgId\"] = ENV_CONFIG[self.env][\"orgId\"]\nE            KeyError: 'test'\n\nutils\\base_api_acs.py:70: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749781650098,"stop":1749781650174,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749781650174,"stop":1749781651565,"duration":1391},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749781707703,"stop":1749781707703,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[],"labels":[{"name":"feature","value":"COMMON"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"12432-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"938f0ff73aa48f4a.json","parameterValues":["'test'"]}