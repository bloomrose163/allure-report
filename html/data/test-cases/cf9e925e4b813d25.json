{"uid":"cf9e925e4b813d25","name":"Test - Query device count with different paramters:{'limit': 3}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"b3677d12fd37bb7d29ce07d82da66107","time":{"start":1749014020971,"stop":1749014021918,"duration":947},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001F1D0CB0B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D3337A30>\nparam = {'limit': 3}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014020971,"stop":1749014020971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001F1D0CB0B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D3337A30>\nparam = {'limit': 3}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","steps":[],"attachments":[{"uid":"77dd478874f3cf7d","name":"Request Info","source":"77dd478874f3cf7d.json","type":"application/json","size":148},{"uid":"9b26ec7d73856511","name":"Response Info","source":"9b26ec7d73856511.json","type":"application/json","size":86}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'limit': 3}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"cf9e925e4b813d25.json","parameterValues":["'dev'","{'limit': 3}"]}