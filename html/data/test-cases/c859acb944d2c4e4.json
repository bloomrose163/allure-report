{"uid":"c859acb944d2c4e4","name":"Test - get all the static group member with different param:None","fullName":"testcase.ACS.test_orphan-device.TestOrphanDevice#test_get_member_list_param","historyId":"0f69702b1eb357301066ea1264e7c0e0","time":{"start":1749014096357,"stop":1749014097320,"duration":963},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9A50>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D335CB50>\nparam = {'bWithDeviceRecord': 'True', 'memberInfo': 'CXNK0151C334'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        # {\n        # },\n        # {\n        #     \"limit\": 2,\n        # },\n        # {\n        #     \"skip\": 1,\n        #     \"limit\": 3\n        # },\n        # {\n        #     \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        # },\n        # {\n        #     \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        # },\n        # {\n        #     \"memberInfo\":\"CXNK00A5F0B4\"\n        # },\n        # {\n        #     \"_id\": \"non-exsit\"\n        # },\n        # {\n        #     \"groupId\":\"non-exsit\"\n        # },\n        # {\n        #     \"memberInfo\":\"non-exsit\"\n        # },\n        # {\n        #     \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n        #     \"bUndiscovered\":\"True\",\"limit\": 3\n        # },\n        # {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n        #     \"bDiscovered\":\"True\",\"limit\": 3\n        # },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\"\n        },\n        # {\n        #     \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        # },\n        # {\n        #     \"bIncludeInheritance\":\"True\",\"limit\": 3\n        # },\n        # {\n        #     \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        # }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_orphan-device.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014096355,"stop":1749014096356,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_orphan-device.TestOrphanDevice object at 0x000001F1D0CD9A50>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D335CB50>\nparam = {'bWithDeviceRecord': 'True', 'memberInfo': 'CXNK0151C334'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        # {\n        # },\n        # {\n        #     \"limit\": 2,\n        # },\n        # {\n        #     \"skip\": 1,\n        #     \"limit\": 3\n        # },\n        # {\n        #     \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        # },\n        # {\n        #     \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        # },\n        # {\n        #     \"memberInfo\":\"CXNK00A5F0B4\"\n        # },\n        # {\n        #     \"_id\": \"non-exsit\"\n        # },\n        # {\n        #     \"groupId\":\"non-exsit\"\n        # },\n        # {\n        #     \"memberInfo\":\"non-exsit\"\n        # },\n        # {\n        #     \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n        #     \"bUndiscovered\":\"True\",\"limit\": 3\n        # },\n        # {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n        #     \"bDiscovered\":\"True\",\"limit\": 3\n        # },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\"\n        },\n        # {\n        #     \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        # },\n        # {\n        #     \"bIncludeInheritance\":\"True\",\"limit\": 3\n        # },\n        # {\n        #     \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        # }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_orphan-device.py:95: AssertionError","steps":[],"attachments":[{"uid":"104e3dd574beaa8c","name":"Request Info","source":"104e3dd574beaa8c.json","type":"application/json","size":237},{"uid":"8098669be02d0a1","name":"Response Info","source":"8098669be02d0a1.json","type":"application/json","size":77}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"ACS orphan-device & assign-to-org API"},{"name":"feature","value":"QUERY"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_orphan-device"},{"name":"subSuite","value":"TestOrphanDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_orphan-device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'memberInfo': 'CXNK0151C334', 'bWithDeviceRecord': 'True'}"}],"links":[{"name":"CTM-314479","url":"CTM-314479","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c859acb944d2c4e4.json","parameterValues":["'aws'","{'memberInfo': 'CXNK0151C334', 'bWithDeviceRecord': 'True'}"]}