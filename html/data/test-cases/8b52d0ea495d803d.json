{"uid":"8b52d0ea495d803d","name":"Test - crud record ","fullName":"testcase.ACS.test_configuration_profile.TestConfigurationProfile#test_crud","historyId":"4b4eacd843d98091dc710d44aea2a690","time":{"start":1750184324511,"stop":1750184333404,"duration":8893},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000002C9869782E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98AC2FAF0>\n\n    @allure.title('Test - crud record ')\n    #@pytest.mark.skip()\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        response_create = base_api.create(endpoint,load_body(\"profile_create\"),True,\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n>       assert response_get.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_configuration_profile.py:108: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750184324507,"stop":1750184324511,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000002C9869782E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C98AC2FAF0>\n\n    @allure.title('Test - crud record ')\n    #@pytest.mark.skip()\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        response_create = base_api.create(endpoint,load_body(\"profile_create\"),True,\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n>       assert response_get.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_configuration_profile.py:108: AssertionError","steps":[],"attachments":[{"uid":"8f580db84eda385","name":"Request Info","source":"8f580db84eda385.json","type":"application/json","size":847},{"uid":"62b6bf27ef3322ba","name":"Response Info","source":"62b6bf27ef3322ba.json","type":"application/json","size":878},{"uid":"d3f8dfd854f6d517","name":"Request Info","source":"d3f8dfd854f6d517.json","type":"application/json","size":171},{"uid":"71556cfd69e937cd","name":"Response Info","source":"71556cfd69e937cd.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":4,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_configuration_profile"},{"name":"subSuite","value":"TestConfigurationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_configuration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"8b52d0ea495d803d.json","parameterValues":["'test'"]}