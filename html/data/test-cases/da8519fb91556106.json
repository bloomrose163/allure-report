{"uid":"da8519fb91556106","name":"Test - 1.can not delete group associated with group 2.forceDelete","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_cpe_filter","historyId":"53503af982c703328c37166da7bc0a49","time":{"start":1747983678025,"stop":1747983679647,"duration":1622},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x000001B87A14C910>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x000001B87A1DFA30>\n\n    @allure.title('Test - 1.can not delete group associated with group 2.forceDelete')\n    def test_create_cpe_filter(self,base_api):\n    \n        # Prediction -  apply static group for workflow\n        json_data = load_json(file_paths[\"static\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        static_group = response_create.json()['_id']\n    \n        # create a group\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        json_data[\"actions\"][0][\"staticGroupId\"] = [static_group]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747983676445,"stop":1747983676574,"duration":129},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747983676575,"stop":1747983678022,"duration":1447},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747983678022,"stop":1747983678024,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x000001B87A14C910>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x000001B87A1DFA30>\n\n    @allure.title('Test - 1.can not delete group associated with group 2.forceDelete')\n    def test_create_cpe_filter(self,base_api):\n    \n        # Prediction -  apply static group for workflow\n        json_data = load_json(file_paths[\"static\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        static_group = response_create.json()['_id']\n    \n        # create a group\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        json_data[\"actions\"][0][\"staticGroupId\"] = [static_group]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:54: AssertionError","steps":[],"attachments":[{"uid":"ac5bd9206e4d371a","name":"Request Info","source":"ac5bd9206e4d371a.json","type":"application/json","size":263},{"uid":"399204fd051a19b3","name":"Response Info","source":"399204fd051a19b3.json","type":"application/json","size":91},{"uid":"30eb10cbe7c0455e","name":"Request Info","source":"30eb10cbe7c0455e.json","type":"application/json","size":374},{"uid":"57a78e121834d440","name":"Response Info","source":"57a78e121834d440.json","type":"application/json","size":91},{"uid":"20be775836442ced","name":"Request Info","source":"20be775836442ced.json","type":"application/json","size":842},{"uid":"14bbb236ebe85295","name":"Response Info","source":"14bbb236ebe85295.json","type":"application/json","size":149}],"parameters":[],"attachmentsCount":6,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"5732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"da8519fb91556106.json","parameterValues":["'aws'"]}