{"uid":"149bb2da15d847","name":"Test - get all the static group member with different param:None","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_list_param","historyId":"fca8470e862ebfeb3cd35219359fb389","time":{"start":1748629137356,"stop":1748629137897,"duration":541},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001B320CAE710>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001B3220B6590>\nparam = {'bWithDeviceRecord': 'True', 'memberInfo': 'CXNK0151C334'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        {\n        },\n        {\n            \"limit\": 2,\n        },\n        {\n            \"skip\": 1,\n            \"limit\": 3\n        },\n        {\n            \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        },\n        {\n            \"memberInfo\":\"CXNK00A5F0B4\"\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n        {\n            \"memberInfo\":\"non-exsit\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bUndiscovered\":\"True\",\"limit\": 3\n        },\n        {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bDiscovered\":\"True\",\"limit\": 3\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\"\n        },\n        {\n            \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeInheritance\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:318: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748628992557,"stop":1748628992826,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748628992826,"stop":1748628994234,"duration":1408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"base_api","time":{"start":1748629137340,"stop":1748629137356,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001B320CAE710>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001B3220B6590>\nparam = {'bWithDeviceRecord': 'True', 'memberInfo': 'CXNK0151C334'}\n\n    @allure.feature('QUERY')\n    @allure.title(f'Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        {\n        },\n        {\n            \"limit\": 2,\n        },\n        {\n            \"skip\": 1,\n            \"limit\": 3\n        },\n        {\n            \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        },\n        {\n            \"memberInfo\":\"CXNK00A5F0B4\"\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n        {\n            \"memberInfo\":\"non-exsit\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bUndiscovered\":\"True\",\"limit\": 3\n        },\n        {   \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\",\n            \"bDiscovered\":\"True\",\"limit\": 3\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\",\n            \"bWithDeviceRecord\":\"True\"\n        },\n        {\n            \"bWithSubscriberInfo\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeInheritance\":\"True\",\"limit\": 3\n        },\n        {\n            \"bIncludeOtherDeviceIdForms\":\"True\",\"limit\": 3\n        }\n    ])\n    def test_get_member_list_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:318: AssertionError","steps":[],"attachments":[{"uid":"be78607a81a46867","name":"Request Info","source":"be78607a81a46867.json","type":"application/json","size":245},{"uid":"883e61fb395e4698","name":"Response Info","source":"883e61fb395e4698.json","type":"application/json","size":135}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"QUERY"},{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"50656-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'memberInfo': 'CXNK0151C334', 'bWithDeviceRecord': 'True'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"149bb2da15d847.json","parameterValues":["'dev'","{'memberInfo': 'CXNK0151C334', 'bWithDeviceRecord': 'True'}"]}