{"uid":"6e2757c269d6bb1a","name":"Test - get record ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_list_by_param","historyId":"dccb568bc7eac189ff4319d6137e6ca4","time":{"start":1748591298800,"stop":1748591299392,"duration":592},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001FF650378B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF66456170>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 500 == 200\nE      +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748591198413,"stop":1748591198644,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1748591198644,"stop":1748591200107,"duration":1463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1748591298798,"stop":1748591298799,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001FF650378B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FF66456170>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 500 == 200\nE      +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:86: AssertionError","steps":[],"attachments":[{"uid":"a54e87fcf95aeaf6","name":"Request Info","source":"a54e87fcf95aeaf6.json","type":"application/json","size":174},{"uid":"a77308e287fdb852","name":"Response Info","source":"a77308e287fdb852.json","type":"application/json","size":162}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"28084-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"params","value":"{'orderBy': {'name': -1}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6e2757c269d6bb1a.json","parameterValues":["'dev'","{'orderBy': {'name': -1}}"]}