{"uid":"fad6fb246afa5902","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_create_provisioning_record","historyId":"431616ab0e10b154b65c26765f3e8529","time":{"start":1748326214448,"stop":1748326246424,"duration":31976},"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000021CA098ED70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA21087C0>\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    @pytest.mark.parametrize('file_path',[file_paths[\"sip\"]])\n    # @pytest.mark.parametrize('file_path',file_paths.values())\n    def test_create_provisioning_record(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748324557190,"stop":1748324557313,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748324557313,"stop":1748324558634,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748326214445,"stop":1748326214447,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000021CA098ED70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA21087C0>\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    @pytest.mark.parametrize('file_path',[file_paths[\"sip\"]])\n    # @pytest.mark.parametrize('file_path',file_paths.values())\n    def test_create_provisioning_record(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:47: AssertionError","steps":[],"attachments":[{"uid":"c884aac811aa8791","name":"Request Info","source":"c884aac811aa8791.json","type":"application/json","size":1183},{"uid":"cfc6061d9218963c","name":"Response Info","source":"cfc6061d9218963c.json","type":"application/json","size":62}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"51132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_SIP.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"fad6fb246afa5902.json","parameterValues":["'dev'","'./testdata/ACS/provisioning_record_voice_SIP.json'"]}