{"uid":"8ae7a9072076d951","name":"Test - create static group member with patameters {'memberInfo': 'e4:6c:d1:43:44:0e'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"8c86da13e3038c89000be405c46d1935","time":{"start":1749203298627,"stop":1749203305919,"duration":7292},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001828DD2EA70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000018290DA0730>\nparam = {'memberInfo': 'e4:6c:d1:43:44:0e'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749203008604,"stop":1749203008697,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1749203008698,"stop":1749203010173,"duration":1475},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api","time":{"start":1749203298624,"stop":1749203298626,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001828DD2EA70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000018290DA0730>\nparam = {'memberInfo': 'e4:6c:d1:43:44:0e'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","steps":[],"attachments":[{"uid":"4b540ae4cc9b349c","name":"Request Info","source":"4b540ae4cc9b349c.json","type":"application/json","size":1176},{"uid":"fd72f3e26da34e47","name":"Response Info","source":"fd72f3e26da34e47.json","type":"application/json","size":119},{"uid":"1a6af9b47c45c54b","name":"Request Info","source":"1a6af9b47c45c54b.json","type":"application/json","size":186},{"uid":"b45e6e18ff154d93","name":"Response Info","source":"b45e6e18ff154d93.json","type":"application/json","size":1439},{"uid":"63644e91365073d4","name":"Request Info","source":"63644e91365073d4.json","type":"application/json","size":172},{"uid":"ee02991d07d5efc4","name":"Response Info","source":"ee02991d07d5efc4.json","type":"application/json","size":66},{"uid":"87a7c7bdddf1025b","name":"Request Info","source":"87a7c7bdddf1025b.json","type":"application/json","size":1176},{"uid":"e8acdaba2e71c5db","name":"Response Info","source":"e8acdaba2e71c5db.json","type":"application/json","size":225}],"parameters":[],"attachmentsCount":8,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Static Group Member API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'e4:6c:d1:43:44:0e'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"8ae7a9072076d951.json","parameterValues":["'test'","{'memberInfo': 'e4:6c:d1:43:44:0e'}"]}