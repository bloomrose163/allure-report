{"uid":"efb7b8182dc413cc","name":"Test - get list ","fullName":"testcase.ACS.test_api_swagger.TestAPI#test_get_list_by_param","historyId":"491e69fde012bb83242dff5b9f361d4d","time":{"start":1749203013224,"stop":1749203014946,"duration":1722},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_api_swagger.TestAPI object at 0x000001828DC6BBB0>\nbase_api_acs = (<utils.base_api_acs.BaseAPIACS object at 0x000001828F397B20>, 'configuration-profile')\nparams = {'limit': 2}\n\n    @allure.title('Test - get list ')\n    # @pytest.mark.parametrize('params',[{\"deviceId\":\"CXNK0151C334\"},{\"deviceId\":\"04:bc:9f:21:d0:6d\"},{\"deviceId\":\"reg123\"},{\"limit\": 3}])\n    @pytest.mark.parametrize('params',[{\"limit\": 2}])\n    def test_get_list_by_param(self,base_api_acs,params):\n        client, endpoint = base_api_acs\n        response = client.get_list_by_param(endpoint,params)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_swagger.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749203008604,"stop":1749203008697,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1749203008698,"stop":1749203010173,"duration":1475},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api_acs","time":{"start":1749203013220,"stop":1749203013223,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_api_swagger.TestAPI object at 0x000001828DC6BBB0>\nbase_api_acs = (<utils.base_api_acs.BaseAPIACS object at 0x000001828F397B20>, 'configuration-profile')\nparams = {'limit': 2}\n\n    @allure.title('Test - get list ')\n    # @pytest.mark.parametrize('params',[{\"deviceId\":\"CXNK0151C334\"},{\"deviceId\":\"04:bc:9f:21:d0:6d\"},{\"deviceId\":\"reg123\"},{\"limit\": 3}])\n    @pytest.mark.parametrize('params',[{\"limit\": 2}])\n    def test_get_list_by_param(self,base_api_acs,params):\n        client, endpoint = base_api_acs\n        response = client.get_list_by_param(endpoint,params)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_swagger.py:30: AssertionError","steps":[],"attachments":[{"uid":"2550ed252a7a81c6","name":"Request Info","source":"2550ed252a7a81c6.json","type":"application/json","size":158},{"uid":"eb57cc9c8e3fdd7f","name":"Response Info","source":"eb57cc9c8e3fdd7f.json","type":"application/json","size":86}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_api_swagger"},{"name":"subSuite","value":"TestAPI"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_api_swagger"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api_acs","value":"('test', 'configuration-profile')"},{"name":"params","value":"{'limit': 2}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"efb7b8182dc413cc.json","parameterValues":["('test', 'configuration-profile')","{'limit': 2}"]}