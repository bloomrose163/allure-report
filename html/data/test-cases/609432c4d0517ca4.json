{"uid":"609432c4d0517ca4","name":"Test - create static group member with patameters {'memberInfo': 'e4:6c:d1:43:44:0e'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"8c86da13e3038c89000be405c46d1935","time":{"start":1749801970927,"stop":1749801985001,"duration":14074},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000002387CFA2E00>\nbase_api = <utils.base_api.BaseAPI object at 0x000002387FC11FF0>\nparam = {'memberInfo': 'e4:6c:d1:43:44:0e'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n        pr_id = response_create.json()['_id']\n    \n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n>       static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_static_group_member.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api.BaseAPI object at 0x000002387FC11FF0>, endpoint = 'group'\njson_data = {'allowInheritance': True, 'cpeFilter': {}, 'description': 'system group description', 'name': 'groupfWGbRI', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api.py:172: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749801515235,"stop":1749801515320,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1749801515320,"stop":1749801516605,"duration":1285},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1749801970915,"stop":1749801970926,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000002387CFA2E00>\nbase_api = <utils.base_api.BaseAPI object at 0x000002387FC11FF0>\nparam = {'memberInfo': 'e4:6c:d1:43:44:0e'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n        pr_id = response_create.json()['_id']\n    \n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n>       static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_static_group_member.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api.BaseAPI object at 0x000002387FC11FF0>, endpoint = 'group'\njson_data = {'allowInheritance': True, 'cpeFilter': {}, 'description': 'system group description', 'name': 'groupfWGbRI', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api.py:172: KeyError","steps":[],"attachments":[{"uid":"e908a8f2a31cce6c","name":"Request Info","source":"e908a8f2a31cce6c.json","type":"application/json","size":1176},{"uid":"409bd2606414a71e","name":"Response Info","source":"409bd2606414a71e.json","type":"application/json","size":119},{"uid":"42ac77332c95b8c6","name":"Request Info","source":"42ac77332c95b8c6.json","type":"application/json","size":186},{"uid":"5ac33b7f641d5be9","name":"Response Info","source":"5ac33b7f641d5be9.json","type":"application/json","size":1439},{"uid":"c6ce7eb7535c29c4","name":"Request Info","source":"c6ce7eb7535c29c4.json","type":"application/json","size":172},{"uid":"ad67ac64e4776739","name":"Response Info","source":"ad67ac64e4776739.json","type":"application/json","size":66},{"uid":"5738e38724d01ad8","name":"Request Info","source":"5738e38724d01ad8.json","type":"application/json","size":1176},{"uid":"94581a0b106b0ea1","name":"Response Info","source":"94581a0b106b0ea1.json","type":"application/json","size":1337},{"uid":"e7ca27955bb79bdb","name":"Request Info","source":"e7ca27955bb79bdb.json","type":"application/json","size":266},{"uid":"ab1fec27c04033b","name":"Response Info","source":"ab1fec27c04033b.json","type":"application/json","size":225}],"parameters":[],"attachmentsCount":10,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"41128-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'e4:6c:d1:43:44:0e'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"609432c4d0517ca4.json","parameterValues":["'test'","{'memberInfo': 'e4:6c:d1:43:44:0e'}"]}