{"uid":"ea6ff1507bbf1e0b","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"e11d44e563c1949d6ba7935d3333fba8","time":{"start":1749666094343,"stop":1749666099861,"duration":5518},"status":"broken","statusMessage":"KeyError: 0","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000027E7AB5EE60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7F18E170>\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7F18E170>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:190: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749665848420,"stop":1749665848485,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749665848485,"stop":1749665849786,"duration":1301},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749666094343,"stop":1749666094343,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"KeyError: 0","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000027E7AB5EE60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7F18E170>\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x0000027E7F18E170>\nendpoint = 'provisioning-record'\nfile_path = './testdata/ACS/provisioning_record_voice_SIP.json'\nquery_param = {'deviceId': 'CXNK00AFB83B'}, params = None\n\n    def create_when_exist(self,endpoint,file_path,query_param,params=None):\n        json_data = load_json(file_path)\n        response_create = self.create(endpoint,json_data,need_random=False, field=None)\n        if response_create.status_code == 409:\n           response_get = self.get_list_by_param(endpoint,query_param)\n>          self.delete(endpoint,params,response_get.json()[0]['_id'])\nE          KeyError: 0\n\nutils\\base_api_acs.py:190: KeyError","steps":[],"attachments":[{"uid":"d751ec44ff3370b7","name":"Request Info","source":"d751ec44ff3370b7.json","type":"application/json","size":1184},{"uid":"489f6fd62a767abb","name":"Response Info","source":"489f6fd62a767abb.json","type":"application/json","size":119},{"uid":"5fb9e2dffe132237","name":"Request Info","source":"5fb9e2dffe132237.json","type":"application/json","size":186},{"uid":"8d94a4f3d6237a31","name":"Response Info","source":"8d94a4f3d6237a31.json","type":"application/json","size":429}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"8644-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_SIP.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"ea6ff1507bbf1e0b.json","parameterValues":["'test'","'./testdata/ACS/provisioning_record_voice_SIP.json'"]}