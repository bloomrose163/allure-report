{"uid":"dc53367253ed4864","name":"Test - CRUD - create service orchestration profile with profile, bandwidth ","fullName":"testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_video","historyId":"de71351b7485759406bea1c8c11cf382","time":{"start":1749806672922,"stop":1749806676812,"duration":3890},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000001C2C24470A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C650E560>\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n        bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n>       mcastFilter_id = base_api.create_get_id(endpoint,mcastFilter_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C650E560>\nendpoint = 'service-orchestration-profile'\njson_data = {'bApply': True, 'category': 'Video - Multicast Range Filters', 'filters': [{'end': '225.1.1.1', 'start': '225.1.0.1'}], 'name': 'service_orchestration_profileEDlNwh', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749806249152,"stop":1749806249231,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749806249231,"stop":1749806250516,"duration":1285},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"base_api","time":{"start":1749806672921,"stop":1749806672922,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000001C2C24470A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C650E560>\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n        bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n>       mcastFilter_id = base_api.create_get_id(endpoint,mcastFilter_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C650E560>\nendpoint = 'service-orchestration-profile'\njson_data = {'bApply': True, 'category': 'Video - Multicast Range Filters', 'filters': [{'end': '225.1.1.1', 'start': '225.1.0.1'}], 'name': 'service_orchestration_profileEDlNwh', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","steps":[],"attachments":[{"uid":"38f8782760337585","name":"Request Info","source":"38f8782760337585.json","type":"application/json","size":293},{"uid":"d8febd25a6a8e854","name":"Response Info","source":"d8febd25a6a8e854.json","type":"application/json","size":622},{"uid":"390a70c37ba62f5c","name":"Request Info","source":"390a70c37ba62f5c.json","type":"application/json","size":383},{"uid":"2f0ea29ff0b34e2e","name":"Response Info","source":"2f0ea29ff0b34e2e.json","type":"application/json","size":225}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":4,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"ACS Service Orchestration Profile API"},{"name":"feature","value":"UPDATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_service_orchestration_profile"},{"name":"subSuite","value":"TestServiceOrchestrationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"5088-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_service_orchestration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"dc53367253ed4864.json","parameterValues":["'test'"]}