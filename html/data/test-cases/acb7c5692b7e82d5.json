{"uid":"acb7c5692b7e82d5","name":"Test - create static group member with patameters {'memberInfo': 'provisioning-record'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"cf13a3870a171a1163128346fc552807","time":{"start":1750443803396,"stop":1750443807019,"duration":3623},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000127E816D8A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000127EB20CBE0>\nparam = {'memberInfo': 'provisioning-record'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750443408219,"stop":1750443408503,"duration":284},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1750443408503,"stop":1750443409839,"duration":1336},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1750443803396,"stop":1750443803396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000127E816D8A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000127EB20CBE0>\nparam = {'memberInfo': 'provisioning-record'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","steps":[],"attachments":[{"uid":"9630b847a2009926","name":"Request Info","source":"9630b847a2009926.json","type":"application/json","size":1176},{"uid":"adfb01dcdad0d25a","name":"Response Info","source":"adfb01dcdad0d25a.json","type":"application/json","size":86}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"ACS Static Group Member API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'provisioning-record'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"acb7c5692b7e82d5.json","parameterValues":["'test'","{'memberInfo': 'provisioning-record'}"]}