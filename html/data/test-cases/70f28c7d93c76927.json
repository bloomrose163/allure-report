{"uid":"70f28c7d93c76927","name":"Test - test the paramter are case-insensitive ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_case_sensitive","historyId":"90531c650c98a7b3561123a257397ff8","time":{"start":1747910165662,"stop":1747910166819,"duration":1157},"status":"failed","statusMessage":"AssertionError: assert 0 != 0","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006552620>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007DB3F10>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_workflow_11\"\n      params={\"name\": name,\"limit\": 2}\n      response = base_api.get_list_by_param(endpoint,params)\n      assert response.status_code == 200\n      count_lower = len(response.json())\n      params={\"name\": name.upper(),\"limit\": 2}\n    #  params={\"name\": name,\"limit\": 2}\n      response_upper = base_api.get_list_by_param(endpoint,params)\n      assert response_upper.status_code == 200\n      count_upper = len(response_upper.json())\n      print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n>     assert count_lower != count_upper\nE     assert 0 != 0\n\ntestcase\\ACS\\test_workflow.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747910047428,"stop":1747910047530,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747910047530,"stop":1747910049127,"duration":1597},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747910165662,"stop":1747910165662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 != 0","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006552620>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007DB3F10>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_workflow_11\"\n      params={\"name\": name,\"limit\": 2}\n      response = base_api.get_list_by_param(endpoint,params)\n      assert response.status_code == 200\n      count_lower = len(response.json())\n      params={\"name\": name.upper(),\"limit\": 2}\n    #  params={\"name\": name,\"limit\": 2}\n      response_upper = base_api.get_list_by_param(endpoint,params)\n      assert response_upper.status_code == 200\n      count_upper = len(response_upper.json())\n      print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n>     assert count_lower != count_upper\nE     assert 0 != 0\n\ntestcase\\ACS\\test_workflow.py:69: AssertionError","steps":[],"attachments":[{"uid":"97b787296e2d6d39","name":"Request Info","source":"97b787296e2d6d39.json","type":"application/json","size":198},{"uid":"2aa48267ab715aab","name":"Response Info","source":"2aa48267ab715aab.json","type":"application/json","size":38},{"uid":"cb5a49ea003a8062","name":"Request Info","source":"cb5a49ea003a8062.json","type":"application/json","size":198},{"uid":"a117c4dc29d92e76","name":"Response Info","source":"a117c4dc29d92e76.json","type":"application/json","size":38}],"parameters":[],"attachmentsCount":4,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"24568-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"70f28c7d93c76927.json","parameterValues":["'dev'"]}