{"uid":"5b8d7975c43cc82","name":"Test - Query device with different paramters:{'$matcher': {'serialNumber': 'CXNK01A8D0C7'}}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"1648f229a6e07621bcbcf3ded01c6245","time":{"start":1748283395663,"stop":1748283396624,"duration":961},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001DF5E308130>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001DF5E344970>\nparam = {'$matcher': {'serialNumber': 'CXNK01A8D0C7'}}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748283354664,"stop":1748283354756,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748283354756,"stop":1748283356192,"duration":1436},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"base_api","time":{"start":1748283395659,"stop":1748283395662,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001DF5E308130>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001DF5E344970>\nparam = {'$matcher': {'serialNumber': 'CXNK01A8D0C7'}}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","steps":[],"attachments":[{"uid":"ceeb93c37044c5fc","name":"Request Info","source":"ceeb93c37044c5fc.json","type":"application/json","size":204},{"uid":"1f5ecc697d136ac6","name":"Response Info","source":"1f5ecc697d136ac6.json","type":"application/json","size":168}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"48112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'$matcher': {'serialNumber': 'CXNK01A8D0C7'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5b8d7975c43cc82.json","parameterValues":["'dev'","{'$matcher': {'serialNumber': 'CXNK01A8D0C7'}}"]}