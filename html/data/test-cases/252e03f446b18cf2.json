{"uid":"252e03f446b18cf2","name":"Test - create static group member with patameters {'memberInfo': 'reg123'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"e97273086010adbb421a281225b66405","time":{"start":1749806764324,"stop":1749806771231,"duration":6907},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001C2C24709D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C524EEC0>\nparam = {'memberInfo': 'reg123'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749806249152,"stop":1749806249231,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749806249231,"stop":1749806250516,"duration":1285},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"base_api","time":{"start":1749806764322,"stop":1749806764324,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001C2C24709D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C524EEC0>\nparam = {'memberInfo': 'reg123'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","steps":[],"attachments":[{"uid":"ba9906ded960f921","name":"Request Info","source":"ba9906ded960f921.json","type":"application/json","size":1176},{"uid":"db45398ed59e851","name":"Response Info","source":"db45398ed59e851.json","type":"application/json","size":119},{"uid":"5ae73b8ff6b516a0","name":"Request Info","source":"5ae73b8ff6b516a0.json","type":"application/json","size":186},{"uid":"3dc082bc42866fe3","name":"Response Info","source":"3dc082bc42866fe3.json","type":"application/json","size":1439},{"uid":"858c802a612266c6","name":"Request Info","source":"858c802a612266c6.json","type":"application/json","size":172},{"uid":"25eda95abb653926","name":"Response Info","source":"25eda95abb653926.json","type":"application/json","size":225},{"uid":"e213ada7134addb2","name":"Request Info","source":"e213ada7134addb2.json","type":"application/json","size":1176},{"uid":"b4d6be1ab025ef9c","name":"Response Info","source":"b4d6be1ab025ef9c.json","type":"application/json","size":119}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":8,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"5088-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'reg123'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"252e03f446b18cf2.json","parameterValues":["'test'","{'memberInfo': 'reg123'}"]}