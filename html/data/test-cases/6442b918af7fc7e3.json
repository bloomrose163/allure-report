{"uid":"6442b918af7fc7e3","name":"Test - create static system group, create static group members, display the system group and check this group can't be deleted","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_group_static_delete","historyId":"544bec435c7b0a21738128a1017e4983","time":{"start":1748888361947,"stop":1748888367277,"duration":5330},"status":"failed","statusMessage":"AssertionError: assert 'This group i...ot be deleted' == 'This group i...t be deleted.'\n  \n  - This group is currently in use by one or more static group member(s) thus cannot be deleted.\n  ?                                                                                            -\n  + This group is currently in use by one or more static group member(s) thus cannot be deleted","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000027D6F517F40>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D70C361A0>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static system group, create static group members, display the system group and check this group can\\'t be deleted')\n    def test_create_group_static_delete(self,base_api):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        assert response_member.status_code == 200\n        member_id = response_member.json()['_id']\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(group_endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n    \n         # get static system group member info\n        response_static_group = base_api.get_by_id(endpoint,member_id)\n        assert response_static_group.status_code == 200\n    \n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n        # delete the group\n        response_delete= base_api.delete(group_endpoint,param,static_group_id)\n        assert response_delete.status_code == 403\n>       assert response_delete.json()['error'] == \"This group is currently in use by one or more static group member(s) thus cannot be deleted.\"\nE       AssertionError: assert 'This group i...ot be deleted' == 'This group i...t be deleted.'\nE         \nE         - This group is currently in use by one or more static group member(s) thus cannot be deleted.\nE         ?                                                                                            -\nE         + This group is currently in use by one or more static group member(s) thus cannot be deleted\n\ntestcase\\ACS\\test_static_group_member.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748888237032,"stop":1748888237243,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1748888237243,"stop":1748888238670,"duration":1427},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1748888361944,"stop":1748888361946,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'This group i...ot be deleted' == 'This group i...t be deleted.'\n  \n  - This group is currently in use by one or more static group member(s) thus cannot be deleted.\n  ?                                                                                            -\n  + This group is currently in use by one or more static group member(s) thus cannot be deleted","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000027D6F517F40>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D70C361A0>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static system group, create static group members, display the system group and check this group can\\'t be deleted')\n    def test_create_group_static_delete(self,base_api):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n        assert response_member.status_code == 200\n        member_id = response_member.json()['_id']\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(group_endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n    \n         # get static system group member info\n        response_static_group = base_api.get_by_id(endpoint,member_id)\n        assert response_static_group.status_code == 200\n    \n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n        # delete the group\n        response_delete= base_api.delete(group_endpoint,param,static_group_id)\n        assert response_delete.status_code == 403\n>       assert response_delete.json()['error'] == \"This group is currently in use by one or more static group member(s) thus cannot be deleted.\"\nE       AssertionError: assert 'This group i...ot be deleted' == 'This group i...t be deleted.'\nE         \nE         - This group is currently in use by one or more static group member(s) thus cannot be deleted.\nE         ?                                                                                            -\nE         + This group is currently in use by one or more static group member(s) thus cannot be deleted\n\ntestcase\\ACS\\test_static_group_member.py:67: AssertionError","steps":[],"attachments":[{"uid":"813a97cb406db676","name":"Request Info","source":"813a97cb406db676.json","type":"application/json","size":265},{"uid":"c5ba62eb8ffc36f1","name":"Response Info","source":"c5ba62eb8ffc36f1.json","type":"application/json","size":314},{"uid":"e19cc45aeaeb76e1","name":"Request Info","source":"e19cc45aeaeb76e1.json","type":"application/json","size":242},{"uid":"2f702af42e51dc83","name":"Response Info","source":"2f702af42e51dc83.json","type":"application/json","size":2555},{"uid":"c82d55e78a56f501","name":"Request Info","source":"c82d55e78a56f501.json","type":"application/json","size":154},{"uid":"c8112fe1a48197c7","name":"Response Info","source":"c8112fe1a48197c7.json","type":"application/json","size":3158},{"uid":"7967026b35a4644f","name":"Request Info","source":"7967026b35a4644f.json","type":"application/json","size":168},{"uid":"b4fbecc54c046730","name":"Response Info","source":"b4fbecc54c046730.json","type":"application/json","size":2585},{"uid":"f5893c0ef3c23c3","name":"Request Info","source":"f5893c0ef3c23c3.json","type":"application/json","size":157},{"uid":"50f63561d9dacf07","name":"Response Info","source":"50f63561d9dacf07.json","type":"application/json","size":148}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":10,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"2208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6442b918af7fc7e3.json","parameterValues":["'dev'"]}