{"uid":"248b3dce78201bea","name":"Test - create static group member with patameters {'memberInfo': 'provisioning-record'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"cf13a3870a171a1163128346fc552807","time":{"start":1749452221654,"stop":1749452231620,"duration":9966},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001FEFF680B50>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE8100F220>\nparam = {'memberInfo': 'provisioning-record'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n        pr_id = response_create.json()['_id']\n    \n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n>       static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_static_group_member.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000001FE8100F220>\nendpoint = 'group'\njson_data = {'allowInheritance': True, 'cpeFilter': {}, 'description': 'system group description', 'name': 'group6kY4U0', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:171: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749451326138,"stop":1749451326517,"duration":379},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749451326517,"stop":1749451327902,"duration":1385},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749452221651,"stop":1749452221653,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x000001FEFF680B50>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE8100F220>\nparam = {'memberInfo': 'provisioning-record'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n        pr_id = response_create.json()['_id']\n    \n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n>       static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_static_group_member.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000001FE8100F220>\nendpoint = 'group'\njson_data = {'allowInheritance': True, 'cpeFilter': {}, 'description': 'system group description', 'name': 'group6kY4U0', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:171: KeyError","steps":[],"attachments":[{"uid":"fdf4b2afcd210492","name":"Request Info","source":"fdf4b2afcd210492.json","type":"application/json","size":1176},{"uid":"7961bb8ff9b88cb6","name":"Response Info","source":"7961bb8ff9b88cb6.json","type":"application/json","size":119},{"uid":"9856f50b8138f736","name":"Request Info","source":"9856f50b8138f736.json","type":"application/json","size":186},{"uid":"4847d1b4bb6c6af1","name":"Response Info","source":"4847d1b4bb6c6af1.json","type":"application/json","size":1439},{"uid":"390aedef18949dfd","name":"Request Info","source":"390aedef18949dfd.json","type":"application/json","size":172},{"uid":"95e4335c3a451bca","name":"Response Info","source":"95e4335c3a451bca.json","type":"application/json","size":66},{"uid":"274f9fd8a4e51ffb","name":"Request Info","source":"274f9fd8a4e51ffb.json","type":"application/json","size":1176},{"uid":"4a2b05b2b9810c10","name":"Response Info","source":"4a2b05b2b9810c10.json","type":"application/json","size":1337},{"uid":"77603514ebcedf1b","name":"Request Info","source":"77603514ebcedf1b.json","type":"application/json","size":266},{"uid":"abb4264b5c2a2a2f","name":"Response Info","source":"abb4264b5c2a2a2f.json","type":"application/json","size":225}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":10,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"12180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'provisioning-record'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"248b3dce78201bea.json","parameterValues":["'test'","{'memberInfo': 'provisioning-record'}"]}