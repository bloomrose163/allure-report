{"uid":"5937eaeac62504dd","name":"Test - get record ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_list_by_param","historyId":"a3571ae8e57426baff4c6798ca1a2eef","time":{"start":1749580092228,"stop":1749580095141,"duration":2913},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000025724C25240>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025727B22BF0>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 500 == 200\nE      +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:107: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749579417209,"stop":1749579417501,"duration":292},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749579417501,"stop":1749579418774,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749580092224,"stop":1749580092227,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000025724C25240>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025727B22BF0>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 500 == 200\nE      +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:107: AssertionError","steps":[],"attachments":[{"uid":"ff0660d870de4e89","name":"Request Info","source":"ff0660d870de4e89.json","type":"application/json","size":175},{"uid":"779a462ade513369","name":"Response Info","source":"779a462ade513369.json","type":"application/json","size":429}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"params","value":"{'orderBy': {'name': -1}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5937eaeac62504dd.json","parameterValues":["'test'","{'orderBy': {'name': -1}}"]}