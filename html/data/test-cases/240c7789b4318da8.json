{"uid":"240c7789b4318da8","name":"Test - create record & delete twice ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test__create_get_delete_twice","historyId":"e82da96c011a1a932e21351fd4ae68c6","time":{"start":1750185106991,"stop":1750185115670,"duration":8679},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A79360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C9899E6200>\n\n    @allure.title('Test - create record & delete twice ')\n    def test__create_get_delete_twice(self,base_api):\n       # create a group\n      group_endpoint = \"group\"\n      json_data = load_json(file_paths[\"filter\"])\n      response_create = base_api.create(group_endpoint,json_data,need_random=True, field=\"name\")\n      assert response_create.status_code == 200\n      group_id = response_create.json()['_id']\n    \n      # create workflow\n      random = base_api.generate_ramdom(endpoint)\n      json_data = load_json(file_paths[\"workflow\"])\n      json_data[\"name\"] = random\n      json_data[\"groups\"] = [group_id]\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A79360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C9899E6200>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750185106988,"stop":1750185106991,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A79360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C9899E6200>\n\n    @allure.title('Test - create record & delete twice ')\n    def test__create_get_delete_twice(self,base_api):\n       # create a group\n      group_endpoint = \"group\"\n      json_data = load_json(file_paths[\"filter\"])\n      response_create = base_api.create(group_endpoint,json_data,need_random=True, field=\"name\")\n      assert response_create.status_code == 200\n      group_id = response_create.json()['_id']\n    \n      # create workflow\n      random = base_api.generate_ramdom(endpoint)\n      json_data = load_json(file_paths[\"workflow\"])\n      json_data[\"name\"] = random\n      json_data[\"groups\"] = [group_id]\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_workflow.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A79360>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C9899E6200>\nendpoint = 'workflow'\njson_data = {'actions': [{'actionType': 'Reboot'}], 'bPriorNewAndFailed': True, 'description': 'created by apple', 'execPolicy': {'initialTrigger': {'cpeEvent': 'CC EVENT - On Boot', 'type': 'CPE Event'}}, ...}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:36: AssertionError","steps":[],"attachments":[{"uid":"3fbe1c94890d2dc3","name":"Request Info","source":"3fbe1c94890d2dc3.json","type":"application/json","size":418},{"uid":"21f69063f1a223b4","name":"Response Info","source":"21f69063f1a223b4.json","type":"application/json","size":681},{"uid":"beaab3f59204fa9e","name":"Request Info","source":"beaab3f59204fa9e.json","type":"application/json","size":545},{"uid":"80463695104cf45c","name":"Response Info","source":"80463695104cf45c.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":4,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"240c7789b4318da8.json","parameterValues":["'test'"]}