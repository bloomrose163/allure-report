{"uid":"960f5639ba9e54d3","name":"Test - create record & delete twice ","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test__create_get_delete_twice","historyId":"bfb628fe59eba358ae5160a7260ff654","time":{"start":1749580063822,"stop":1749580073664,"duration":9842},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000025724E03B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025724ED9450>\n\n    @allure.title('Test - create record & delete twice ')\n    def test__create_get_delete_twice(self,base_api):\n      json_data = load_json(file_paths[\"dynamic\"])\n      random = base_api.generate_ramdom(endpoint)\n      json_data[\"name\"] = random\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_system_group.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000025724E03B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025724ED9450>\nendpoint = 'group'\njson_data = {'allowInheritance': True, 'description': 'system group description', 'name': 'groupTBBYSm', 'type': 'dynamic'}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n        # check if the record could be created with same key, 200 means Yes, 409 means No\n        print(\"create the same body again\")\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response_create.status_code == 409\n    \n        # get the record\n        response_get = base_api.get_by_id(endpoint,model_id)\n>       assert response_get.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749579417209,"stop":1749579417501,"duration":292},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749579417501,"stop":1749579418774,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749580063820,"stop":1749580063822,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000025724E03B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025724ED9450>\n\n    @allure.title('Test - create record & delete twice ')\n    def test__create_get_delete_twice(self,base_api):\n      json_data = load_json(file_paths[\"dynamic\"])\n      random = base_api.generate_ramdom(endpoint)\n      json_data[\"name\"] = random\n>     ACSAPI.verify_create_get_delete_twice(self,base_api,endpoint,json_data)\n\ntestcase\\ACS\\test_system_group.py:290: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000025724E03B20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000025724ED9450>\nendpoint = 'group'\njson_data = {'allowInheritance': True, 'description': 'system group description', 'name': 'groupTBBYSm', 'type': 'dynamic'}\n\n    def verify_create_get_delete_twice(self,base_api,endpoint,json_data):\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n        # check if the record could be created with same key, 200 means Yes, 409 means No\n        print(\"create the same body again\")\n        response_create = base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response_create.status_code == 409\n    \n        # get the record\n        response_get = base_api.get_by_id(endpoint,model_id)\n>       assert response_get.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:47: AssertionError","steps":[],"attachments":[{"uid":"cfb811201d85600f","name":"Request Info","source":"cfb811201d85600f.json","type":"application/json","size":246},{"uid":"5dcb0196ea1646b5","name":"Response Info","source":"5dcb0196ea1646b5.json","type":"application/json","size":315},{"uid":"fd5a98315c398f09","name":"Request Info","source":"fd5a98315c398f09.json","type":"application/json","size":246},{"uid":"c3ca52d941dc03c5","name":"Response Info","source":"c3ca52d941dc03c5.json","type":"application/json","size":239},{"uid":"f8b76f81dfe4e71","name":"Request Info","source":"f8b76f81dfe4e71.json","type":"application/json","size":155},{"uid":"f3f9508918218748","name":"Response Info","source":"f3f9508918218748.json","type":"application/json","size":429}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":6},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"36516-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"960f5639ba9e54d3.json","parameterValues":["'test'"]}