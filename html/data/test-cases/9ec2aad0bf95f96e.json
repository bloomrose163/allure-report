{"uid":"9ec2aad0bf95f96e","name":"Test - get list ","fullName":"testcase.ACS.test_api_swagger.TestAPI#test_get_list_by_param","historyId":"491e69fde012bb83242dff5b9f361d4d","time":{"start":1748542611534,"stop":1748542613859,"duration":2325},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_api_swagger.TestAPI object at 0x0000018809596050>\nbase_api_acs = (<utils.base_api_acs.BaseAPIACS object at 0x00000188090816C0>, 'configuration-profile')\nparams = {'limit': 2}\n\n    @allure.title('Test - get list ')\n    # @pytest.mark.parametrize('params',[{\"deviceId\":\"CXNK0151C334\"},{\"deviceId\":\"04:bc:9f:21:d0:6d\"},{\"deviceId\":\"reg123\"},{\"limit\": 3}])\n    @pytest.mark.parametrize('params',[{\"limit\": 2}])\n    def test_get_list_by_param(self,base_api_acs,params):\n        client, endpoint = base_api_acs\n        response = client.get_list_by_param(endpoint,params)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_swagger.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748542606067,"stop":1748542606383,"duration":316},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748542606383,"stop":1748542607833,"duration":1450},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api_acs","time":{"start":1748542611530,"stop":1748542611534,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_api_swagger.TestAPI object at 0x0000018809596050>\nbase_api_acs = (<utils.base_api_acs.BaseAPIACS object at 0x00000188090816C0>, 'configuration-profile')\nparams = {'limit': 2}\n\n    @allure.title('Test - get list ')\n    # @pytest.mark.parametrize('params',[{\"deviceId\":\"CXNK0151C334\"},{\"deviceId\":\"04:bc:9f:21:d0:6d\"},{\"deviceId\":\"reg123\"},{\"limit\": 3}])\n    @pytest.mark.parametrize('params',[{\"limit\": 2}])\n    def test_get_list_by_param(self,base_api_acs,params):\n        client, endpoint = base_api_acs\n        response = client.get_list_by_param(endpoint,params)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_api_swagger.py:30: AssertionError","steps":[],"attachments":[{"uid":"8a92cc39f34b21a8","name":"Request Info","source":"8a92cc39f34b21a8.json","type":"application/json","size":113},{"uid":"a3f30d06939a511d","name":"Response Info","source":"a3f30d06939a511d.json","type":"application/json","size":173}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_api_swagger"},{"name":"subSuite","value":"TestAPI"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23192-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_api_swagger"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api_acs","value":"('test', 'configuration-profile')"},{"name":"params","value":"{'limit': 2}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"9ec2aad0bf95f96e.json","parameterValues":["('test', 'configuration-profile')","{'limit': 2}"]}