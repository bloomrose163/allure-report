{"uid":"d246c05e9b9c3ccb","name":"Test - get record ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_get_list_by_param","historyId":"a3571ae8e57426baff4c6798ca1a2eef","time":{"start":1750185124972,"stop":1750185129879,"duration":4907},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A797E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989A06E00>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 400 == 200\nE      +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_workflow.py:107: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750185124972,"stop":1750185124972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002C986A797E0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989A06E00>\nparams = {'orderBy': {'name': -1}}\n\n    @allure.title('Test - get record ')\n    @pytest.mark.parametrize('params',[{\"orderBy\":{\"name\":-1}}])\n    def test_get_list_by_param(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 400 == 200\nE      +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_workflow.py:107: AssertionError","steps":[],"attachments":[{"uid":"d9b46d9b7fe3a4fb","name":"Request Info","source":"d9b46d9b7fe3a4fb.json","type":"application/json","size":175},{"uid":"f62fe043d34bb19","name":"Response Info","source":"f62fe043d34bb19.json","type":"application/json","size":88}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"params","value":"{'orderBy': {'name': -1}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d246c05e9b9c3ccb.json","parameterValues":["'test'","{'orderBy': {'name': -1}}"]}