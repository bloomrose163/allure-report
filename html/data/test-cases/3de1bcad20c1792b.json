{"uid":"3de1bcad20c1792b","name":"Test - create static group member with patameters","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"3ebeb6a039067371787fa808116c1147","time":{"start":1748496864128,"stop":1748496866823,"duration":2695},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000014D3AB41750>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3C1B2290>\nparam = {'groupId': 'b81b23a1-7055-4d24-bf6a-95c4d4aa7e56', 'memberInfo': 'ponreg123', 'orgId': '2550'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters')\n    @pytest.mark.parametrize('body',[\n        {\n            \"memberInfo\": \"04:bc:9f:21:d0:6d\"\n        },\n        {\n            \"memberInfo\":\"ponreg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\"\n        }\n        ])\n    def test_create_with_param(self,base_api,body):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = body\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:141: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748496616837,"stop":1748496617142,"duration":305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748496617142,"stop":1748496618475,"duration":1333},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"base_api","time":{"start":1748496864124,"stop":1748496864124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000014D3AB41750>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3C1B2290>\nparam = {'groupId': 'b81b23a1-7055-4d24-bf6a-95c4d4aa7e56', 'memberInfo': 'ponreg123', 'orgId': '2550'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters')\n    @pytest.mark.parametrize('body',[\n        {\n            \"memberInfo\": \"04:bc:9f:21:d0:6d\"\n        },\n        {\n            \"memberInfo\":\"ponreg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK0151C334\"\n        }\n        ])\n    def test_create_with_param(self,base_api,body):\n        # create a static system group\n        group_endpoint = 'group'\n        response = base_api.create(group_endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        json_data = body\n        json_data[\"groupId\"] = static_group_id\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(endpoint,json_data,need_random=False, field=None)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:141: AssertionError","steps":[],"attachments":[{"uid":"6090ecd8818ef88b","name":"Request Info","source":"6090ecd8818ef88b.json","type":"application/json","size":266},{"uid":"ba89a422c8ee885e","name":"Response Info","source":"ba89a422c8ee885e.json","type":"application/json","size":314},{"uid":"60dbc658a9197e99","name":"Request Info","source":"60dbc658a9197e99.json","type":"application/json","size":240},{"uid":"b138999d749940fa","name":"Response Info","source":"b138999d749940fa.json","type":"application/json","size":292}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":4,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"ACS Stati cGroup Member API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"12704-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'ponreg123', 'groupId': 'c0b200f7-5fbe-4960-aea6-1f4ba7862e50', 'orgId': '50'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"3de1bcad20c1792b.json","parameterValues":["'test'","{'memberInfo': 'ponreg123', 'groupId': 'c0b200f7-5fbe-4960-aea6-1f4ba7862e50', 'orgId': '50'}"]}