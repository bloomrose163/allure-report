{"uid":"63776792341c8153","name":"Test - test the paramter are case-insensitive ","fullName":"testcase.ACS.test_configuration_profile.TestConfigurationProfile#test_get_case_sensitive","historyId":"8f75663f77dad3c783660a1eeefa2bdd","time":{"start":1749493097796,"stop":1749493101877,"duration":4081},"status":"failed","statusMessage":"AssertionError: assert 1 == 0","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001D2C186FA00>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C44A2D10>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_ds_hk3_tp\"\n      params={\"name\":name}\n>     ACSAPI.verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False)\n\ntestcase\\ACS\\test_configuration_profile.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001D2C186FA00>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C44A2D10>\nendpoint = 'configuration-profile', params = {'name': 'test_ds_hk3_tp'}\ncase_sen = False, get_count = False\n\n    def verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False):\n    #   check query with lower charactors\n        response = base_api.get_list_by_param(endpoint,params)\n        assert response.status_code == 200\n        count_lower = len(response.json())\n    \n      #   check query with super charactors\n        upper_params=uppercased_dict = {key: value.upper() for key, value in params.items()}\n        response_upper = base_api.get_list_by_param(endpoint,upper_params)\n        assert response_upper.status_code == 200\n        count_upper = len(response_upper.json())\n        print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n        if case_sen == False:\n>        assert count_lower == count_upper\nE        assert 1 == 0\n\ntestcase\\ACS\\test_api_acs_common.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749493057760,"stop":1749493057854,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749493057854,"stop":1749493059137,"duration":1283},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749493097793,"stop":1749493097795,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001D2C186FA00>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C44A2D10>\n\n    @allure.feature('COMMON')\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_ds_hk3_tp\"\n      params={\"name\":name}\n>     ACSAPI.verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False)\n\ntestcase\\ACS\\test_configuration_profile.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001D2C186FA00>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C44A2D10>\nendpoint = 'configuration-profile', params = {'name': 'test_ds_hk3_tp'}\ncase_sen = False, get_count = False\n\n    def verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False):\n    #   check query with lower charactors\n        response = base_api.get_list_by_param(endpoint,params)\n        assert response.status_code == 200\n        count_lower = len(response.json())\n    \n      #   check query with super charactors\n        upper_params=uppercased_dict = {key: value.upper() for key, value in params.items()}\n        response_upper = base_api.get_list_by_param(endpoint,upper_params)\n        assert response_upper.status_code == 200\n        count_upper = len(response_upper.json())\n        print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n        if case_sen == False:\n>        assert count_lower == count_upper\nE        assert 1 == 0\n\ntestcase\\ACS\\test_api_acs_common.py:80: AssertionError","steps":[],"attachments":[{"uid":"5cc4763ce42265ff","name":"Request Info","source":"5cc4763ce42265ff.json","type":"application/json","size":181},{"uid":"cd3fae0752854e24","name":"Response Info","source":"cd3fae0752854e24.json","type":"application/json","size":871},{"uid":"a2f784cfa9ad4c38","name":"Request Info","source":"a2f784cfa9ad4c38.json","type":"application/json","size":181},{"uid":"d66dedeb1fd0760c","name":"Response Info","source":"d66dedeb1fd0760c.json","type":"application/json","size":38}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":4,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"COMMON"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_configuration_profile"},{"name":"subSuite","value":"TestConfigurationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"27544-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_configuration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"63776792341c8153.json","parameterValues":["'aws'"]}