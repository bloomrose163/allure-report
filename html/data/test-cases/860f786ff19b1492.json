{"uid":"860f786ff19b1492","name":"Test - Query device count with different paramters:{'hardwareVersion': '3000307602'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"b033c72bfeb682fd6994c6104b0e7975","time":{"start":1748325121131,"stop":1748325152083,"duration":30952},"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D2E60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA2202020>\nparam = {'hardwareVersion': '3000307602'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748324557190,"stop":1748324557313,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748324557313,"stop":1748324558634,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748325121128,"stop":1748325121130,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D2E60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA2202020>\nparam = {'hardwareVersion': '3000307602'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","steps":[],"attachments":[{"uid":"4579165072bbaf2a","name":"Request Info","source":"4579165072bbaf2a.json","type":"application/json","size":188},{"uid":"8378d9cf8026ede0","name":"Response Info","source":"8378d9cf8026ede0.json","type":"application/json","size":62}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"51132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'hardwareVersion': '3000307602'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"860f786ff19b1492.json","parameterValues":["'dev'","{'hardwareVersion': '3000307602'}"]}