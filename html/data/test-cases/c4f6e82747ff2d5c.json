{"uid":"c4f6e82747ff2d5c","name":"Test - Query device with different paramters:{'macAddress': 'e4:6c:d1:43:44:0e'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"8e71da52eb7e01cd52ec12022c2d901c","time":{"start":1748590145280,"stop":1748590145756,"duration":476},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000019F99F9C4C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C4ED40>\nparam = {'macAddress': 'e4:6c:d1:43:44:0e'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748590122300,"stop":1748590122547,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748590122547,"stop":1748590123981,"duration":1434},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748590145277,"stop":1748590145280,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000019F99F9C4C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000019F99C4ED40>\nparam = {'macAddress': 'e4:6c:d1:43:44:0e'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","steps":[],"attachments":[{"uid":"c8a7044f71ea28e5","name":"Request Info","source":"c8a7044f71ea28e5.json","type":"application/json","size":196},{"uid":"d01f988da830838b","name":"Response Info","source":"d01f988da830838b.json","type":"application/json","size":162}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'macAddress': 'e4:6c:d1:43:44:0e'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c4f6e82747ff2d5c.json","parameterValues":["'dev'","{'macAddress': 'e4:6c:d1:43:44:0e'}"]}