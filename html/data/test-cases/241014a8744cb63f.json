{"uid":"241014a8744cb63f","name":"Test - Query device with different paramters:{'manufacturerOUI': 'E46CD1'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"663f4f6fbb1439d8c0c1e29da06a5b8d","time":{"start":1749100675236,"stop":1749100675949,"duration":713},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001E9AE8BBA90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E9AE4CBCA0>\nparam = {'manufacturerOUI': 'E46CD1'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    @allure.issue('GCPT-14686')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749100609104,"stop":1749100609335,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749100609335,"stop":1749100610791,"duration":1456},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749100675236,"stop":1749100675236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001E9AE8BBA90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E9AE4CBCA0>\nparam = {'manufacturerOUI': 'E46CD1'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    @allure.issue('GCPT-14686')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:43: AssertionError","steps":[],"attachments":[{"uid":"9d3147bb1b79b57b","name":"Request Info","source":"9d3147bb1b79b57b.json","type":"application/json","size":172},{"uid":"d4a932faddca16b9","name":"Response Info","source":"d4a932faddca16b9.json","type":"application/json","size":87}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"9660-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'manufacturerOUI': 'E46CD1'}"}],"links":[{"name":"GCPT-14686","url":"GCPT-14686","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"241014a8744cb63f.json","parameterValues":["'aws'","{'manufacturerOUI': 'E46CD1'}"]}