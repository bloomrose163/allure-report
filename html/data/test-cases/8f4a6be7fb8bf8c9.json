{"uid":"8f4a6be7fb8bf8c9","name":"Test - Query device with different paramters:{'createTime': '2025-03-28T07:10:00.069Z'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"ea734d2b195b1fb96ed7eb10ce4406e1","time":{"start":1748496262290,"stop":1748496263548,"duration":1258},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001E7BC901660>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E7BC7F4AF0>\nparam = {'createTime': '2025-03-28T07:10:00.069Z'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748496142678,"stop":1748496142899,"duration":221},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1748496142899,"stop":1748496144284,"duration":1385},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1748496262288,"stop":1748496262290,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001E7BC901660>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001E7BC7F4AF0>\nparam = {'createTime': '2025-03-28T07:10:00.069Z'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","steps":[],"attachments":[{"uid":"fbdb39b2829fcb96","name":"Request Info","source":"fbdb39b2829fcb96.json","type":"application/json","size":205},{"uid":"86ee249726388cd3","name":"Response Info","source":"86ee249726388cd3.json","type":"application/json","size":101}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"44636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'createTime': '2025-03-28T07:10:00.069Z'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"8f4a6be7fb8bf8c9.json","parameterValues":["'test'","{'createTime': '2025-03-28T07:10:00.069Z'}"]}