{"uid":"78fb46a3a2c2c2ca","name":"Test - Query device count","fullName":"testcase.ACS.test_device.TestDevice#test_get_invalid_param","historyId":"65dd1c7bf251e11e19feaebd4b45638a","time":{"start":1748324780756,"stop":1748324811775,"duration":31019},"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D1A20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA1B969B0>\n\n    @allure.title('Test - Query device count')\n    #@pytest.mark.skip()\n    def test_get_invalid_param(self,base_api):\n        response = base_api.get_count(endpoint,{\"macAddress\": \"notvalid\"})\n>       assert response.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_device.py:22: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748324557190,"stop":1748324557313,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748324557313,"stop":1748324558634,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748324780752,"stop":1748324780755,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D1A20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA1B969B0>\n\n    @allure.title('Test - Query device count')\n    #@pytest.mark.skip()\n    def test_get_invalid_param(self,base_api):\n        response = base_api.get_count(endpoint,{\"macAddress\": \"notvalid\"})\n>       assert response.status_code == 200\nE       assert 504 == 200\nE        +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_device.py:22: AssertionError","steps":[],"attachments":[{"uid":"7f3b7010cfde3c60","name":"Request Info","source":"7f3b7010cfde3c60.json","type":"application/json","size":174},{"uid":"28f104e8f6f75616","name":"Response Info","source":"28f104e8f6f75616.json","type":"application/json","size":62}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"51132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"78fb46a3a2c2c2ca.json","parameterValues":["'dev'"]}