{"uid":"e4ac9cdf56a4977c","name":"Test - CRUD - create images, display the images and check this profile can be deleted","fullName":"testcase.ACS.test_images.TestImages#test_create_sop_crud","historyId":"34ae35726f77032b389213cdce9215b9","time":{"start":1749801696088,"stop":1749801700129,"duration":4041},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_images.TestImages object at 0x000002387CF61930>\nbase_api = <utils.base_api.BaseAPI object at 0x000002387D2A8D90>\n\n    @allure.feature('CREATE')\n    # @allure.issue('GCPT-14626')\n    @allure.issue('GCPT-14831')\n    @allure.title('Test - CRUD - create images, display the images and check this profile can be deleted')\n    def test_create_sop_crud(self,base_api):\n        json_data = load_body(\"images\")\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_images.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749801515235,"stop":1749801515320,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1749801515320,"stop":1749801516605,"duration":1285},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1749801696088,"stop":1749801696088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_images.TestImages object at 0x000002387CF61930>\nbase_api = <utils.base_api.BaseAPI object at 0x000002387D2A8D90>\n\n    @allure.feature('CREATE')\n    # @allure.issue('GCPT-14626')\n    @allure.issue('GCPT-14831')\n    @allure.title('Test - CRUD - create images, display the images and check this profile can be deleted')\n    def test_create_sop_crud(self,base_api):\n        json_data = load_body(\"images\")\n        json_data[\"name\"] = base_api.generate_ramdom(endpoint)\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_images.py:44: AssertionError","steps":[],"attachments":[{"uid":"a62349219e863d02","name":"Request Info","source":"a62349219e863d02.json","type":"application/json","size":341},{"uid":"5a238727ba969bed","name":"Response Info","source":"5a238727ba969bed.json","type":"application/json","size":137}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS images API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_images"},{"name":"subSuite","value":"TestImages"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"41128-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_images"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"GCPT-14831","url":"GCPT-14831","type":"issue"},{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e4ac9cdf56a4977c.json","parameterValues":["'test'"]}