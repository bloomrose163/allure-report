{"uid":"e0a3c6f1e0867d8c","name":"Test - Query device count with different paramters:{'udpConnectionRequestAddr': '64.136.96.5:64083'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"f8fd8a5b43989237cdd648e6aa96bf2a","time":{"start":1749014002926,"stop":1749014003880,"duration":954},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001F1D0C83E20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D0AFFC10>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014002922,"stop":1749014002925,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001F1D0C83E20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D0AFFC10>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","steps":[],"attachments":[{"uid":"8ab4b1a6561c7106","name":"Request Info","source":"8ab4b1a6561c7106.json","type":"application/json","size":220},{"uid":"95061caf4d412a1c","name":"Response Info","source":"95061caf4d412a1c.json","type":"application/json","size":96}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'udpConnectionRequestAddr': '64.136.96.5:64083'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e0a3c6f1e0867d8c.json","parameterValues":["'aws'","{'udpConnectionRequestAddr': '64.136.96.5:64083'}"]}