{"uid":"a740f94959ede587","name":"Test - Query device count with different paramters:{'limit': 3}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"b3677d12fd37bb7d29ce07d82da66107","time":{"start":1748325152100,"stop":1748325172184,"duration":20084},"status":"broken","statusMessage":"zipfile.BadZipFile: File is not a zip file","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D3190>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA337AF80>\nparam = {'limit': 3}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n>       response = base_api.get_count(endpoint,param)\n\ntestcase\\ACS\\test_device.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:161: in get_count\n    return self.request(method='GET',endpoint=endpoint + '/count',params=params)\nutils\\base_api_acs.py:79: in request\n    self.attach_to_allure(method, url, params, data, json_data, headers, response)\nutils\\base_api_acs.py:117: in attach_to_allure\n    self.write_json_to_excel('C:\\git\\gcp_acs_api_mid.xlsx',request_json,response_json)\nutils\\base_api_acs.py:129: in write_json_to_excel\n    workbook = load_workbook(filename=file_path)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:346: in load_workbook\n    reader = ExcelReader(filename, read_only, keep_vba,\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:123: in __init__\n    self.archive = _validate_archive(fn)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:95: in _validate_archive\n    archive = ZipFile(filename, 'r')\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1267: in __init__\n    self._RealGetContents()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\n\n    def _RealGetContents(self):\n        \"\"\"Read in the table of contents for the ZIP file.\"\"\"\n        fp = self.fp\n        try:\n            endrec = _EndRecData(fp)\n        except OSError:\n            raise BadZipFile(\"File is not a zip file\")\n        if not endrec:\n>           raise BadZipFile(\"File is not a zip file\")\nE           zipfile.BadZipFile: File is not a zip file\n\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1334: BadZipFile","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748324557190,"stop":1748324557313,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748324557313,"stop":1748324558634,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748325152098,"stop":1748325152100,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"zipfile.BadZipFile: File is not a zip file","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000021CA07D3190>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA337AF80>\nparam = {'limit': 3}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    #@pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n>       response = base_api.get_count(endpoint,param)\n\ntestcase\\ACS\\test_device.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:161: in get_count\n    return self.request(method='GET',endpoint=endpoint + '/count',params=params)\nutils\\base_api_acs.py:79: in request\n    self.attach_to_allure(method, url, params, data, json_data, headers, response)\nutils\\base_api_acs.py:117: in attach_to_allure\n    self.write_json_to_excel('C:\\git\\gcp_acs_api_mid.xlsx',request_json,response_json)\nutils\\base_api_acs.py:129: in write_json_to_excel\n    workbook = load_workbook(filename=file_path)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:346: in load_workbook\n    reader = ExcelReader(filename, read_only, keep_vba,\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:123: in __init__\n    self.archive = _validate_archive(fn)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:95: in _validate_archive\n    archive = ZipFile(filename, 'r')\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1267: in __init__\n    self._RealGetContents()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\n\n    def _RealGetContents(self):\n        \"\"\"Read in the table of contents for the ZIP file.\"\"\"\n        fp = self.fp\n        try:\n            endrec = _EndRecData(fp)\n        except OSError:\n            raise BadZipFile(\"File is not a zip file\")\n        if not endrec:\n>           raise BadZipFile(\"File is not a zip file\")\nE           zipfile.BadZipFile: File is not a zip file\n\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1334: BadZipFile","steps":[],"attachments":[{"uid":"5229ddca71bfaa6c","name":"Exception","source":"5229ddca71bfaa6c.txt","type":"text/plain","size":22}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"51132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'limit': 3}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"a740f94959ede587.json","parameterValues":["'dev'","{'limit': 3}"]}