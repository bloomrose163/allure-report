{"uid":"cbc626be9246ede1","name":"Test - can not delete group associated with group","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_cpe_filter","historyId":"d39f75db2be3fadafce6656944b2679a","time":{"start":1747965420743,"stop":1747965424845,"duration":4102},"status":"failed","statusMessage":"AssertionError: assert 200 == 403\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000018D79F5B1F0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000018D79F5B370>\n\n    @allure.title('Test - can not delete group associated with group')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":False}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 403\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_system_group.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747965415538,"stop":1747965415654,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747965415654,"stop":1747965417302,"duration":1648},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747965420741,"stop":1747965420742,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 403\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x0000018D79F5B1F0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000018D79F5B370>\n\n    @allure.title('Test - can not delete group associated with group')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":False}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 403\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_system_group.py:59: AssertionError","steps":[],"attachments":[{"uid":"603af242ec8aa911","name":"Request Info","source":"603af242ec8aa911.json","type":"application/json","size":376},{"uid":"a376363fcb173b73","name":"Response Info","source":"a376363fcb173b73.json","type":"application/json","size":636},{"uid":"6a7762388480e215","name":"Request Info","source":"6a7762388480e215.json","type":"application/json","size":201},{"uid":"84d0056cdd548e9","name":"Response Info","source":"84d0056cdd548e9.json","type":"application/json","size":66},{"uid":"8934aa25f512f54b","name":"Request Info","source":"8934aa25f512f54b.json","type":"application/json","size":376},{"uid":"275be0a44426a07b","name":"Response Info","source":"275be0a44426a07b.json","type":"application/json","size":636},{"uid":"d2591dcd5258e56","name":"Request Info","source":"d2591dcd5258e56.json","type":"application/json","size":544},{"uid":"3b4a06f0c3633283","name":"Response Info","source":"3b4a06f0c3633283.json","type":"application/json","size":675},{"uid":"2ee426a3090d811d","name":"Request Info","source":"2ee426a3090d811d.json","type":"application/json","size":157},{"uid":"997565b2bd5650f0","name":"Response Info","source":"997565b2bd5650f0.json","type":"application/json","size":66}],"parameters":[],"attachmentsCount":10,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"23904-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"cbc626be9246ede1.json","parameterValues":["'dev'"]}