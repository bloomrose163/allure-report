{"uid":"470b1fa1728bbfc3","name":"Test - Query device count with different paramters:{'udpConnectionRequestAddr': '64.136.96.5:64083'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_count_by_param","historyId":"f8fd8a5b43989237cdd648e6aa96bf2a","time":{"start":1748341345661,"stop":1748341346909,"duration":1248},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000020EFA1F82B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EF9F74850>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748341295951,"stop":1748341296045,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748341296045,"stop":1748341297421,"duration":1376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"base_api","time":{"start":1748341345661,"stop":1748341345661,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000020EFA1F82B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000020EF9F74850>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_count_by_param(self,base_api,param):\n        response = base_api.get_count(endpoint,param)\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_device.py:33: AssertionError","steps":[],"attachments":[{"uid":"4aea93179b4b2712","name":"Request Info","source":"4aea93179b4b2712.json","type":"application/json","size":220},{"uid":"24312bdd55556f1b","name":"Response Info","source":"24312bdd55556f1b.json","type":"application/json","size":96}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"42176-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'aws'"},{"name":"param","value":"{'udpConnectionRequestAddr': '64.136.96.5:64083'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"470b1fa1728bbfc3.json","parameterValues":["'aws'","{'udpConnectionRequestAddr': '64.136.96.5:64083'}"]}