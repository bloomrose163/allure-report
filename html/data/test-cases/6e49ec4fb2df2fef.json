{"uid":"6e49ec4fb2df2fef","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"bc75a019da3e0a88ce16913844e1666a","time":{"start":1749534413345,"stop":1749534424060,"duration":10715},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002327CF215D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023201074700>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749534170104,"stop":1749534170381,"duration":277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1749534170381,"stop":1749534171685,"duration":1304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api","time":{"start":1749534413342,"stop":1749534413345,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002327CF215D0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000023201074700>\nfile_path = './testdata/ACS/provisioning_record_voice_MGCP.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","steps":[],"attachments":[{"uid":"c0535b5d2f72e023","name":"Request Info","source":"c0535b5d2f72e023.json","type":"application/json","size":695},{"uid":"8e0e9aa3a6919dd3","name":"Response Info","source":"8e0e9aa3a6919dd3.json","type":"application/json","size":119},{"uid":"d5d2b485d3f3147","name":"Request Info","source":"d5d2b485d3f3147.json","type":"application/json","size":186},{"uid":"a63a7105942c337c","name":"Response Info","source":"a63a7105942c337c.json","type":"application/json","size":1638},{"uid":"913e6dc26e96684c","name":"Request Info","source":"913e6dc26e96684c.json","type":"application/json","size":172},{"uid":"8cb4b0c2843fb0f2","name":"Response Info","source":"8cb4b0c2843fb0f2.json","type":"application/json","size":66},{"uid":"dc678134b963eee8","name":"Request Info","source":"dc678134b963eee8.json","type":"application/json","size":695},{"uid":"1b73bf8638ca3c1","name":"Response Info","source":"1b73bf8638ca3c1.json","type":"application/json","size":111}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":8,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"19900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_MGCP.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6e49ec4fb2df2fef.json","parameterValues":["'test'","'./testdata/ACS/provisioning_record_voice_MGCP.json'"]}