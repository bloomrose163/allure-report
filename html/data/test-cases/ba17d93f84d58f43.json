{"uid":"ba17d93f84d58f43","name":"Test - common function paging,create & delete twice ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_create_common","historyId":"8612e02145d3b9b3e39d80df759e46c6","time":{"start":1749806926859,"stop":1749806932083,"duration":5224},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001C2C24EA9B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C6979BD0>\n\n    @allure.feature('COMMON')\n    @allure.issue('GCPT-14915')\n    @allure.title('Test - common function paging,create & delete twice ')\n    def test_create_common(self,base_api):\n      ACSAPI.verify_get_list_paging(self,base_api,endpoint)\n>     ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_workflow.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001C2C24EA9B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C6979BD0>\nendpoint = 'workflow'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n        assert response.status_code == 200\n        group_list_count = 0\n        if isinstance(response.json(), list):\n            group_list_count= len(response.json())\n            print(f\"The number of elements in the list is: {group_list_count}\")\n        else:\n            print(\"The returned JSON data is not a list.\")\n    \n        response = base_api.get_count(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:156: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749806249152,"stop":1749806249231,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749806249231,"stop":1749806250516,"duration":1285},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"base_api","time":{"start":1749806926857,"stop":1749806926859,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001C2C24EA9B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C6979BD0>\n\n    @allure.feature('COMMON')\n    @allure.issue('GCPT-14915')\n    @allure.title('Test - common function paging,create & delete twice ')\n    def test_create_common(self,base_api):\n      ACSAPI.verify_get_list_paging(self,base_api,endpoint)\n>     ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_workflow.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000001C2C24EA9B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C2C6979BD0>\nendpoint = 'workflow'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n        assert response.status_code == 200\n        group_list_count = 0\n        if isinstance(response.json(), list):\n            group_list_count= len(response.json())\n            print(f\"The number of elements in the list is: {group_list_count}\")\n        else:\n            print(\"The returned JSON data is not a list.\")\n    \n        response = base_api.get_count(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:156: AssertionError","steps":[],"attachments":[{"uid":"c956026f0cdea884","name":"Request Info","source":"c956026f0cdea884.json","type":"application/json","size":167},{"uid":"2f37560e24d34ad7","name":"Response Info","source":"2f37560e24d34ad7.json","type":"application/json","size":1310},{"uid":"680ab35c4b069458","name":"Request Info","source":"680ab35c4b069458.json","type":"application/json","size":121},{"uid":"9294a4303878a37e","name":"Response Info","source":"9294a4303878a37e.json","type":"application/json","size":52562},{"uid":"7d4f5c2d4fb788a6","name":"Request Info","source":"7d4f5c2d4fb788a6.json","type":"application/json","size":127},{"uid":"57ae0b1ea523ae9d","name":"Response Info","source":"57ae0b1ea523ae9d.json","type":"application/json","size":72}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":6,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"COMMON"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"5088-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"GCPT-14915","url":"GCPT-14915","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"ba17d93f84d58f43.json","parameterValues":["'test'"]}