{"uid":"52ef5902eaf1fb8a","name":"Test - 1.can not delete group associated with group 2.forceDelete","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_create_cpe_filter","historyId":"d39f75db2be3fadafce6656944b2679a","time":{"start":1747983127188,"stop":1747983131853,"duration":4665},"status":"failed","statusMessage":"AssertionError: assert 200 == 403\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000286B725EE30>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x00000286B72A7A30>\n\n    @allure.title('Test - 1.can not delete group associated with group 2.forceDelete')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":False}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 403\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_system_group.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747983122150,"stop":1747983122261,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747983122261,"stop":1747983123585,"duration":1324},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747983127186,"stop":1747983127188,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 403\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000286B725EE30>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x00000286B72A7A30>\n\n    @allure.title('Test - 1.can not delete group associated with group 2.forceDelete')\n    def test_create_cpe_filter(self,base_api):\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # delete the record\n        flase_delete = {\"forceDelete\":False}\n        response_delete= base_api.delete(endpoint,flase_delete,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n    \n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 403\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_system_group.py:60: AssertionError","steps":[],"attachments":[{"uid":"4e6f3220fed4035d","name":"Request Info","source":"4e6f3220fed4035d.json","type":"application/json","size":376},{"uid":"28e17ade59d54e34","name":"Response Info","source":"28e17ade59d54e34.json","type":"application/json","size":636},{"uid":"a494a976addb3442","name":"Request Info","source":"a494a976addb3442.json","type":"application/json","size":201},{"uid":"6f46b503f8ba981d","name":"Response Info","source":"6f46b503f8ba981d.json","type":"application/json","size":66},{"uid":"678f1af9f36e4e91","name":"Request Info","source":"678f1af9f36e4e91.json","type":"application/json","size":376},{"uid":"1645112c509d71a2","name":"Response Info","source":"1645112c509d71a2.json","type":"application/json","size":636},{"uid":"52eec7b93d608a6f","name":"Request Info","source":"52eec7b93d608a6f.json","type":"application/json","size":544},{"uid":"e11db47ac63f8362","name":"Response Info","source":"e11db47ac63f8362.json","type":"application/json","size":675},{"uid":"5da5a7eb1ee3b704","name":"Request Info","source":"5da5a7eb1ee3b704.json","type":"application/json","size":157},{"uid":"973aac6d0a98a88f","name":"Response Info","source":"973aac6d0a98a88f.json","type":"application/json","size":66}],"parameters":[],"attachmentsCount":10,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"38396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"52ef5902eaf1fb8a.json","parameterValues":["'dev'"]}