{"uid":"b81cb2af328ade43","name":"Test - CRUD - create service orchestration profile with profile, bandwidth ","fullName":"testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_video","historyId":"de71351b7485759406bea1c8c11cf382","time":{"start":1750184713787,"stop":1750184718065,"duration":4278},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002C9869E1210>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989877B80>\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n>       bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002C989877B80>\nendpoint = 'service-orchestration-profile'\njson_data = {'category': 'Bandwidth', 'downstreamCIR': 100, 'name': 'service_orchestration_profileFAxDav', 'orgId': '2550', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750184251184,"stop":1750184251484,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1750184251484,"stop":1750184252696,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1750184713787,"stop":1750184713787,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002C9869E1210>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C989877B80>\n\n    @allure.feature('UPDATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n>       bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002C989877B80>\nendpoint = 'service-orchestration-profile'\njson_data = {'category': 'Bandwidth', 'downstreamCIR': 100, 'name': 'service_orchestration_profileFAxDav', 'orgId': '2550', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","steps":[],"attachments":[{"uid":"52d1980a53d8e5dd","name":"Request Info","source":"52d1980a53d8e5dd.json","type":"application/json","size":293},{"uid":"c70172023f6d619d","name":"Response Info","source":"c70172023f6d619d.json","type":"application/json","size":86}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Service Orchestration Profile API"},{"name":"feature","value":"UPDATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_service_orchestration_profile"},{"name":"subSuite","value":"TestServiceOrchestrationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"40028-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_service_orchestration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"b81cb2af328ade43.json","parameterValues":["'test'"]}