{"uid":"13177b2bd7e0542b","name":"Test - Query device with different paramters:{'udpConnectionRequestAddr': '64.136.96.5:64083'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"e303c84a71cb34a2854bb11ecb4077c1","time":{"start":1749140405569,"stop":1749140406600,"duration":1031},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001BC6CEC8460>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001BC6E3C3970>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    @allure.issue('GCPT-14686')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749140293448,"stop":1749140293525,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749140293525,"stop":1749140294840,"duration":1315},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749140405553,"stop":1749140405567,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x000001BC6CEC8460>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001BC6E3C3970>\nparam = {'udpConnectionRequestAddr': '64.136.96.5:64083'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    @allure.issue('GCPT-14686')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_device.py:43: AssertionError","steps":[],"attachments":[{"uid":"fb222ecdec4eafe8","name":"Request Info","source":"fb222ecdec4eafe8.json","type":"application/json","size":217},{"uid":"6c34c90c8ad0dfa3","name":"Response Info","source":"6c34c90c8ad0dfa3.json","type":"application/json","size":59}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"50112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'udpConnectionRequestAddr': '64.136.96.5:64083'}"}],"links":[{"name":"GCPT-14686","url":"GCPT-14686","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"13177b2bd7e0542b.json","parameterValues":["'test'","{'udpConnectionRequestAddr': '64.136.96.5:64083'}"]}