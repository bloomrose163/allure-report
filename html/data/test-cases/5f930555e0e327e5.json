{"uid":"5f930555e0e327e5","name":"Test - create static group member with patameters {'memberInfo': 'CXNK01A8D0C7'}- mac address, regId, serial number,provisioning record id","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_with_param","historyId":"42a5d735f47358ae71c3c44a8063cb7d","time":{"start":1749320437952,"stop":1749320445251,"duration":7299},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000023363404D90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000233634DF8B0>\nparam = {'memberInfo': 'CXNK01A8D0C7'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749320102106,"stop":1749320102220,"duration":114},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749320102220,"stop":1749320103583,"duration":1363},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749320437950,"stop":1749320437952,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000023363404D90>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000233634DF8B0>\nparam = {'memberInfo': 'CXNK01A8D0C7'}\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create static group member with patameters {param}- mac address, regId, serial number,provisioning record id')\n    @pytest.mark.parametrize('param',[\n        {\n            \"memberInfo\": \"e4:6c:d1:43:44:0e\"\n        },\n        {\n            \"memberInfo\":\"reg123\"\n        },\n        {\n            \"memberInfo\":\"CXNK01A8D0C7\"\n        },\n        {\n            \"memberInfo\":\"provisioning-record\"\n        }\n        ])\n    def test_create_with_param(self,base_api,param):\n        # create provisioning-record\n        response_create = base_api.create_when_exist(pr_endpoint,file_paths[\"sip\"],{\"deviceId\": \"CXNK01A8D0C7\"},params=None)\n>       pr_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_static_group_member.py:135: KeyError","steps":[],"attachments":[{"uid":"79002986d27af4b","name":"Request Info","source":"79002986d27af4b.json","type":"application/json","size":1176},{"uid":"7e30c6d5a860c497","name":"Response Info","source":"7e30c6d5a860c497.json","type":"application/json","size":119},{"uid":"52eb5d49bb029f41","name":"Request Info","source":"52eb5d49bb029f41.json","type":"application/json","size":186},{"uid":"d627ee42ce66947b","name":"Response Info","source":"d627ee42ce66947b.json","type":"application/json","size":1439},{"uid":"116f9ec4c15e5ac2","name":"Request Info","source":"116f9ec4c15e5ac2.json","type":"application/json","size":172},{"uid":"d30d87d9c5b1ac66","name":"Response Info","source":"d30d87d9c5b1ac66.json","type":"application/json","size":225},{"uid":"40e00d21d32ec616","name":"Request Info","source":"40e00d21d32ec616.json","type":"application/json","size":1176},{"uid":"8800e9024e81c485","name":"Response Info","source":"8800e9024e81c485.json","type":"application/json","size":119}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":8},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"18960-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'memberInfo': 'CXNK01A8D0C7'}"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"5f930555e0e327e5.json","parameterValues":["'test'","{'memberInfo': 'CXNK01A8D0C7'}"]}