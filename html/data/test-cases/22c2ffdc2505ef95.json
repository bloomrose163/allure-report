{"uid":"22c2ffdc2505ef95","name":"Test - get provisioning record list","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_get_list","historyId":"1693bf199d9603ff6b8c608d298af9fb","time":{"start":1748945433223,"stop":1748945434147,"duration":924},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000026456A76E60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000026456A17340>\nparams = {'deviceId': '60:db:98:6f:27:dd'}\n\n    @allure.title('Test - get provisioning record list')\n    @pytest.mark.parametrize('params',[\n        {\n            \"limit\": 2\n        },\n        {\n    \n            \"deviceId\": \"CXNK00AFB83B\"\n        },\n                {\n    \n            \"deviceId\": \"60:db:98:6f:27:dd\"\n    \n        },              {\n    \n            \"deviceId\": \"aereg123\"\n        },\n        {\n    \n            \"deviceId\": \"10.245.222.132\"\n        },\n        {\n    \n            \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        },\n                {\n            \"opMode\": \"AE\"\n        },\n                {\n           \"opMode\": \"Managed ONT\",\n            \"limit\": 2\n        }\n    ])\n    def test_get_list(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 404 == 200\nE      +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:221: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748945322286,"stop":1748945322531,"duration":245},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748945322531,"stop":1748945323934,"duration":1403},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"base_api","time":{"start":1748945433223,"stop":1748945433223,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000026456A76E60>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000026456A17340>\nparams = {'deviceId': '60:db:98:6f:27:dd'}\n\n    @allure.title('Test - get provisioning record list')\n    @pytest.mark.parametrize('params',[\n        {\n            \"limit\": 2\n        },\n        {\n    \n            \"deviceId\": \"CXNK00AFB83B\"\n        },\n                {\n    \n            \"deviceId\": \"60:db:98:6f:27:dd\"\n    \n        },              {\n    \n            \"deviceId\": \"aereg123\"\n        },\n        {\n    \n            \"deviceId\": \"10.245.222.132\"\n        },\n        {\n    \n            \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        },\n                {\n            \"opMode\": \"AE\"\n        },\n                {\n           \"opMode\": \"Managed ONT\",\n            \"limit\": 2\n        }\n    ])\n    def test_get_list(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 404 == 200\nE      +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:221: AssertionError","steps":[],"attachments":[{"uid":"f02497aff6a1800a","name":"Request Info","source":"f02497aff6a1800a.json","type":"application/json","size":206},{"uid":"9aeb25bc9ab30e1b","name":"Response Info","source":"9aeb25bc9ab30e1b.json","type":"application/json","size":73}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"48060-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"params","value":"{'deviceId': '60:db:98:6f:27:dd'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"22c2ffdc2505ef95.json","parameterValues":["'test'","{'deviceId': '60:db:98:6f:27:dd'}"]}