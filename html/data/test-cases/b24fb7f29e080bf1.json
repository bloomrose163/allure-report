{"uid":"b24fb7f29e080bf1","name":"Test - Query device with different paramters:{'softwareVersion': '25.2.0.0.28'}","fullName":"testcase.ACS.test_device.TestDevice#test_get_device_by_param","historyId":"89b95521a864f47dd9bef4c8f8af88e5","time":{"start":1748496744414,"stop":1748496745782,"duration":1368},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000014D3AF31A80>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3AD6A410>\nparam = {'softwareVersion': '25.2.0.0.28'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748496616837,"stop":1748496617142,"duration":305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1748496617142,"stop":1748496618475,"duration":1333},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0},{"name":"base_api","time":{"start":1748496744410,"stop":1748496744412,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_device.TestDevice object at 0x0000014D3AF31A80>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3AD6A410>\nparam = {'softwareVersion': '25.2.0.0.28'}\n\n    @allure.title('Test - Query device with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize(\"param\", load_json(\"./testdata/ACS/params_get_device.json\"))\n    def test_get_device_by_param(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_device.py:41: AssertionError","steps":[],"attachments":[{"uid":"b11e63ade047388a","name":"Request Info","source":"b11e63ade047388a.json","type":"application/json","size":185},{"uid":"e8c261e0810cb10","name":"Response Info","source":"e8c261e0810cb10.json","type":"application/json","size":101}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"Test - device"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_device"},{"name":"subSuite","value":"TestDevice"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"12704-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_device"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"},{"name":"param","value":"{'softwareVersion': '25.2.0.0.28'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b24fb7f29e080bf1.json","parameterValues":["'test'","{'softwareVersion': '25.2.0.0.28'}"]}