{"uid":"eff834c2646e5529","name":"Test - CRUD - create service orchestration profile with profile, bandwidth ","fullName":"testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_video","historyId":"de71351b7485759406bea1c8c11cf382","time":{"start":1749534490642,"stop":1749534493274,"duration":2632},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002327CF742B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002327E442E30>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n>       bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002327E442E30>\nendpoint = 'service-orchestration-profile'\njson_data = {'category': 'Bandwidth', 'downstreamCIR': 100, 'name': 'service_orchestration_profilew3D0nQ', 'orgId': '2550', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749534170104,"stop":1749534170381,"duration":277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1749534170381,"stop":1749534171685,"duration":1304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"base_api","time":{"start":1749534490639,"stop":1749534490641,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002327CF742B0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002327E442E30>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - CRUD - create service orchestration profile with profile, bandwidth ')\n    def test_create_video(self,base_api):\n    \n        bandwidth_body = load_body(\"service_orchestration_profile_bandwidth\")\n        mcastFilter_body = load_body(\"service_orchestration_profile_video_MRF\")\n        mvr_body = load_body(\"service_orchestration_profille_video_MVR\")\n>       bandwidth_id = base_api.create_get_id(endpoint,bandwidth_body,need_random=True, field=\"name\")\n\ntestcase\\ACS\\test_service_orchestration_profile.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002327E442E30>\nendpoint = 'service-orchestration-profile'\njson_data = {'category': 'Bandwidth', 'downstreamCIR': 100, 'name': 'service_orchestration_profilew3D0nQ', 'orgId': '2550', ...}\nneed_random = True, field = 'name'\n\n    def create_get_id(self,endpoint,json_data,need_random=False, field=None):\n        response = self.create(endpoint,json_data,need_random, field)\n>       return response.json()['_id']\nE       KeyError: '_id'\n\nutils\\base_api_acs.py:172: KeyError","steps":[],"attachments":[{"uid":"ea17850b4089a151","name":"Request Info","source":"ea17850b4089a151.json","type":"application/json","size":293},{"uid":"c2e26638605d106e","name":"Response Info","source":"c2e26638605d106e.json","type":"application/json","size":96}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Service Orchestration Profile API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_service_orchestration_profile"},{"name":"subSuite","value":"TestServiceOrchestrationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"19900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_service_orchestration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"CTM-315046","url":"CTM-315046","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"eff834c2646e5529.json","parameterValues":["'test'"]}