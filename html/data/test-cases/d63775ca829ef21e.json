{"uid":"d63775ca829ef21e","name":"Test - delete record ","fullName":"testcase.ACS.test_configuration_profile.TestConfigurationProfile#test_delete_by_param","historyId":"6da82e3fb1176ed9075be55a5065945f","time":{"start":1749013978409,"stop":1749013980411,"duration":2002},"status":"failed","statusMessage":"AssertionError: assert 1 == 0","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001F1D0C81270>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D07F4FA0>\nparam = {'name': 'test_ds_hk2_tp4'}\n\n    @allure.title('Test - delete record ')\n    @pytest.mark.parametrize('param',[{\"name\": \"test_ds_hk2_tp4\"}])\n    def test_delete_by_param(self,base_api,param):\n      response_get = base_api.get_list_by_param(endpoint,param)\n      # configuration-profile has no count API\n      # response_get_count = base_api.get_count(endpoint,params)\n      count = len(response_get.json())\n      # assert count == response_get_count.json()[\"count\"]\n      print(f\"There are {count} record will be deleted\")\n    \n      response_delete = base_api.delete_with_param(endpoint,param)\n      if base_api.env == \"aws\":\n        assert response_delete.status_code == 400\n        assert response_delete.json()['error'] == 'Id is required when Deleting configuration-profile!'\n      else:\n        assert response_delete.status_code == 200\n>       assert count  == response_delete.json()['numberOfRecords']\nE       assert 1 == 0\n\ntestcase\\ACS\\test_configuration_profile.py:96: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749013978409,"stop":1749013978409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0","statusTrace":"self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x000001F1D0C81270>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D07F4FA0>\nparam = {'name': 'test_ds_hk2_tp4'}\n\n    @allure.title('Test - delete record ')\n    @pytest.mark.parametrize('param',[{\"name\": \"test_ds_hk2_tp4\"}])\n    def test_delete_by_param(self,base_api,param):\n      response_get = base_api.get_list_by_param(endpoint,param)\n      # configuration-profile has no count API\n      # response_get_count = base_api.get_count(endpoint,params)\n      count = len(response_get.json())\n      # assert count == response_get_count.json()[\"count\"]\n      print(f\"There are {count} record will be deleted\")\n    \n      response_delete = base_api.delete_with_param(endpoint,param)\n      if base_api.env == \"aws\":\n        assert response_delete.status_code == 400\n        assert response_delete.json()['error'] == 'Id is required when Deleting configuration-profile!'\n      else:\n        assert response_delete.status_code == 200\n>       assert count  == response_delete.json()['numberOfRecords']\nE       assert 1 == 0\n\ntestcase\\ACS\\test_configuration_profile.py:96: AssertionError","steps":[],"attachments":[{"uid":"c98752d97a4ce833","name":"Request Info","source":"c98752d97a4ce833.json","type":"application/json","size":185},{"uid":"f2cdb019be2b56e1","name":"Response Info","source":"f2cdb019be2b56e1.json","type":"application/json","size":73},{"uid":"132a1c0165cc24cd","name":"Request Info","source":"132a1c0165cc24cd.json","type":"application/json","size":188},{"uid":"3278cfb9649ce015","name":"Response Info","source":"3278cfb9649ce015.json","type":"application/json","size":66}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_configuration_profile"},{"name":"subSuite","value":"TestConfigurationProfile"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_configuration_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'name': 'test_ds_hk2_tp4'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d63775ca829ef21e.json","parameterValues":["'dev'","{'name': 'test_ds_hk2_tp4'}"]}