{"uid":"e42979d1fa107122","name":"Test - crud record ","fullName":"testcase.ACS.test_workflow.TestWorkflow#test_crud","historyId":"8cfdcf974e704d628700c640c0cdeae3","time":{"start":1747910173354,"stop":1747910173888,"duration":534},"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006551AE0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007B20790>\n\n    @allure.title('Test - crud record ')\n    # #@pytest.mark.skip()\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_path[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,True,\"name\")\n>       model_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_workflow.py:113: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1747910047428,"stop":1747910047530,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1747910047530,"stop":1747910049127,"duration":1597},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1747910173353,"stop":1747910173354,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '_id'","statusTrace":"self = <testcase.ACS.test_workflow.TestWorkflow object at 0x0000014006551AE0>, base_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014007B20790>\n\n    @allure.title('Test - crud record ')\n    # #@pytest.mark.skip()\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_path[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,True,\"name\")\n>       model_id = response_create.json()['_id']\nE       KeyError: '_id'\n\ntestcase\\ACS\\test_workflow.py:113: KeyError","steps":[],"attachments":[{"uid":"f71bdb85dadf3e71","name":"Request Info","source":"f71bdb85dadf3e71.json","type":"application/json","size":544},{"uid":"631d3d14f7df507d","name":"Response Info","source":"631d3d14f7df507d.json","type":"application/json","size":161}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_workflow"},{"name":"subSuite","value":"TestWorkflow"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"24568-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_workflow"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"e42979d1fa107122.json","parameterValues":["'dev'"]}