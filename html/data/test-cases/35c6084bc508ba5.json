{"uid":"35c6084bc508ba5","name":"Test - create provisioning record and get id","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud","historyId":"dd949a74941c9f7e345b7c615b885816","time":{"start":1749140473148,"stop":1749140477231,"duration":4083},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001BC6CECA980>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001BC6FB0FF40>\nfile_path = './testdata/ACS/provisioning_record_voice_TDMGW.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749140293448,"stop":1749140293525,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749140293525,"stop":1749140294840,"duration":1315},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749140473132,"stop":1749140473148,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001BC6CECA980>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001BC6FB0FF40>\nfile_path = './testdata/ACS/provisioning_record_voice_TDMGW.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n>       assert response_create.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:95: AssertionError","steps":[],"attachments":[{"uid":"ae6c5b632bc72a50","name":"Request Info","source":"ae6c5b632bc72a50.json","type":"application/json","size":711},{"uid":"4f0e933108fca629","name":"Response Info","source":"4f0e933108fca629.json","type":"application/json","size":119},{"uid":"abcc60fa651f1581","name":"Request Info","source":"abcc60fa651f1581.json","type":"application/json","size":185},{"uid":"e287c525e16adbef","name":"Response Info","source":"e287c525e16adbef.json","type":"application/json","size":1297},{"uid":"4b5c49995779859e","name":"Request Info","source":"4b5c49995779859e.json","type":"application/json","size":171},{"uid":"41a53dcd12d2dd65","name":"Response Info","source":"41a53dcd12d2dd65.json","type":"application/json","size":66},{"uid":"d44f4491b5c286c6","name":"Request Info","source":"d44f4491b5c286c6.json","type":"application/json","size":711},{"uid":"4c25b6d120732b01","name":"Response Info","source":"4c25b6d120732b01.json","type":"application/json","size":111}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":8,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"50112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"file_path","value":"'./testdata/ACS/provisioning_record_voice_TDMGW.json'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"35c6084bc508ba5.json","parameterValues":["'dev'","'./testdata/ACS/provisioning_record_voice_TDMGW.json'"]}