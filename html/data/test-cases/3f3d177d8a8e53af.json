{"uid":"3f3d177d8a8e53af","name":"Test - create with invalid body","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_invalid","historyId":"ac1d466c5ea9ad5dc4df48694684192e","time":{"start":1749175948333,"stop":1749175979549,"duration":31216},"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000223EC1C0C10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EED3A2F0>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create with invalid body')\n    def test_create_invalid(self,base_api):\n>      ACSAPI.verify_create_invalid(self,base_api,endpoint)\n\ntestcase\\ACS\\test_static_group_member.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000223EC1C0C10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EED3A2F0>\nendpoint = 'static-group-member'\n\n    def verify_create_invalid(self,base_api,endpoint):\n        create_data ={}\n        response_create = base_api.create(endpoint,create_data,need_random=True, field=\"name\")\n>       assert response_create.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:163: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749173219450,"stop":1749173219578,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1749173219578,"stop":1749173220869,"duration":1291},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1749175948333,"stop":1749175948333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000223EC1C0C10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EED3A2F0>\n\n    @allure.feature('CREATE')\n    @allure.title('Test - create with invalid body')\n    def test_create_invalid(self,base_api):\n>      ACSAPI.verify_create_invalid(self,base_api,endpoint)\n\ntestcase\\ACS\\test_static_group_member.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000223EC1C0C10>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223EED3A2F0>\nendpoint = 'static-group-member'\n\n    def verify_create_invalid(self,base_api,endpoint):\n        create_data ={}\n        response_create = base_api.create(endpoint,create_data,need_random=True, field=\"name\")\n>       assert response_create.status_code == 400\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:163: AssertionError","steps":[],"attachments":[{"uid":"86ec7e6380f286f","name":"Request Info","source":"86ec7e6380f286f.json","type":"application/json","size":173},{"uid":"c7074fdf9d7e205c","name":"Response Info","source":"c7074fdf9d7e205c.json","type":"application/json","size":46}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"CREATE"},{"name":"epic","value":"ACS Static Group Member API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"19868-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"3f3d177d8a8e53af.json","parameterValues":["'dev'"]}