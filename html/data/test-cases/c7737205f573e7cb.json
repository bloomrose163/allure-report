{"uid":"c7737205f573e7cb","name":"Negative Test - get all the static group member with different param:None","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_list_negative","historyId":"e20a50d8fc6032d70b2db1f32d91dde6","time":{"start":1748327517384,"stop":1748327539658,"duration":22274},"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000021CA09ABE20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA3742FE0>\nparam = {'memberInfo': 'non-exsit'}\n\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n            assert response.status_code == 500\n        else:\n>           assert response.status_code == 200\nE           assert 504 == 200\nE            +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:141: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748324557190,"stop":1748324557313,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_and_refresh_access_token","time":{"start":1748324557313,"stop":1748324558634,"duration":1321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_api","time":{"start":1748327517382,"stop":1748327517384,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 504 == 200\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x0000021CA09ABE20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000021CA3742FE0>\nparam = {'memberInfo': 'non-exsit'}\n\n    @allure.title(f'Negative Test - get all the static group member with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"limit\": -2\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n         {\n            \"memberInfo\":\"non-exsit\"\n        }\n    ])\n    def test_get_member_list_negative(self,base_api,param):\n        response = base_api.get_list_by_param(endpoint,param)\n        if param == {\"limit\": -2} :\n            assert response.status_code == 500\n        else:\n>           assert response.status_code == 200\nE           assert 504 == 200\nE            +  where 504 = <Response [504]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:141: AssertionError","steps":[],"attachments":[{"uid":"fbbc151086a8913a","name":"Request Info","source":"fbbc151086a8913a.json","type":"application/json","size":183},{"uid":"472baf3b56e0602b","name":"Response Info","source":"472baf3b56e0602b.json","type":"application/json","size":52}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Test - StaticGroupMember API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"51132-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"param","value":"{'memberInfo': 'non-exsit'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c7737205f573e7cb.json","parameterValues":["'dev'","{'memberInfo': 'non-exsit'}"]}