{"uid":"a05fd1753030d5e9","name":"Test - get provisioning record list","fullName":"testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_get_list","historyId":"690e0a4a6d14afcc4436553ed9668999","time":{"start":1748888357107,"stop":1748888357864,"duration":757},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000027D6F516CE0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D708140A0>\nparams = {'deviceId': '60:db:98:6f:27:dd'}\n\n    @allure.title('Test - get provisioning record list')\n    @pytest.mark.parametrize('params',[\n        {\n            \"limit\": 2\n        },\n        {\n    \n            \"deviceId\": \"CXNK00AFB83B\"\n        },\n                {\n    \n            \"deviceId\": \"60:db:98:6f:27:dd\"\n    \n        },              {\n    \n            \"deviceId\": \"aereg123\"\n        },\n        {\n    \n            \"deviceId\": \"10.245.222.132\"\n        },\n        {\n    \n            \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        },\n                {\n            \"opMode\": \"AE\"\n        },\n                {\n           \"opMode\": \"Managed ONT\",\n            \"limit\": 2\n        }\n    ])\n    def test_get_list(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 404 == 200\nE      +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:221: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748888237032,"stop":1748888237243,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"get_and_refresh_access_token","time":{"start":1748888237243,"stop":1748888238670,"duration":1427},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_api","time":{"start":1748888357103,"stop":1748888357106,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000027D6F516CE0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000027D708140A0>\nparams = {'deviceId': '60:db:98:6f:27:dd'}\n\n    @allure.title('Test - get provisioning record list')\n    @pytest.mark.parametrize('params',[\n        {\n            \"limit\": 2\n        },\n        {\n    \n            \"deviceId\": \"CXNK00AFB83B\"\n        },\n                {\n    \n            \"deviceId\": \"60:db:98:6f:27:dd\"\n    \n        },              {\n    \n            \"deviceId\": \"aereg123\"\n        },\n        {\n    \n            \"deviceId\": \"10.245.222.132\"\n        },\n        {\n    \n            \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        },\n                {\n            \"opMode\": \"AE\"\n        },\n                {\n           \"opMode\": \"Managed ONT\",\n            \"limit\": 2\n        }\n    ])\n    def test_get_list(self,base_api,params):\n      response = base_api.get_list_by_param(endpoint,params)\n>     assert response.status_code == 200\nE     assert 404 == 200\nE      +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:221: AssertionError","steps":[],"attachments":[{"uid":"8c393c93134b53c7","name":"Request Info","source":"8c393c93134b53c7.json","type":"application/json","size":205},{"uid":"ae9883edbbf3786a","name":"Response Info","source":"ae9883edbbf3786a.json","type":"application/json","size":73}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"Test - ProvisioningRecord"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_provisioning_record"},{"name":"subSuite","value":"TestProvisioningRecord"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"2208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_provisioning_record"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"},{"name":"params","value":"{'deviceId': '60:db:98:6f:27:dd'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"a05fd1753030d5e9.json","parameterValues":["'dev'","{'deviceId': '60:db:98:6f:27:dd'}"]}