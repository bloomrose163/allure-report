{"uid":"46c3bcde3073cca5","name":"Test - get and filter","fullName":"testcase.ACS.test_system_group.TestSystemGroup#test_get_filter","historyId":"4b5b4313bd114ae0c7ca15b4d6ee32fd","time":{"start":1749014151976,"stop":1749014153033,"duration":1057},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x000001F1D049B790>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EE33A0>\n\n    @allure.title('Test - get and filter')\n    def test_get_filter(self,base_api):\n        # json_data = load_json(file_paths[\"filter\"])\n        # response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        # assert response_create.status_code == 200\n        # model_id = response_create.json()['_id']\n    \n        param = {\"limit\": 2,\"filter\": \"CXNK0151C334\",}\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_system_group.py:188: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1749013957443,"stop":1749013957660,"duration":217},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"get_and_refresh_access_token","time":{"start":1749013957660,"stop":1749013959074,"duration":1414},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_api","time":{"start":1749014151973,"stop":1749014151976,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x000001F1D049B790>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001F1D1EE33A0>\n\n    @allure.title('Test - get and filter')\n    def test_get_filter(self,base_api):\n        # json_data = load_json(file_paths[\"filter\"])\n        # response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        # assert response_create.status_code == 200\n        # model_id = response_create.json()['_id']\n    \n        param = {\"limit\": 2,\"filter\": \"CXNK0151C334\",}\n        response = base_api.get_list_by_param(endpoint,param)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_system_group.py:188: AssertionError","steps":[],"attachments":[{"uid":"77fa094284519eff","name":"Request Info","source":"77fa094284519eff.json","type":"application/json","size":191},{"uid":"d201ed5f4c17bebb","name":"Response Info","source":"d201ed5f4c17bebb.json","type":"application/json","size":73}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2},"afterStages":[],"labels":[{"name":"epic","value":"Test - SystemGroup API"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_system_group"},{"name":"subSuite","value":"TestSystemGroup"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"52404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_system_group"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'dev'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"46c3bcde3073cca5.json","parameterValues":["'dev'"]}