{"uid":"e0fc0577280396c9","name":"Test - create static system group, create static group members, display the system group and check this group can't be deleted","fullName":"testcase.ACS.test_static_group_member.TestStaticGroupMember#test_create_group_static_delete","historyId":"6a34091d4c753ab6b3f1a457ae070efa","time":{"start":1750098575432,"stop":1750098584338,"duration":8906},"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000263F66DDCC0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC14850>\n\n    @allure.feature('CREATE')\n    @allure.issue('GCPT-14556')\n    @allure.title('Test - create static system group, create static group members, display the system group and check this group can\\'t be deleted')\n    def test_create_group_static_delete(self,base_api):\n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n    \n        response_member = base_api.create_no_org(endpoint,json_data)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:50: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1750097856594,"stop":1750097856894,"duration":300},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"get_and_refresh_access_token","time":{"start":1750097856894,"stop":1750097858111,"duration":1217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false},{"name":"base_api","time":{"start":1750098575428,"stop":1750098575432,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000263F66DDCC0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263FAC14850>\n\n    @allure.feature('CREATE')\n    @allure.issue('GCPT-14556')\n    @allure.title('Test - create static system group, create static group members, display the system group and check this group can\\'t be deleted')\n    def test_create_group_static_delete(self,base_api):\n        # create a static system group\n        group_body =  json_data = load_json(file_paths[\"static\"])\n        static_group_id = base_api.create_get_id(group_endpoint,group_body,need_random=True, field=\"name\")\n    \n        #  create a static group member to this group\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n    \n        response_member = base_api.create_no_org(endpoint,json_data)\n>       assert response_member.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_static_group_member.py:50: AssertionError","steps":[],"attachments":[{"uid":"b08c97b8e49262db","name":"Request Info","source":"b08c97b8e49262db.json","type":"application/json","size":266},{"uid":"af530ea8a6866db","name":"Response Info","source":"af530ea8a6866db.json","type":"application/json","size":314},{"uid":"2ebd74d7af9c2bed","name":"Request Info","source":"2ebd74d7af9c2bed.json","type":"application/json","size":232},{"uid":"643eb2f56eded758","name":"Response Info","source":"643eb2f56eded758.json","type":"application/json","size":225}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":4,"stepsCount":0,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"ACS Static Group Member API"},{"name":"feature","value":"CREATE"},{"name":"parentSuite","value":"testcase.ACS"},{"name":"suite","value":"test_static_group_member"},{"name":"subSuite","value":"TestStaticGroupMember"},{"name":"host","value":"Cherry-640879"},{"name":"thread","value":"2488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.ACS.test_static_group_member"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_api","value":"'test'"}],"links":[{"name":"GCPT-14556","url":"GCPT-14556","type":"issue"},{"name":"CTM-312349","url":"CTM-312349","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e0fc0577280396c9.json","parameterValues":["'test'"]}