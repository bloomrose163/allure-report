{"name": "Test - crud record ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002387D03F850>\nbase_api = <utils.base_api.BaseAPI object at 0x000002387FC65270>\n\n    @allure.title('Test - crud record ')\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"update\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_put = base_api.update(endpoint,model_id,json_data,True,\"name\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n            # get info\n        name = \"test_workflow_11\"\n        new_param={\"name\": name.upper(),\"limit\": 3}\n        response_get = base_api.get_list_by_param(endpoint,new_param)\n        assert response_get.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:176: AssertionError"}, "attachments": [{"name": "Request Info", "source": "fa038487-67bf-46c4-ad15-82b155ee1a41-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5b2fe7c0-05cd-4de2-90b6-edf3798d0dee-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "77c81b0c-e252-4e49-8098-8dbfb7b30a65-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5d238402-0a9e-4c54-9fc3-a46dd2b0ffe0-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "feb0ab71-127e-41fe-a552-0b277493748d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c0b0094e-8204-471e-bb83-65f12826362c-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e0e6c087-a779-42ef-9742-8bcc2f5e3ae4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f3e6be69-7f0c-439d-baf4-eafed88923ea-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "ed66f91e-9fa7-4571-9a38-508403f2be1a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "40b90a5d-3f94-46ac-b78e-b05e49645764-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749802267944, "stop": 1749802281724, "uuid": "e15c8b29-4e87-4dac-b625-45d48dbcecb2", "historyId": "ce94767f27f842d643289db6d5ac0ddc", "testCaseId": "afd9ddea709b6fe93a0748baefcd22ee", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_crud", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "41128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}]}