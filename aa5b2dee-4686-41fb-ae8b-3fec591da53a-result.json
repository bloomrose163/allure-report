{"name": "Test - Query count with different paramters:{'opMode': 'AE'}", "status": "broken", "statusDetails": {"message": "EOFError", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x0000014D3AF5C550>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x0000014D3AF7CFA0>\nparam = {'opMode': 'AE'}\n\n    @allure.title('Test - Query count with different paramters:{param}')\n    # @pytest.mark.skip()\n    @pytest.mark.parametrize('param',[\n        # {\n        #     \"deviceId\": \"CXNK00AFB83B\"\n        # },\n        # {\n        #     \"deviceId\": \"60:db:98:6f:27:dd\"\n        # },\n        # {\n        #     \"deviceId\": \"aereg123\"\n        # },\n        # {\n        #     \"deviceId\": \"2550-60db98-CXNK00AFB83B\"\n        # },\n        {\n            \"opMode\": \"AE\"\n        },\n                {\n            \"opMode\": \"Managed ONT\"\n        },\n        {\n            \"opMode\": \"RG\"\n        }\n    ])\n    def test_get_device_count(self,base_api,param):\n>       response = base_api.get_count(endpoint,param)\n\ntestcase\\ACS\\test_provisioning_record.py:181: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:163: in get_count\n    return self.request(method='GET',endpoint=endpoint + '/count',params=params)\nutils\\base_api_acs.py:81: in request\n    self.attach_to_allure(method, url, params, data, json_data, headers, response)\nutils\\base_api_acs.py:119: in attach_to_allure\n    self.write_json_to_excel('C:\\git\\gcp_acs_api_mid.xlsx',request_json,response_json)\nutils\\base_api_acs.py:131: in write_json_to_excel\n    workbook = load_workbook(filename=file_path)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:348: in load_workbook\n    reader.read()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:303: in read\n    self.read_worksheets()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:237: in read_worksheets\n    ws_parser.bind_all()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:465: in bind_all\n    self.bind_cells()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:368: in bind_cells\n    for idx, row in self.parser.parse():\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:156: in parse\n    for _, element in it:\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\xml\\etree\\ElementTree.py:1255: in iterator\n    data = source.read(16 * 1024)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:925: in read\n    data = self._read1(n)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:993: in _read1\n    data += self._read2(n - len(data))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipExtFile name='xl/worksheets/sheet1.xml' mode='r' compress_type=deflate>\nn = 4096\n\n    def _read2(self, n):\n        if self._compress_left <= 0:\n            return b''\n    \n        n = max(n, self.MIN_READ_SIZE)\n        n = min(n, self._compress_left)\n    \n        data = self._fileobj.read(n)\n        self._compress_left -= len(data)\n        if not data:\n>           raise EOFError\nE           EOFError\n\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1028: EOFError"}, "attachments": [{"name": "Exception", "source": "6a38de3c-017d-41e6-8a19-ca4dabaad940-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "param", "value": "{'opMode': 'AE'}"}], "start": 1748496817474, "stop": 1748496818142, "uuid": "d3e939e6-8947-468f-8dfd-d4038239468d", "historyId": "5d04be66514c30b47a858a2b5e24df68", "testCaseId": "cfbc629525b264147af4e4c6c72d816c", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_get_device_count", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}