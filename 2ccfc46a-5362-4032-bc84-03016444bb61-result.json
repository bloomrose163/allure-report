{"name": "Test - 1.can not delete group associated with group 2.forceDelete", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Scheduled' == 'Completed'\n  \n  - Completed\n  + Scheduled", "trace": "self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x000001C86C6AB0A0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001C86DD5D000>\n\n    @allure.title('Test - 1.can not delete group associated with group 2.forceDelete')\n    def test_create_cpe_filter(self,base_api):\n    \n        # Prediction -  apply static group for workflow\n        json_data = load_json(file_paths[\"static\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        static_group = response_create.json()['_id']\n    \n        # create a group\n        json_data = load_json(file_paths[\"filter\"])\n        response_create = base_api.create_with_jsondata(endpoint,json_data,need_random=True, field=\"name\")\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n    \n        # create a workflow with this group\n        workflow_endpoint = \"workflow\"\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = [model_id]\n        json_data[\"actions\"][0][\"staticGroupId\"] = static_group\n        response = base_api.create_with_jsondata(workflow_endpoint,json_data,True,\"name\")\n        assert response.status_code == 200\n        workflow_id = response.json()['_id']\n    \n    \n          # get the record of workflow\n        response_get = base_api.get_by_id(workflow_endpoint,workflow_id)\n        assert response_get.status_code == 200\n>       assert response_get.json()[\"state\"] == \"Completed\"\nE       AssertionError: assert 'Scheduled' == 'Completed'\nE         \nE         - Completed\nE         + Scheduled\n\ntestcase\\ACS\\test_system_group.py:61: AssertionError"}, "attachments": [{"name": "Request Info", "source": "91bc45ad-0667-4721-9e35-9b86e5a73634-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "58a5f169-7015-4b4f-9d2f-b3b515bd03d2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "23a26c81-9ceb-47e5-b507-bdda23a7369e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b3fc67c9-0a19-4cee-bbce-e0261d378137-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b0195bd3-4482-4304-be5a-9dc4064830b0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b91ca60c-dc1e-45dd-9fc3-b3709ea5049a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "634a5f8c-b482-418d-a6bd-894e8ef938a2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "8382acec-c0f3-4ec1-8e79-46708b6186ec-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'dev'"}], "start": 1748240092362, "stop": 1748240096261, "uuid": "b5372355-b122-4e71-9ac8-009ee0d9917f", "historyId": "d39f75db2be3fadafce6656944b2679a", "testCaseId": "4e30bb5765d458ec0a1f4bf8798d7ecf", "fullName": "testcase.ACS.test_system_group.TestSystemGroup#test_create_cpe_filter", "labels": [{"name": "epic", "value": "Test - SystemGroup API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_system_group"}, {"name": "subSuite", "value": "TestSystemGroup"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "47028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_system_group"}]}