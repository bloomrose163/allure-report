{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001FEFF6AC280>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001FE82268BE0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "275f8cc4-b987-498c-8f50-df91208b71b8-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "df56ad45-c692-44f7-b7eb-54c678599a00-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d397d67a-0aea-445a-8637-1806fbfb1b26-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "de6c5165-8d22-4545-961c-7e6d38eea3d8-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "82744865-01a2-49de-8713-14e0fba02953-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "cbb2f9f2-de5a-4ec5-81d5-365e36df4db3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f4a75995-0fc2-4739-98af-50666d1d9d77-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "29afcc3e-5dc1-48d0-b7fc-9657512c4565-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "11fab81b-1193-4077-afc9-90ca104e2b59-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "bc73f474-0338-4687-af7b-3f9e39035bbc-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9ec20b56-2741-4976-9b89-c02146e92e1e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "00fb1a3c-3231-476c-8961-990720b6f7ff-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "3c1f75d0-2e86-418d-8921-d724e66998e1-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "547d3f39-0e7f-4149-a219-c3932f475422-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "72c307be-f7c8-48a5-aede-380e6c26da0c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f253ca24-de6f-4250-b600-e2a1f1f77c8a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "894aeb9b-c9f9-4de2-92b8-f900cd44cee7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ef84a7fa-04cc-470c-b12d-44e6ce615557-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749451668383, "stop": 1749451685301, "uuid": "bad6e89d-e1da-46af-8f22-4cbeae14ea62", "historyId": "36a260bec491b376f6257a1df08cf3be", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}