{"name": "Test - create service orchestration profile, display the service orchestration profile and check this profile can't be deleted", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 404\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x00000200752DE740>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000200750C27A0>\n\n    @allure.feature('CREATE')\n    @allure.issue('GCPT-14626')\n    @allure.title('Test - create service orchestration profile, display the service orchestration profile and check this profile can\\'t be deleted')\n    def test_create_group_static_delete(self,base_api):\n        json_data = load_json(file_paths[\"sop_create\"])\n        # json_data ={\"category\" : \"Video Service\"}\n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n        response= base_api.create(endpoint,json_data,need_random=False, field=\"name\")\n        assert response.status_code == 200\n        model_id = response.json()['_id']\n        print(\"the diff with create body as following: \\n\" , DeepDiff(json_data,response.json()))\n    \n        # get service orchestration profile member info\n        response_get = base_api.get_by_id_no_org(endpoint,model_id)\n        assert response_get.status_code == 200\n        print(\"the diff with create body as following: \\n\" , DeepDiff(json_data,response_get.json()))\n    \n        # delete the group\n        response_delete= base_api.delete(endpoint,param,model_id)\n        assert response_delete.status_code == 200\n        assert response_delete.json()['numberOfRecords'] == 1\n    \n        #  # delete the memner\n        response_delete= base_api.delete(endpoint,param,model_id)\n>       assert response_delete.status_code == 404\nE       assert 400 == 404\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_service_orchestration_profile.py:55: AssertionError"}, "attachments": [{"name": "Request Info", "source": "022671fc-e535-4cd0-8e4a-c0f9df5d14e3-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b9f79d5e-6dc0-43c9-b8d1-84743eab9462-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "092eb14f-3cd6-4c9d-aca1-e8123e8eec94-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "466ca2c1-32d3-4890-b3ab-1faba19e7148-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "a4fe7ac1-ec08-4470-a937-eb725a3d3b7c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "2a8c3655-8f5d-4a83-b9bc-53a2b6132489-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "310a450b-b9b4-44cf-a0af-b69c60628ac6-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "559491b8-04ed-4c40-a406-33e405112925-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749031558922, "stop": 1749031562309, "uuid": "8a146e04-f604-448e-ac77-1bb6c9ae1fbc", "historyId": "1af266c0830ab43f1dec40d6ebde20b8", "testCaseId": "686acf2fdf1762cf4a9d904a27f3ed8e", "fullName": "testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_group_static_delete", "labels": [{"name": "feature", "value": "CREATE"}, {"name": "epic", "value": "ACS Service Orchestration Profile API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_service_orchestration_profile"}, {"name": "subSuite", "value": "TestServiceOrchestrationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "40176-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_service_orchestration_profile"}], "links": [{"type": "issue", "url": "GCPT-14626", "name": "GCPT-14626"}, {"type": "tms", "url": "CTM-315046", "name": "CTM-315046"}]}