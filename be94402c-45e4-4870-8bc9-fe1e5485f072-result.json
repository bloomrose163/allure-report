{"name": "Test - CRUD - create service orchestration profile with Voice Service H.248", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile object at 0x000002C9869E1A50>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002C987EBB520>\nvoice_type = 'H.248'\n\n    @allure.feature('CREATE')\n    @allure.issue('GCPT-14802')\n    @allure.title('Test - CRUD - create service orchestration profile with Voice Service {voice_type}')\n    # @pytest.mark.parametrize('body_key', [\"service_orchestration_profile_data\",\"service_orchestration_profile_voice\",\"service_orchestration_profile_data_PPPoE\",\"service_orchestration_profile_data_GigaCenter\"])\n    @pytest.mark.parametrize('voice_type', [ \"SIP\", \"H.248\", \"MGCP\", \"X_000631_TDMGW\" ])\n    def test_create_data_voice(self,base_api,voice_type):\n        json_data = load_body(\"service_orchestration_profile_voice\")\n        json_data[\"type\"] = voice_type\n        response= base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n>       assert response.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_service_orchestration_profile.py:247: AssertionError"}, "attachments": [{"name": "Request Info", "source": "303501db-370d-4cac-a3eb-b2c82aeff2d1-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "65c37981-d91b-4be7-9270-35336f5a8a30-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "voice_type", "value": "'H.248'"}], "start": 1750184730147, "stop": 1750184734206, "uuid": "fe07bd38-a33a-44f9-902b-eec567446efe", "historyId": "18a1a0be1b6e47b254a53a55a5616d3f", "testCaseId": "8df46c3503061ce0041dcedc83508964", "fullName": "testcase.ACS.test_service_orchestration_profile.TestServiceOrchestrationProfile#test_create_data_voice", "labels": [{"name": "epic", "value": "ACS Service Orchestration Profile API"}, {"name": "feature", "value": "CREATE"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_service_orchestration_profile"}, {"name": "subSuite", "value": "TestServiceOrchestrationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "40028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_service_orchestration_profile"}], "links": [{"type": "issue", "url": "GCPT-14802", "name": "GCPT-14802"}, {"type": "tms", "url": "CTM-315046", "name": "CTM-315046"}]}