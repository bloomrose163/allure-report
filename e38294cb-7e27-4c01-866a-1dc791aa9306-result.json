{"name": "Test - create provisioning record and get id", "status": "broken", "statusDetails": {"message": "KeyError: 'test'", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002802B0DB640>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002802B6264A0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n>       response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n\ntestcase\\ACS\\test_provisioning_record.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:186: in create_when_exist\n    response_create = self.create(endpoint,json_data,need_random=False, field=None)\nutils\\base_api_acs.py:165: in create\n    return self.request(method='POST',endpoint=endpoint,json=json_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.base_api_acs.BaseAPIACS object at 0x000002802B6264A0>\nmethod = 'POST', endpoint = 'provisioning-record', kwargs = {}\nurl = 'http://acs-api.testx.xilac.net/cc/provisioning-record'\nheaders = {'Content-Type': 'application/json', 'X-Calix-ClientID': 'KTd0rgovlUvdihkkHGnIMCV23Z8c5Uh1', 'accept': 'application/json', 'x-Calix-Accesstoken': 'AnMR8w9fo23tzDPMqFa10GsLAYYZ'}\ncookies = None, params = None, data = None\njson_data = {'data': {'Enable': True, 'pppoe': {'Password': 'John123!', 'Username': 'john.doe'}}, 'deviceId': 'CXNK00AFB83B', 'modelName': 'GS4227', 'opMode': 'Managed ONT', ...}\nfiles = None\n\n    def request(self, method, endpoint, **kwargs):\n        url = self.base_url + endpoint\n        headers= Default().headers\n        headers = kwargs.pop(\"headers\", headers)\n        cookies = kwargs.pop(\"cookies\", None)\n        params = kwargs.pop(\"params\", None)\n        data = kwargs.pop(\"data\", None)\n        json_data = kwargs.pop(\"json\", None)\n        files = kwargs.pop(\"files\", None)\n        timeout = kwargs.pop(\"timeout\", 10)\n        no_org = kwargs.pop(\"no_org\", False)\n        # TODO  placeholder\n        start_time = time.time()\n        merged_params = self._merge_params(params,no_org)\n        if \"orgId\" and json_data and \"orgId\" in json_data:\n>            json_data[\"orgId\"] = ENV_CONFIG[self.env][\"orgId\"]\nE            KeyError: 'test'\n\nutils\\base_api_acs.py:70: KeyError"}, "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749781681667, "stop": 1749781681667, "uuid": "73752774-d787-4c64-b0de-13a901472be2", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "12432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}