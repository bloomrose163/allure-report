{"name": "Test - create static system group, create static group members , display the system group and check this group can't be deleted", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 403\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_system_group.TestSystemGroup object at 0x00000227BDE174C0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000227BF2713C0>\n\n    @allure.title('Test - create static system group, create static group members , display the system group and check this group can\\'t be deleted')\n    def test_create_group_static(self,base_api):\n        # create a static system group\n        response = base_api.create(endpoint,file_paths['static'],need_random=True, field=\"name\")\n        assert response.status_code == 200\n        static_group_id = response.json()['_id']\n    \n        #  create a static group member to this group\n        member_endpoint = 'static-group-member'\n        json_data = load_json(file_paths[\"member\"])\n        json_data[\"groupId\"] = static_group_id\n    \n        json_data[\"orgId\"] = ENV_CONFIG[base_api.env][\"orgId\"]\n    \n        response_member = base_api.create_with_jsondata(member_endpoint,json_data,need_random=False, field=None)\n        member_id = response_member.json()['_id']\n        assert response_member.status_code == 200\n    \n        # get static system group with member info\n        response_static_group = base_api.get_by_id(endpoint,static_group_id)\n        assert response_static_group.status_code == 200\n        # assert response_static_group.json()['members'][0]['_id'] == member_id\n        #    will add compare all the  response_static_group['members'][0] with response_member\n            # delete the group\n        response_delete= base_api.delete(endpoint,params,static_group_id)\n>       assert response_delete.status_code == 403\nE       assert 400 == 403\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_system_group.py:272: AssertionError"}, "attachments": [{"name": "Request Info", "source": "52ea3f1e-931a-4831-9513-768ebf51cda7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ff46b9b6-7f19-4286-a40d-6389c56c0014-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "49f5584d-f634-423b-8d19-f3682b82c545-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d69d6938-8177-42d5-bb97-ea110fc1cd22-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "661b6c97-e0ac-48e7-ae0e-644ef63773c6-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c8bbccf6-2a03-4b65-8a38-40be983799ea-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9bb5c37e-44d4-4f95-b5f5-099a07025b33-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "13368568-b5b1-4e4e-a362-950c557c9d53-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1748370128572, "stop": 1748370133652, "uuid": "0289bc4d-4d69-4721-809f-253b5383800c", "historyId": "6419f39ea8ee9a26f43b002bb19b56f9", "testCaseId": "bb412d322b69c066407431398e48218b", "fullName": "testcase.ACS.test_system_group.TestSystemGroup#test_create_group_static", "labels": [{"name": "epic", "value": "Test - SystemGroup API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_system_group"}, {"name": "subSuite", "value": "TestSystemGroup"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "32716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_system_group"}]}