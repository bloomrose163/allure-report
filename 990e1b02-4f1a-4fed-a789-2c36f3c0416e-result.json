{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001D2C19D5BD0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001D2C2E73E50>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "d2c6dc4d-07ca-4106-a1e8-55858c3adb26-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "00e0febe-8385-4839-ac7b-9bd87c8f69b1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "811a8c8c-eddf-44c1-9828-63f41f576b02-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "60d95a82-2597-4452-b214-e50aaa3d32cd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "60b1aac5-9a0c-4332-a021-dff6b63ecc5f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e885d1c6-5652-41a6-bfdc-7fab3d03d973-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "c3f0d253-0c7f-473d-a3b1-4aa262b8c04d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "028ae72a-8903-41d2-8df0-15e1bbd71f7a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0cde0351-8550-4fa1-b82f-187a32202228-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "95f2038a-5397-4fb4-bcdf-ed3eb9890bce-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1309a994-73ea-4b3f-86e5-db618533207d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "13606089-14a5-45fa-83f7-f5990fa9d5b7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1587e264-e88b-42bb-9af4-184addc3db65-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "11e3d2f8-b251-42d6-8c50-c60956c960f1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "851af464-68d9-4347-b778-1ae755455f8e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "eedf0e29-01b7-4d39-95cd-e068067d3297-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6cc76c07-22f6-454a-b509-69c92d48fd8e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "420fc76d-e799-44c1-8779-26f2b2f430f8-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749493456917, "stop": 1749493477670, "uuid": "7afebce3-970c-4255-8cb2-42b41e1009a8", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "27544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}