{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002B814B58610>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002B815F722C0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "ba63acef-e96a-471a-8c5d-a11888336cf3-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "64a26688-3e68-44c4-9773-37467d814804-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "037d3592-a1bc-4bc0-a0f2-e50da1aec7d1-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "8ea35a5d-6763-45e6-af58-1d3216ba283c-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "27eb8978-5767-41d9-a39d-e7d0439e72d0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "63e2a779-ccd3-4110-8279-4a05e58d36c3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "fbd871a4-b5b2-499e-89fe-10ceb41792b3-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5255a26e-3194-47d6-bf87-7203a6246575-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "adfa28ae-9048-4adb-bd29-1c99a90f7faf-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "265f7d7a-591f-4b20-aed3-15a355545a35-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "06acbaa7-d71f-43f8-bd38-83200045e8a9-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "900d0b0f-3076-4e40-918e-6934f28a2eda-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9d30c4f1-aea5-4307-bcdd-267cfe970ae6-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "57f43890-f4be-44d8-971e-bf5181615c6d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "64253d9c-b583-4eee-8004-5d0577da564a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "dda982b2-1b75-4e1c-9ea0-9d87c7893736-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "3969b247-f3d3-48f7-9b56-39a4e4b3941a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4a0d5e48-4467-4326-9c27-26f3cd3a100c-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749406623189, "stop": 1749406639027, "uuid": "86eb3f97-1ee8-4282-b081-00e9a979f0c0", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "36588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}