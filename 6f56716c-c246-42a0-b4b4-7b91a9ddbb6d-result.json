{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000227BDD771F0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000227BF1790C0>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update_with_jsondata(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update_with_jsondata(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "bd54fc66-a989-4f0b-bf58-542032db2709-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "167a3334-645f-4b52-a81b-b209fc316fdf-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e0442b0e-1f6f-4769-88fb-db20719bef45-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4f629259-7025-4946-bfd8-00f93ae4ba3a-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "020f43fe-de1f-408f-8d3e-cc4518789767-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "105ed5b4-7e88-4738-8033-a3165d6a0768-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d5831dfd-9315-4595-8917-5b6a9424b2e5-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "7c2d3c4e-985a-4b35-a3e7-ae6115744763-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b99a52a5-8b03-4aa1-b0f0-f0a71dd634ef-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c5512625-069a-4163-8112-a8f0cbb22121-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e4d848da-080b-4cbe-a51c-7764642c8066-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e26ad18a-57be-48df-b8da-4d9a43064129-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "081f00fd-b2ab-41ad-aff7-bbcc7934957e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b3e088dd-3ef7-4e37-ac56-0851ac212da4-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7935936e-d966-499f-8793-ec26ee45d5d4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "6b949673-88dc-4748-b29b-81b1a8c392b3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "6b67d7b9-7e2a-4968-92a9-2eccd2ca8da6-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "bfa2fdca-94df-4432-b021-75c6a31133ec-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'aws'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1748369914750, "stop": 1748369925625, "uuid": "1ca1823f-b721-4f45-923a-4f52c3d62592", "historyId": "fc02644e1952cc4fe745a497de8be42e", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "32716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}