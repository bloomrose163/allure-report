{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002327CF21120>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000232011B0160>\nfile_path = './testdata/ACS/provisioning_record_voice_H248.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "e5cf0f84-99ff-4db0-8241-c4b8b2c46582-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a14f7de0-6e7c-4833-b8b4-3b50ee5a2066-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7899d0c9-2444-49de-b1fd-ce18b6b1f140-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "46d4d31d-1803-4689-8faf-9c7cfdec5dea-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "25f7dbc9-8e81-47ba-b3ef-95cdc03a702e-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "42f1dc6a-2e68-49a7-9da0-0e5316abfdeb-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "09f6831d-80ed-481d-a68d-9353f26eb5db-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "25081d3c-ba5f-4945-910d-f051156a1a39-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b72e4477-65d1-485f-8fec-9f8d05152334-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "15a82fa9-926d-4f69-894f-e9001e19529e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "c37bf136-3ba8-43e3-9a5f-7218c2632b77-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "458371fa-b7be-4cd6-99ab-12b92b1cb1d1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "a4ef52f3-c603-4624-968d-55f8964ebe46-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "60163521-3775-4f79-9b35-c0e31ecf85a0-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "99294e57-3a73-4c6c-b058-19435f375942-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "86559aa0-760b-4b17-b5a9-e9f24ec22369-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2257d4af-0503-43da-82ab-c7501d694252-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "6f52f96a-a512-4d96-9f38-a822940a5c04-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_voice_H248.json'"}], "start": 1749534361826, "stop": 1749534384525, "uuid": "0553ebdf-5c25-4ce5-a5aa-5ef3d51e21b3", "historyId": "30848868ef8e3aa00ebfe171c6200631", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "19900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}