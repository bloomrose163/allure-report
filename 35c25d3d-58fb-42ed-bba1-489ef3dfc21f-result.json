{"name": "Test - test the paramter are case-insensitive ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 != 0", "trace": "self = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x00000243E93BD3F0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243E9650A90>\n\n    @allure.title('Test - test the paramter are case-insensitive ')\n    def test_get_case_sensitive(self,base_api):\n      name = \"test_ds_hk3_tp\"\n      params={\"name\":name}\n>     ACSAPI.verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=True,get_count=False)\n\ntestcase\\ACS\\test_configuration_profile.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_configuration_profile.TestConfigurationProfile object at 0x00000243E93BD3F0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000243E9650A90>\nendpoint = 'configuration-profile', params = {'name': 'test_ds_hk3_tp'}\ncase_sen = True, get_count = False\n\n    def verify_get_case_sensitive(self,base_api,endpoint,params,case_sen=False,get_count=False):\n    #   check query with lower charactors\n        response = base_api.get_list_by_param(endpoint,params)\n        assert response.status_code == 200\n        count_lower = len(response.json())\n    \n      #   check query with super charactors\n        upper_params=uppercased_dict = {key: value.upper() for key, value in params.items()}\n        response_upper = base_api.get_list_by_param(endpoint,upper_params)\n        assert response_upper.status_code == 200\n        count_upper = len(response_upper.json())\n        print(f\"the lower count is {count_lower} and the upper count is {count_upper}\")\n        if case_sen == False:\n         assert count_lower == count_upper\n        else:\n>        assert count_lower != count_upper\nE        assert 0 != 0\n\ntestcase\\ACS\\test_api_acs_common.py:81: AssertionError"}, "attachments": [{"name": "Request Info", "source": "9e310179-d564-4274-8927-ad570ed54ff2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "52ded39d-8413-42eb-ae91-434bf2146db2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d91596c6-9fc6-4e75-b5c4-f79997a449e2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d68be1d2-40e5-4ee1-877d-484660475363-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749233842067, "stop": 1749233845284, "uuid": "66372be8-ec71-4479-9fc5-436c87963e3d", "historyId": "982a79b0e31bc885ce6fdba654d9b5a2", "testCaseId": "a02c8c29bb761f78eea1bf07390884d8", "fullName": "testcase.ACS.test_configuration_profile.TestConfigurationProfile#test_get_case_sensitive", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_configuration_profile"}, {"name": "subSuite", "value": "TestConfigurationProfile"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "36908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_configuration_profile"}]}