{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000263F66C0FD0>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000263F97E83D0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "e50f4f54-f61f-44a2-b0d9-e99c9a16df89-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9a3eaadf-5fd0-47a5-9e63-72d2f31309db-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "5797fbf8-8a5a-47f3-b1a9-4be4006b28f1-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "1dcf8b42-ce77-49c4-ab95-6d4f345788da-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4628d116-291e-482e-82d6-62421dfd4c9d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "adb9d09e-d656-4b0a-8e20-96a67bbb9fe2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0687338e-a328-478d-ab83-af79866c799c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "093ed57f-fa4b-4ef7-8e40-ded92a6b26a8-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9f438add-82a2-4946-912d-eda13e1e2413-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e3ceb918-5014-4f71-915f-52b904dd85f7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d160bb19-7b68-434c-9e99-34d7abeeb988-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "19d40ffc-50f3-4455-95ee-d16b62d4e4b4-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "83c38133-f90b-4e69-8a86-0a483f66e1e0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "e914e0cf-2197-4a2f-9db5-47ba95582f9f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e3352ae0-565e-42a3-bdfd-c3efa81fd086-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "47dd44b9-7392-4044-981c-c6f6d31801b8-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "68172261-7cf1-4048-badb-daebf7510a39-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "a39a51b1-fd45-4498-9900-2faec4a5d96c-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1750098160420, "stop": 1750098201085, "uuid": "5b0d0182-91b5-43b7-90e4-f14bd8da4512", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "2488-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}