{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x00000233633D7C70>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000233636DCD00>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "389e865a-e9ff-4f6b-ac8c-e8c2777b76fe-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "ce1bf280-ee51-4f75-a39b-8ec9756f0e11-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d71406d1-39b7-4957-a1c8-15e065303a39-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3ac67036-5093-4ffb-a841-dfc4d81ecc4d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8c904cea-57c9-4795-b565-d21ed4d93426-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d172987b-1d32-435a-82dd-234733c7c598-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "30b92302-dbed-4c3e-bd4d-fb4d243b2b74-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4d57da7d-fa50-4e00-b7bc-506f810ee061-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0702116e-5080-47ee-8c31-b889103bc5d0-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d3e536af-cfb1-4b23-b59b-826cc1d24a96-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b5d9bef1-e838-4142-b4ff-2228d863bc66-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "0bf9667c-ebee-4f12-91ee-fba9c696ddec-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "8d4cdf7c-c947-47bb-86fb-213e41f02d9c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "37e6ab30-4ce8-4724-8fe7-035260347f36-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "80d0c942-423e-4b08-a059-9f07177fbf0f-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "32ac218e-4ad0-430c-9870-0a88c7b45dbf-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "fb52e418-c9ad-4f8b-b067-cdf7f8fc0f9b-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f6f90d81-1a9d-40f8-a9b7-cbe7d5f71043-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749320218270, "stop": 1749320235462, "uuid": "136acdc5-4b7a-4fe7-8711-2ebc098432dd", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "18960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}