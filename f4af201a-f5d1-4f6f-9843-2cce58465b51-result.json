{"name": "Test - common function paging,create & delete twice ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002327CFDDD20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002327E574400>\n\n    @allure.feature('COMMON')\n    @allure.issue('GCPT-14915')\n    @allure.title('Test - common function paging,create & delete twice ')\n    def test_create_common(self,base_api):\n      ACSAPI.verify_get_list_paging(self,base_api,endpoint)\n>     ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_workflow.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002327CFDDD20>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002327E574400>\nendpoint = 'workflow'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n        assert response.status_code == 200\n        group_list_count = 0\n        if isinstance(response.json(), list):\n            group_list_count= len(response.json())\n            print(f\"The number of elements in the list is: {group_list_count}\")\n        else:\n            print(\"The returned JSON data is not a list.\")\n    \n        response = base_api.get_count(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:156: AssertionError"}, "attachments": [{"name": "Request Info", "source": "18357c86-0e11-4859-9d72-10acc119c5be-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c41e85a1-69d8-47a0-ad0d-08300d38d42e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "e6e95b0a-f454-4c70-aaf6-064d070d312c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "762817b8-8d82-4344-8e62-333edb99548e-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "c01b2dfb-cf23-4504-b068-7bf284c7837b-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3f3a9c6f-4e30-4ee2-9a03-155c2cc20799-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749534856153, "stop": 1749534864860, "uuid": "362b692e-a770-4301-95f3-df1d549b6a0e", "historyId": "8612e02145d3b9b3e39d80df759e46c6", "testCaseId": "15d7f3a69b34c15e898f73d2038339f7", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_create_common", "labels": [{"name": "feature", "value": "COMMON"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "19900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}], "links": [{"type": "issue", "url": "GCPT-14915", "name": "GCPT-14915"}]}