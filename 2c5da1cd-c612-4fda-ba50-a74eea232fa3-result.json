{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000001828DCC9240>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000001828F2EF580>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "315a219e-32e8-416e-a434-13b1dbda6c82-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "5f955300-4caf-47d1-a2c2-a8b018008394-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "7126af6c-36bc-43fc-bd30-5ce37248a2e7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f85de5f1-5690-4a0a-ae14-ecec7ec1acf2-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "f03cc721-7441-4e0b-9902-d28a1e2151b7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "400f2af0-c1a0-43c1-acb7-4186e312c6b8-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "9c92aae5-e826-4146-b5b4-11a7c8cd2dc2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "af7e6e2c-137d-49c8-b136-802a32d3b045-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "49cec687-6ec2-44d9-b517-2e77f1a50bc5-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c6ad5f10-3877-4400-8c6b-c28b8000c4f7-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "cfa81b73-6d73-45a0-9a15-e2f9015b1ea4-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "afcb13a3-e1cd-4289-ba5f-758c5966498b-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4c550f49-732f-449b-8024-d2b83ccd8532-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f076b506-1568-4a44-8553-85aaa38036f4-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "1f93b5c3-e879-4c8c-8d8f-7b44f8a180ac-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3fb59544-f98e-4941-b87c-3382a00eac72-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "4dd88653-dca1-4b26-b9b2-6baab07de63d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "82a23861-4be6-45b6-afb2-1ea5b1bad280-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749203126641, "stop": 1749203143711, "uuid": "564073d7-9b14-4a11-9769-da1da77cf845", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "23132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}