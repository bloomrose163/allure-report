{"name": "Test - crud record ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 200\n +  where 500 = <Response [500]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002327D008A00>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002320101C130>\n\n    @allure.title('Test - crud record ')\n    def test_crud(self,base_api):\n        global model_id\n        # create a record\n        global groups\n        json_data = load_json(file_paths[\"workflow\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_create = base_api.create(endpoint,json_data,need_random=True, field=\"name\")\n        model_id = response_create.json()['_id']\n        assert response_create.status_code == 200\n        # model_id = 'e002e1f5-8382-4f49-a445-1da88df9e99a'\n    \n        # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"update\"])\n        json_data[\"groups\"] = groups\n        # json_data[\"actions\"] = list(response.json()[0][\"actions\"])\n        response_put = base_api.update(endpoint,model_id,json_data,True,\"name\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n            # get info\n        name = \"test_workflow_11\"\n        new_param={\"name\": name.upper(),\"limit\": 3}\n        response_get = base_api.get_list_by_param(endpoint,new_param)\n        assert response_get.status_code == 200\n    \n        # delete the record\n        response_delete= base_api.delete(endpoint,params,model_id)\n>       assert response_delete.status_code == 200\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntestcase\\ACS\\test_workflow.py:176: AssertionError"}, "attachments": [{"name": "Request Info", "source": "184833c8-c281-4d30-bde3-19d06b74a156-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "93b3b727-bd52-4d9b-8d80-19a87c998a3d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "5d2566e7-9f28-4640-b27f-7aab360dc8f2-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "749f1944-88db-4bcc-91a2-8eec4d7a5f60-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "ee9a17a9-a8eb-4351-a2da-05ceeb54260c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "67e91c2b-bf70-412b-ad76-8718ebd2a8a1-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "3a7be2f1-9e46-4212-9cdc-826458a1d53a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "eb70f376-3073-4703-ad6f-fd1c13a6dced-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "faaeb591-278c-47da-a755-430dd89a1e65-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "dfc044ec-33ef-49ca-ab5f-276e76c3fd16-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749534902599, "stop": 1749534917652, "uuid": "a1d9d7e1-a2ab-4bbd-a94a-7bea952714e8", "historyId": "ce94767f27f842d643289db6d5ac0ddc", "testCaseId": "afd9ddea709b6fe93a0748baefcd22ee", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_crud", "labels": [{"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "19900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}]}