{"name": "Test - create provisioning record and get id", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_provisioning_record.TestProvisioningRecord object at 0x000002327CF21060>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x000002327E635EA0>\nfile_path = './testdata/ACS/provisioning_record_service_off.json'\n\n    @allure.title('Test - create provisioning record and get id')\n    @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"],file_paths[\"H248\"],file_paths[\"tdmgw\"],file_paths[\"sip\"],file_paths[\"mgcp\"]])\n    # @pytest.mark.parametrize('file_path',[file_paths[\"service_off\"]])\n    def test_crud(self,base_api,file_path):\n        json_data = load_json(file_path)\n        response_create = base_api.create_when_exist(endpoint,file_path,{\"deviceId\": \"CXNK00AFB83B\"},params=None)\n        assert response_create.status_code == 200\n        model_id = response_create.json()['_id']\n        print(\"the diff as following:\" , DeepDiff(json_data,response_create.json()))\n    \n    \n       # get info by id\n        response_get = base_api.get_by_id(endpoint,model_id)\n        assert response_get.status_code == 200\n        assert response_get.json()['_id'] == model_id\n    \n        model = endpoint.replace('-', '_')\n        expected_file_path = f\"./testdata/ACS/outputs/get_{model}_by_id.json\"\n        print(f\"the saved/expected file path is {expected_file_path}\")\n        if base_api.env == \"aws\":\n          save_file(expected_file_path,response_get.json())\n        else:\n          expected_response = load_json(expected_file_path)\n          print(\"the diff as following:\" , DeepDiff(expected_response,response_get.json()))\n    \n        # update the record\n        json_data = load_json(file_paths[\"data_dhcp\"])\n        response_put = base_api.update(endpoint,model_id,json_data,False,\"deviceId\")\n        assert response_put.status_code == 200\n        # aws return 200 and null body when put configuration profile\n        if base_api.env != \"aws\":\n          assert response_put.json()['_id'] == model_id\n          print(\"the diff as following:\" , DeepDiff(json_data,response_put.json()))\n    \n        # get record by parameters\n        response_get = base_api.get_list_by_param(endpoint,{\"deviceId\": \"CXNK00AFB83B\"})\n        assert response_get.status_code == 200\n        body = response_get.json()[0]\n        body[\"video\"][\"Enable\"] = True\n    \n        # update the record by query\n        response_put = base_api.update_with_query(endpoint,body)\n        assert response_get.status_code == 200\n        if base_api.env != \"aws\":\n          assert response_put.json()[\"video\"][\"Enable\"] == True\n    \n    \n    \n        # update apply-pppoe\n        endpoint_apply_pppoe = \"provisioning-record/apply-pppoe\"\n        json_data=None\n        response_put = base_api.update(endpoint_apply_pppoe,model_id,json_data,need_random=False, field=None)\n>       assert response_put.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_provisioning_record.py:141: AssertionError"}, "attachments": [{"name": "Request Info", "source": "89fcd9bf-c12f-43d8-b7d4-ab94910fa746-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "c4079306-d02d-4686-aab2-c0292864dccd-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "cfecd785-6e84-4c04-85fb-75f6f04b1dbb-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "f66b0527-c459-4235-93c2-a8340226e848-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "2bdffdf3-cd72-4e3f-9b75-e7810f47286d-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "9969a548-a123-437d-9488-4de7691ec36d-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "385510a3-7155-4810-bd50-185741c83d14-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "d818edb2-2c58-4806-a56b-90296d302a7f-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "621d95a0-99e2-4228-8708-dc4d2deef95c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3cc4267b-d280-4b5b-b3b1-dbac0a7f7c17-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "3a3fb2e1-2fa0-4116-8b50-8e56e1e0cfec-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4e325942-8b71-46bc-a008-cba9c678baa3-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "b674af7e-1d7d-4f17-a186-f2becefbca3c-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "4224d915-9973-46e6-bcd6-da92f6b1738b-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "70ba25cd-3abc-4b02-b0c6-dd169fb48a27-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "b2af2057-5403-416f-83d7-6b573ce37294-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "0b85290f-34e4-4a21-a617-904ff320e24a-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "3da9bb28-02c6-4618-bfa7-dc9b97afa1cd-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "file_path", "value": "'./testdata/ACS/provisioning_record_service_off.json'"}], "start": 1749534337412, "stop": 1749534361804, "uuid": "1938bec5-f89a-482b-9808-d54cc9fe3d99", "historyId": "9263e604e50e9044ae7213f6b8554e44", "testCaseId": "8a8796f9f07a30318bcd283bd7e604a7", "fullName": "testcase.ACS.test_provisioning_record.TestProvisioningRecord#test_crud", "labels": [{"name": "epic", "value": "Test - ProvisioningRecord"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_provisioning_record"}, {"name": "subSuite", "value": "TestProvisioningRecord"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "19900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_provisioning_record"}]}