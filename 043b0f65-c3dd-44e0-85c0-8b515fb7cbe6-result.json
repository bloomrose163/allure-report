{"name": "Test - common function paging,create & delete twice ", "status": "failed", "statusDetails": {"message": "AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "self = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002387D03E650>\nbase_api = <utils.base_api.BaseAPI object at 0x000002380283ECB0>\n\n    @allure.feature('COMMON')\n    @allure.issue('GCPT-14915')\n    @allure.title('Test - common function paging,create & delete twice ')\n    def test_create_common(self,base_api):\n      ACSAPI.verify_get_list_paging(self,base_api,endpoint)\n>     ACSAPI.verify_get_list_count(self,base_api,endpoint)\n\ntestcase\\ACS\\test_workflow.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.ACS.test_workflow.TestWorkflow object at 0x000002387D03E650>\nbase_api = <utils.base_api.BaseAPI object at 0x000002380283ECB0>\nendpoint = 'workflow'\n\n    def verify_get_list_count(self,base_api,endpoint):\n        response = base_api.get_list_by_param(endpoint,params=params)\n        assert response.status_code == 200\n        group_list_count = 0\n        if isinstance(response.json(), list):\n            group_list_count= len(response.json())\n            print(f\"The number of elements in the list is: {group_list_count}\")\n        else:\n            print(\"The returned JSON data is not a list.\")\n    \n        response = base_api.get_count(endpoint,params=params)\n>       assert response.status_code == 200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntestcase\\ACS\\test_api_acs_common.py:156: AssertionError"}, "attachments": [{"name": "Request Info", "source": "19d9547b-e8f3-4705-bbb7-b0e7cce78dd7-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "98ef41d6-2745-4706-b1fb-8e3b477d5bf9-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "62d2e5d3-050f-45d8-9235-2d72b426c882-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "98dc3c08-7dcd-45b4-8f92-10890fb6f852-attachment.json", "type": "application/json"}, {"name": "Request Info", "source": "d4692651-7db9-4e6c-bd17-d7c1a47707b5-attachment.json", "type": "application/json"}, {"name": "Response Info", "source": "306f21cc-7ea0-4c97-ac88-119fde4ce96e-attachment.json", "type": "application/json"}], "parameters": [{"name": "base_api", "value": "'test'"}], "start": 1749802235586, "stop": 1749802244047, "uuid": "8121c953-53d0-4810-9f0c-0dc9122fd602", "historyId": "8612e02145d3b9b3e39d80df759e46c6", "testCaseId": "15d7f3a69b34c15e898f73d2038339f7", "fullName": "testcase.ACS.test_workflow.TestWorkflow#test_create_common", "labels": [{"name": "feature", "value": "COMMON"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_workflow"}, {"name": "subSuite", "value": "TestWorkflow"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "41128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_workflow"}], "links": [{"type": "issue", "url": "GCPT-14915", "name": "GCPT-14915"}]}