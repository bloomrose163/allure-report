{"name": "Test - get all the static group member count with different param:{'memberInfo': 'CXNK00A5F0B4'}", "status": "broken", "statusDetails": {"message": "EOFError", "trace": "self = <testcase.ACS.test_static_group_member.TestStaticGroupMember object at 0x00000223EC1F1450>\nbase_api = <utils.base_api_acs.BaseAPIACS object at 0x00000223ED9F51B0>\nparam = {'memberInfo': 'CXNK00A5F0B4'}\n\n    @allure.feature('QUERY_COUNT')\n    @allure.title('Test - get all the static group member count with different param:{param}')\n    @pytest.mark.parametrize('param', [\n        None,\n        {\n            \"_id\": \"2919e3e4-7c12-4209-99bb-c0956153dab7\"\n        },\n        {\n            \"groupId\":\"a7a4dc84-7bf8-4eb8-883b-b7261f409bb3\"\n        },\n        {\n            \"memberInfo\":\"CXNK00A5F0B4\"\n        },\n        {\n            \"_id\": \"non-exsit\"\n        },\n        {\n            \"groupId\":\"non-exsit\"\n        },\n        {\n            \"memberInfo\":\"non-exsit\"\n        },\n        {\n            \"bUndiscovered\":\"False\"\n        },\n        {\n            \"bDiscovered\":\"False\"\n        },\n        {\n            \"bWithDeviceRecord\":\"False\"\n        },\n        {\n            \"bWithSubscriberInfo\":\"False\"\n        },\n        {\n            \"bIncludeInheritance\":\"False\"\n        },\n        {\n            \"bIncludeOtherDeviceIdForms\":\"True\"\n        }\n    ])\n    def test_get_member_count_param(self,base_api,param):\n>       response = base_api.get_count(endpoint,param)\n\ntestcase\\ACS\\test_static_group_member.py:325: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_api_acs.py:194: in get_count\n    ???\nutils\\base_api_acs.py:85: in request\n    )\nutils\\base_api_acs.py:127: in attach_to_allure\n    print(\"\\nREQUEST\\n\",request_json)\nutils\\base_api_acs.py:139: in write_json_to_excel\n    def write_json_to_excel(self,file_path, param1, param2):\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:348: in load_workbook\n    reader.read()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:303: in read\n    self.read_worksheets()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\reader\\excel.py:237: in read_worksheets\n    ws_parser.bind_all()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:465: in bind_all\n    self.bind_cells()\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:368: in bind_cells\n    for idx, row in self.parser.parse():\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\openpyxl\\worksheet\\_reader.py:156: in parse\n    for _, element in it:\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\xml\\etree\\ElementTree.py:1255: in iterator\n    data = source.read(16 * 1024)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:925: in read\n    data = self._read1(n)\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:993: in _read1\n    data += self._read2(n - len(data))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipExtFile name='xl/worksheets/sheet1.xml' mode='r' compress_type=deflate>\nn = 4096\n\n    def _read2(self, n):\n        if self._compress_left <= 0:\n            return b''\n    \n        n = max(n, self.MIN_READ_SIZE)\n        n = min(n, self._compress_left)\n    \n        data = self._fileobj.read(n)\n        self._compress_left -= len(data)\n        if not data:\n>           raise EOFError\nE           EOFError\n\nC:\\Users\\chan\\AppData\\Local\\Programs\\Python\\Python310\\lib\\zipfile.py:1028: EOFError"}, "attachments": [{"name": "Exception", "source": "68f90b05-385d-4977-a757-61c90da9a158-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_api", "value": "'test'"}, {"name": "param", "value": "{'memberInfo': 'CXNK00A5F0B4'}"}], "start": 1749177081119, "stop": 1749177081690, "uuid": "06a5cc03-0613-4a89-be90-3de5e16c964c", "historyId": "c0467859493cd5e9b0123f225794fa5e", "testCaseId": "d68b6f30de9612d42a7553a6e61283d4", "fullName": "testcase.ACS.test_static_group_member.TestStaticGroupMember#test_get_member_count_param", "labels": [{"name": "feature", "value": "QUERY_COUNT"}, {"name": "epic", "value": "ACS Static Group Member API"}, {"name": "parentSuite", "value": "testcase.ACS"}, {"name": "suite", "value": "test_static_group_member"}, {"name": "subSuite", "value": "TestStaticGroupMember"}, {"name": "host", "value": "Cherry-640879"}, {"name": "thread", "value": "19868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.ACS.test_static_group_member"}], "links": [{"type": "tms", "url": "CTM-312349", "name": "CTM-312349"}]}